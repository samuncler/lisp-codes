This folder contains the Macintosh Operating System interface files forMacintosh Common Lisp versions 3.3 & 4.2.  Traps for most current systemextensions such as QuickDraw GX, QuickTime, and AOCE are included.The files were generated by (mostly) automatic translation from theApple-supplied Pascal and C interface files. System calls that are not definedin these files are also not defined here. Many of these missing calls areimplemented by functions in the file "ccl:library;interfaces.lisp".These files will not work in MCL version 2.0.1 or earlier. Contact Digitoolif you want to use these files with MCL 2.0.1.There are over 5000 traps, 1000 record definitions, and 13000 constantdefinitions in these files. It has not been possible to verify that they are allcorrect. If you should find an error, please inform Digitool. If you make anychanges yourself, you will need to evaluate (reindex-interfaces). You can savesome time by supplying an optional argument: (reindex-interfaces :traps) willonly reindex the traps, while (reindex-interfaces :no-traps) will indexeverything except traps (that is, records, constants, and mactypes).Since MCL 2.0, record definitions could have a default storage type of :pointeror :handle. The new interfaces still support this feature in a compatible way,but its use is discouraged. Code that depends on a default storage type of:handle will generate a compiler warning. We recommend that you always specifyan explicit storage type when using functions that access records. The functionsthat are affected by this change are RREF, RSET, MAKE-RECORD, COPY-RECORD,CLEAR-RECORD, and DISPOSE-RECORD. You can also use HREF or PREF in place ofRREF.Notes on specific items:- The field :pat of record Pattern was called :array in the MCL 2.0 interfaces- The trap-type keyword given to _GetTrapAddress is ignored, so use _GetToolTrapAdress  and related traps.- Because Lisp has a character data type that is not interchangeable with byte  values (unlike C or Pascal), sometimes you may have to use the code-char or  char-code functions to manipulate record fields.