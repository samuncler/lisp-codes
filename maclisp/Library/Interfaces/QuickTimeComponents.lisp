(in-package :TRAPS); Generated from #P"Cohones:Lisp:Projects:PInterface Translator:Source interfaces:Quicktime 2.5 PInterfaces:QuickTimeComponents.p"; at Thursday May 23,1996 2:24:44 pm.; ;  	File:		QuickTimeComponents.p;  ;  	Contains:	QuickTime interfaces;  ;  	Version:	Technology:	;  				Release:	QuickTime 2.5 interfaces to use with ETO #20;  ;  	Copyright:	© 1984-1996 by Apple Computer, Inc.  All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, send the file and version;  				information (from above) and the problem description to:;  ;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __QUICKTIMECOMPONENTS__; $SETC __QUICKTIMECOMPONENTS__ := 1; $I+; $SETC QuickTimeComponentsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __COMPONENTS__|#(require-interface 'Components)#|                                              ; $I Components.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __IMAGECOMPRESSION__|#(require-interface 'ImageCompression)#|                                              ; $I ImageCompression.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MOVIES__|#(require-interface 'Movies)#|                                              ; $I Movies.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __QUICKDRAW__|#(require-interface 'Quickdraw)#|                                              ; $I Quickdraw.p |#                                             ; $ENDC; $IFC UNDEFINED __VIDEO__(require-interface 'Video)                      ; $I Video.p; $ENDC#|                                              ; $IFC UNDEFINED __MEMORY__|#(require-interface 'Memory)#|                                              ; $I Memory.p |#                                             ; $ENDC; $IFC UNDEFINED __SOUND__(require-interface 'Sound)                      ; $I Sound.p; $ENDC; $IFC UNDEFINED __QUICKTIMEMUSIC__(require-interface 'QuickTimeMusic)             ; $I QuickTimeMusic.p; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $clockComponentType :|clok|)(defconstant $systemTickClock :|tick|)          ;   subtype: 60ths since boot		 (defconstant $systemSecondClock :|seco|)        ;   subtype: seconds since 1904		 (defconstant $systemMillisecondClock :|mill|)   ;   subtype: 1000ths since boot		 (defconstant $systemMicrosecondClock :|micr|)   ;   subtype: 1000000ths since boot	 (defconstant $kClockRateIsLinear 1)(defconstant $kClockImplementsCallBacks 2);  * These are Clock procedures * ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockGetTime" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (out (:pointer :timerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock out ((+ (ash 4 16) 1) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockNewCallBack" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (tb (:pointer :timebaserecord)) (callBackType :signed-integer))   (:stack (:pointer :callbackrecord))   (:stack-trap #xA82A :d0 0 aClock tb callBackType ((+ (ash 6 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockDisposeCallBack" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb ((+ (ash 4 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockCallMeWhen" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)) (param1 :signed-long) (param2 :signed-long) (param3 :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb param1 param2 param3 ((+ (ash 16 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockCancelCallBack" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb ((+ (ash 4 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockRateChanged" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb ((+ (ash 4 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockTimeChanged" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb ((+ (ash 4 16) 7) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockSetTimeBase" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (tb (:pointer :timebaserecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock tb ((+ (ash 4 16) 8) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockStartStopChanged" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (cb (:pointer :callbackrecord)) (startChanged :boolean) (stopChanged :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock cb startChanged stopChanged ((+ (ash 8 16) 9) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_ClockGetRate" ("QuickTimeLib")) ((aClock (:pointer :componentinstancerecord)) (rate (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 aClock rate ((+ (ash 4 16) 10) :signed-longint))); $ENDC(defconstant $StandardCompressionType :|scdi|)(defconstant $StandardCompressionSubType :|imag|)(def-mactype :scmodalfilterprocptr (find-mactype ':pointer));  FUNCTION SCModalFilter(theDialog: DialogPtr; VAR theEvent: EventRecord; VAR itemHit: INTEGER; refcon: LONGINT): BOOLEAN; (def-mactype :scmodalhookprocptr (find-mactype ':pointer));  FUNCTION SCModalHook(theDialog: DialogPtr; itemHit: INTEGER; params: UNIV Ptr; refcon: LONGINT): INTEGER; (def-mactype :scmodalfilterupp (find-mactype ':pointer))(def-mactype :scmodalhookupp (find-mactype ':pointer));  	Preference flags. (defconstant $scListEveryCodec #x2)(defconstant $scAllowZeroFrameRate #x4)(defconstant $scAllowZeroKeyFrameRate #x8)(defconstant $scShowBestDepth #x10)(defconstant $scUseMovableModal #x20);  	Possible test flags for setting test image. (defconstant $scPreferCropping #x1)(defconstant $scPreferScaling #x2)(defconstant $scPreferScalingAndCropping #x3);  	Dimensions of the image preview box. (defconstant $scTestImageWidth 80)(defconstant $scTestImageHeight 80);  	Possible items returned by hookProc. (defconstant $scOKItem 1)(defconstant $scCancelItem 2)(defconstant $scCustomItem 3);  	Result returned when user cancelled. (defconstant $scUserCancelled 1);  	Get/SetInfo structures. (def-mactype :scspatialsettingsptr (find-mactype '(:pointer :scspatialsettings)))(defrecord SCSpatialSettings    (CodecType :ostype)   (codec (:pointer :componentrecord))   (depth :signed-integer)   (spatialQuality :signed-long)   )(def-mactype :sctemporalsettingsptr (find-mactype '(:pointer :sctemporalsettings)))(defrecord SCTemporalSettings    (temporalQuality :signed-long)   (frameRate :signed-long)   (keyFrameRate :signed-long)   )(def-mactype :scdataratesettingsptr (find-mactype '(:pointer :scdataratesettings)))(defrecord SCDataRateSettings    (dataRate :signed-long)   (frameDuration :signed-long)   (minSpatialQuality :signed-long)   (minTemporalQuality :signed-long)   )(def-mactype :scextendedprocsptr (find-mactype '(:pointer :scextendedprocs)))(defrecord SCExtendedProcs    (filterProc :pointer)   (hookProc :pointer)   (refcon :signed-long)   (customName (:string 31))   );  	Get/SetInfo selectors (defconstant $scSpatialSettingsType :|sptl|)    ;   pointer to SCSpatialSettings struct (defconstant $scTemporalSettingsType :|tprl|)   ;   pointer to SCTemporalSettings struct (defconstant $scDataRateSettingsType :|drat|)   ;   pointer to SCDataRateSettings struct (defconstant $scColorTableType :|clut|)         ;   pointer to CTabHandle (defconstant $scProgressProcType :|prog|)       ;   pointer to ProgressRecord struct (defconstant $scExtendedProcsType :|xprc|)      ;   pointer to SCExtendedProcs struct (defconstant $scPreferenceFlagsType :|pref|)    ;   pointer to long (defconstant $scSettingsStateType :|ssta|)      ;   pointer to Handle (defconstant $scSequenceIDType :|sequ|)         ;   pointer to ImageSequence (defconstant $scWindowPositionType :|wndw|)     ;   pointer to Point (defconstant $scCodecFlagsType :|cflg|)         ;   pointer to CodecFlags (defconstant $scCodecSettingsType :|cdec|)      ;   pointer to Handle (defconstant $scForceKeyValueType :|ksim|)      ;   pointer to long ;  	scTypeNotFoundErr returned by Get/SetInfo when type cannot be found. (def-mactype :scparamsptr (find-mactype '(:pointer :scparams)))(defrecord SCParams    (flags :signed-long)   (theCodecType :ostype)   (theCodec (:pointer :componentrecord))   (spatialQuality :signed-long)   (temporalQuality :signed-long)   (depth :signed-integer)   (frameRate :signed-long)   (keyFrameRate :signed-long)   (reserved1 :signed-long)   (reserved2 :signed-long)   )(defconstant $scGetCompression 1)(defconstant $scShowMotionSettings #x1)(defconstant $scSettingsChangedItem -1)(defconstant $scCompressFlagIgnoreIdenticalFrames 1);  * These are Progress procedures * ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCGetCompressionExtended" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (params (:pointer :scparams)) (where :point) (filterProc :pointer) (hookProc :pointer) (refcon :signed-long) (customName (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci params where filterProc hookProc refcon customName ((+ (ash 24 16) 1) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCPositionRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (rp (:pointer :rect)) (where (:pointer :point)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci rp where ((+ (ash 8 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCPositionDialog" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (id :signed-integer) (where (:pointer :point)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci id where ((+ (ash 6 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCSetTestImagePictHandle" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (testPict (:handle :picture)) (testRect (:pointer :rect)) (testFlags :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci testPict testRect testFlags ((+ (ash 10 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCSetTestImagePictFile" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (testFileRef :signed-integer) (testRect (:pointer :rect)) (testFlags :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci testFileRef testRect testFlags ((+ (ash 8 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCSetTestImagePixMap" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (testPixMap (:handle :pixmap)) (testRect (:pointer :rect)) (testFlags :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci testPixMap testRect testFlags ((+ (ash 10 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCGetBestDeviceRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci r ((+ (ash 4 16) 7) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCRequestImageSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 10) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressImage" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (src (:handle :pixmap)) (srcRect (:pointer :rect)) (desc (:pointer (:handle :imagedescription))) (data (:pointer :handle)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci src srcRect desc data ((+ (ash 16 16) 11) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressPicture" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (srcPicture (:handle :picture)) (dstPicture (:handle :picture)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci srcPicture dstPicture ((+ (ash 8 16) 12) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressPictureFile" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (srcRefNum :signed-integer) (dstRefNum :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci srcRefNum dstRefNum ((+ (ash 4 16) 13) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCRequestSequenceSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 14) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressSequenceBegin" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (src (:handle :pixmap)) (srcRect (:pointer :rect)) (desc (:pointer (:handle :imagedescription))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci src srcRect desc ((+ (ash 12 16) 15) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressSequenceFrame" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (src (:handle :pixmap)) (srcRect (:pointer :rect)) (data (:pointer :handle)) (dataSize (:pointer :signed-long)) (notSyncFlag (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci src srcRect data dataSize notSyncFlag ((+ (ash 20 16) 16) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCCompressSequenceEnd" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 17) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCDefaultPictHandleSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (srcPicture (:handle :picture)) (motion :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci srcPicture motion ((+ (ash 6 16) 18) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCDefaultPictFileSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (srcRef :signed-integer) (motion :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci srcRef motion ((+ (ash 4 16) 19) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCDefaultPixMapSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (src (:handle :pixmap)) (motion :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci src motion ((+ (ash 6 16) 20) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCGetInfo" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (infoType :ostype) (info :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci infoType info ((+ (ash 8 16) 21) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCSetInfo" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (infoType :ostype) (info :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci infoType info ((+ (ash 8 16) 22) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCNewGWorld" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (gwp (:pointer (:pointer :cgrafport))) (rp (:pointer :rect)) (flags :unsigned-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci gwp rp flags ((+ (ash 12 16) 23) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCSetCompressFlags" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci flags ((+ (ash 4 16) 24) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SCGetCompressFlags" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (flags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci flags ((+ (ash 4 16) 25) :signed-longint))); $ENDC(defconstant $TweenComponentType :|twen|)(def-mactype :tweenercomponent (find-mactype '(:pointer :componentinstancerecord)))(def-mactype :tweenrecordptr (find-mactype '(:pointer :tweenrecord)))(def-mactype :tweenerdataprocptr (find-mactype ':pointer));  FUNCTION TweenerData(VAR tr: TweenRecord; tweenData: UNIV Ptr; tweenDataSize: LONGINT; dataDescriptionSeed: LONGINT; dataDescription: Handle; asyncCompletionProc: ICMCompletionProcRecordPtr; transferProc: ProcPtr; refCon: UNIV Ptr): ComponentResult; (def-mactype :tweenerdataupp (find-mactype ':pointer))(defrecord TweenRecord    (version :signed-long)   (container :handle)   (tweenAtom :signed-long)   (dataAtom :signed-long)   (percent :signed-long)   (dataProc :pointer)   (private1 :pointer)   (private2 :pointer)   ); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TweenerInitialize" ("QuickTimeLib")) ((tc (:pointer :componentinstancerecord)) (container :handle) (tweenAtom :signed-long) (dataAtom :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 tc container tweenAtom dataAtom ((+ (ash 12 16) 1) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TweenerDoTween" ("QuickTimeLib")) ((tc (:pointer :componentinstancerecord)) (tr (:pointer :tweenrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 tc tr ((+ (ash 4 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TweenerReset" ("QuickTimeLib")) ((tc (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 tc ((+ (ash 0 16) 3) :signed-longint))); $ENDC(defconstant $TCSourceRefNameType :|name|)(defconstant $tcDropFrame #x1)(defconstant $tc24HourMax #x2)(defconstant $tcNegTimesOK #x4)(defconstant $tcCounter #x8)(def-mactype :timecodedefptr (find-mactype '(:pointer :timecodedef)))(defrecord TimeCodeDef    (flags :signed-long)                         ;   drop-frame, etc.    (fTimeScale :signed-long)                    ;   time scale of frameDuration (eg. 2997)    (frameDuration :signed-long)                 ;   duration of each frame (eg. 100)    (numFrames :signed-byte)                     ;   frames/sec for timecode (eg. 30) OR frames/tick for counter mode    (padding :signed-byte)                       ;   unused padding byte    )(defconstant $tctNegFlag #x80)                  ;   negative bit is in minutes (def-mactype :timecodetimeptr (find-mactype '(:pointer :timecodetime)))(defrecord TimeCodeTime    (hours :signed-byte)   (minutes :signed-byte)   (seconds :signed-byte)   (frames :signed-byte)   )(def-mactype :timecodecounterptr (find-mactype '(:pointer :timecodecounter)))(defrecord TimeCodeCounter    (counter :signed-long)   )(def-mactype :timecoderecordptr (find-mactype '(:pointer :timecoderecord)))(defrecord TimeCodeRecord    (:variant       (      (t :timecodetime)      )      (      (c :timecodecounter)      )      )   )(def-mactype :timecodedescriptionptr (find-mactype '(:pointer :timecodedescription)))(defrecord TimeCodeDescription    (descSize :signed-long)                      ;   standard sample description header    (dataFormat :signed-long)   (resvd1 :signed-long)   (resvd2 :signed-integer)   (dataRefIndex :signed-integer)   (flags :signed-long)                         ;   timecode specific stuff    (TimeCodeDef :timecodedef)   (srcRef (:array :signed-long 1))   )(def-mactype :timecodedescriptionhandle (find-mactype '(:handle :timecodedescription)))(defconstant $tcdfShowTimeCode #x1)(def-mactype :tctextoptionsptr (find-mactype '(:pointer :tctextoptions)))(defrecord TCTextOptions    (txFont :signed-integer)   (txFace :signed-integer)   (txSize :signed-integer)   (foreColor :rgbcolor)   (backColor :rgbcolor)   ); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCGetCurrentTimeCode" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (frameNum (:pointer :signed-long)) (tcdef (:pointer :timecodedef)) (tcrec (:pointer :timecoderecord)) (srcRefH (:pointer (:pointer :userdatarecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh frameNum tcdef tcrec srcRefH ((+ (ash 16 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCGetTimeCodeAtTime" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (mediaTime :signed-long) (frameNum (:pointer :signed-long)) (tcdef (:pointer :timecodedef)) (tcdata (:pointer :timecoderecord)) (srcRefH (:pointer (:pointer :userdatarecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh mediaTime frameNum tcdef tcdata srcRefH ((+ (ash 20 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCTimeCodeToString" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (tcdef (:pointer :timecodedef)) (tcrec (:pointer :timecoderecord)) (tcStr (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh tcdef tcrec tcStr ((+ (ash 12 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCTimeCodeToFrameNumber" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (tcdef (:pointer :timecodedef)) (tcrec (:pointer :timecoderecord)) (frameNumber (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh tcdef tcrec frameNumber ((+ (ash 12 16) 260) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCFrameNumberToTimeCode" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (frameNumber :signed-long) (tcdef (:pointer :timecodedef)) (tcrec (:pointer :timecoderecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh frameNumber tcdef tcrec ((+ (ash 12 16) 261) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCGetSourceRef" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (tcdH (:handle :timecodedescription)) (srefH (:pointer (:pointer :userdatarecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh tcdH srefH ((+ (ash 8 16) 262) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCSetSourceRef" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (tcdH (:handle :timecodedescription)) (srefH (:pointer :userdatarecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh tcdH srefH ((+ (ash 8 16) 263) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCSetTimeCodeFlags" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (flags :signed-long) (flagsMask :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh flags flagsMask ((+ (ash 8 16) 264) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCGetTimeCodeFlags" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (flags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh flags ((+ (ash 4 16) 265) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCSetDisplayOptions" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (textOptions (:pointer :tctextoptions)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh textOptions ((+ (ash 4 16) 266) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TCGetDisplayOptions" ("QuickTimeLib")) ((mh (:pointer :componentinstancerecord)) (textOptions (:pointer :tctextoptions)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 mh textOptions ((+ (ash 4 16) 267) :signed-longint))); $ENDC(def-mactype :movieimportcomponent (find-mactype '(:pointer :componentinstancerecord)))(def-mactype :movieexportcomponent (find-mactype '(:pointer :componentinstancerecord)))(defconstant $MovieImportType :|eat |)(defconstant $MovieExportType :|spit|)(defconstant $canMovieImportHandles #x1)(defconstant $canMovieImportFiles #x2)(defconstant $hasMovieImportUserInterface #x4)(defconstant $canMovieExportHandles #x8)(defconstant $canMovieExportFiles #x10)(defconstant $hasMovieExportUserInterface #x20)(defconstant $dontAutoFileMovieImport #x40)(defconstant $canMovieExportAuxDataHandle #x80)(defconstant $canMovieImportValidateHandles #x100)(defconstant $canMovieImportValidateFile #x200)(defconstant $dontRegisterWithEasyOpen #x400)(defconstant $canMovieImportInPlace #x800)(defconstant $movieImportSubTypeIsFileExtension #x1000)(defconstant $movieImportCreateTrack 1)(defconstant $movieImportInParallel 2)(defconstant $movieImportMustUseTrack 4)(defconstant $movieImportResultUsedMultipleTracks 8)(defconstant $kMovieExportTextOnly 0)(defconstant $kMovieExportAbsoluteTime 1)(defconstant $kMovieExportRelativeTime 2); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportHandle" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dataH :handle) (theMovie (:pointer :movierecord)) (targetTrack (:pointer :trackrecord)) (usedTrack (:pointer (:pointer :trackrecord))) (atTime :signed-long) (addedDuration (:pointer :signed-long)) (inFlags :signed-long) (outFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dataH theMovie targetTrack usedTrack atTime addedDuration inFlags outFlags ((+ (ash 32 16) 1) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportFile" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theFile (:pointer :fsspec)) (theMovie (:pointer :movierecord)) (targetTrack (:pointer :trackrecord)) (usedTrack (:pointer (:pointer :trackrecord))) (atTime :signed-long) (addedDuration (:pointer :signed-long)) (inFlags :signed-long) (outFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theFile theMovie targetTrack usedTrack atTime addedDuration inFlags outFlags ((+ (ash 32 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetSampleDuration" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (duration :signed-long) (scale :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci duration scale ((+ (ash 8 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetSampleDescription" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (desc (:handle :sampledescription)) (mediaType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci desc mediaType ((+ (ash 8 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetMediaFile" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (alias (:handle :aliasrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci alias ((+ (ash 4 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetDimensions" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (width :signed-long) (height :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci width height ((+ (ash 8 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetChunkSize" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (chunkSize :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci chunkSize ((+ (ash 4 16) 7) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetProgressProc" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (proc :pointer) (refcon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci proc refcon ((+ (ash 8 16) 8) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetAuxiliaryData" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (data :handle) (handleType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci data handleType ((+ (ash 8 16) 9) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetFromScrap" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (fromScrap :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci fromScrap ((+ (ash 2 16) 10) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportDoUserDialog" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theFile (:pointer :fsspec)) (theData :handle) (canceled (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theFile theData canceled ((+ (ash 12 16) 11) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportSetDuration" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (duration :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci duration ((+ (ash 4 16) 12) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportGetAuxiliaryDataType" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (auxType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci auxType ((+ (ash 4 16) 13) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportValidate" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theFile (:pointer :fsspec)) (theData :handle) (valid (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theFile theData valid ((+ (ash 12 16) 14) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportGetFileType" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (fileType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci fileType ((+ (ash 4 16) 15) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieImportDataRef" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dataRef :handle) (dataRefType :ostype) (theMovie (:pointer :movierecord)) (targetTrack (:pointer :trackrecord)) (usedTrack (:pointer (:pointer :trackrecord))) (atTime :signed-long) (addedDuration (:pointer :signed-long)) (inFlags :signed-long) (outFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dataRef dataRefType theMovie targetTrack usedTrack atTime addedDuration inFlags outFlags ((+ (ash 36 16) 16) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportToHandle" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dataH :handle) (theMovie (:pointer :movierecord)) (onlyThisTrack (:pointer :trackrecord)) (startTime :signed-long) (duration :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dataH theMovie onlyThisTrack startTime duration ((+ (ash 20 16) 128) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportToFile" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theFile (:pointer :fsspec)) (theMovie (:pointer :movierecord)) (onlyThisTrack (:pointer :trackrecord)) (startTime :signed-long) (duration :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theFile theMovie onlyThisTrack startTime duration ((+ (ash 20 16) 129) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportGetAuxiliaryData" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dataH :handle) (handleType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dataH handleType ((+ (ash 8 16) 131) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportSetProgressProc" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (proc :pointer) (refcon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci proc refcon ((+ (ash 8 16) 132) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportSetSampleDescription" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (desc (:handle :sampledescription)) (mediaType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci desc mediaType ((+ (ash 8 16) 133) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportDoUserDialog" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theMovie (:pointer :movierecord)) (onlyThisTrack (:pointer :trackrecord)) (startTime :signed-long) (duration :signed-long) (canceled (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theMovie onlyThisTrack startTime duration canceled ((+ (ash 20 16) 134) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_MovieExportGetCreatorType" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (creator (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci creator ((+ (ash 4 16) 135) :signed-longint))); $ENDC;   Text Export Display Info data structure (def-mactype :textdisplaydataptr (find-mactype '(:pointer :textdisplaydata)))(defrecord TextDisplayData    (displayFlags :signed-long)   (textJustification :signed-long)   (bgColor :rgbcolor)   (textBox :rect)   (beginHilite :signed-integer)   (endHilite :signed-integer)   (hiliteColor :rgbcolor)   (doHiliteColor :boolean)   (filler :signed-byte)   (scrollDelayDur :signed-long)   (dropShadowOffset :point)   (dropShadowTransparency :signed-integer)   )(def-mactype :textexportcomponent (find-mactype '(:pointer :componentinstancerecord))); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TextExportGetDisplayData" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (textDisplay (:pointer :textdisplaydata)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci textDisplay ((+ (ash 4 16) 256) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TextExportGetTimeFraction" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (movieTimeFraction (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci movieTimeFraction ((+ (ash 4 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TextExportSetTimeFraction" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (movieTimeFraction :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci movieTimeFraction ((+ (ash 4 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TextExportGetSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (setting (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci setting ((+ (ash 4 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_TextExportSetSettings" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (setting :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci setting ((+ (ash 4 16) 260) :signed-longint))); $ENDC; ; **************; ; 	File Preview Components; ; **************; (def-mactype :pnotcomponent (find-mactype '(:pointer :componentinstancerecord)))(defconstant $pnotComponentWantsEvents 1)(defconstant $pnotComponentNeedsNoCache 2)(defconstant $ShowFilePreviewComponentType :|pnot|)(defconstant $CreateFilePreviewComponentType :|pmak|); CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_PreviewShowData" ("QuickTimeLib")) ((p (:pointer :componentinstancerecord)) (dataType :ostype) (data :handle) (inHere (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 p dataType data inHere ((+ (ash 12 16) 1) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_PreviewMakePreview" ("QuickTimeLib")) ((p (:pointer :componentinstancerecord)) (previewType (:pointer :ostype)) (previewResult (:pointer :handle)) (sourceFile (:pointer :fsspec)) (progress (:pointer :icmprogressprocrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 p previewType previewResult sourceFile progress ((+ (ash 16 16) 2) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_PreviewMakePreviewReference" ("QuickTimeLib")) ((p (:pointer :componentinstancerecord)) (previewType (:pointer :ostype)) (resID (:pointer :signed-integer)) (sourceFile (:pointer :fsspec)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 p previewType resID sourceFile ((+ (ash 12 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_PreviewEvent" ("QuickTimeLib")) ((p (:pointer :componentinstancerecord)) (e (:pointer :eventrecord)) (handledEvent (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 p e handledEvent ((+ (ash 8 16) 4) :signed-longint))); $ENDC(def-mactype :datahcompletionprocptr (find-mactype ':pointer));  PROCEDURE DataHCompletion(request: Ptr; refcon: LONGINT; err: OSErr); (def-mactype :datahcompletionupp (find-mactype ':pointer))(defconstant $kDataHCanRead #x1)(defconstant $kDataHSpecialRead #x2)(defconstant $kDataHSpecialReadFile #x4)(defconstant $kDataHCanWrite #x8)(defconstant $kDataHSpecialWrite #x10)(defconstant $kDataHSpecialWriteFile #x20)(defconstant $kDataHCanStreamingWrite #x40)(defconstant $kDataHMustCheckDataRef #x80)(def-mactype :datahvolumelistrecordptr (find-mactype '(:pointer :datahvolumelistrecord)))(defrecord DataHVolumeListRecord    (vRefNum :signed-integer)   (flags :signed-long)   )(def-mactype :datahvolumelistptr (find-mactype '(:pointer :datahvolumelistrecord)))(def-mactype :datahvolumelist (find-mactype '(:handle :datahvolumelistrecord)))(defconstant $kDataHExtendedSchedule :|xtnd|)(def-mactype :datahschedulerecordptr (find-mactype '(:pointer :datahschedulerecord)))(defrecord DataHScheduleRecord    (timeNeededBy :timerecord)   (extendedID :signed-long)                    ;   always is kDataHExtendedSchedule    (extendedVers :signed-long)                  ;   always set to 0    (priority :signed-long)                      ;   100.0 or more means must have. lower numbersÉ    )(def-mactype :datahscheduleptr (find-mactype '(:pointer :datahschedulerecord))); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetData" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (h :handle) (hOffset :signed-long) (offset :signed-long) (size :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh h hOffset offset size ((+ (ash 16 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHPutData" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (h :handle) (hOffset :signed-long) (offset (:pointer :signed-long)) (size :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh h hOffset offset size ((+ (ash 16 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHFlushData" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHOpenForWrite" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHCloseForWrite" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHOpenForRead" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 8) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHCloseForRead" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 9) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHSetDataRef" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (dataRef :handle))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh dataRef ((+ (ash 4 16) 10) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetDataRef" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (dataRef (:pointer :handle)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh dataRef ((+ (ash 4 16) 11) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHCompareDataRef" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (dataRef :handle) (equal (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh dataRef equal ((+ (ash 8 16) 12) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHTask" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 13) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHScheduleData" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (PlaceToPutDataPtr :pointer) (FileOffset :signed-long) (DataSize :signed-long) (RefCon :signed-long) (scheduleRec (:pointer :datahschedulerecord)) (CompletionRtn :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh PlaceToPutDataPtr FileOffset DataSize RefCon scheduleRec CompletionRtn ((+ (ash 24 16) 14) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHFinishData" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (PlaceToPutDataPtr :pointer) (Cancel :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh PlaceToPutDataPtr Cancel ((+ (ash 6 16) 15) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHFlushCache" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh ((+ (ash 0 16) 16) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHResolveDataRef" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (theDataRef :handle) (wasChanged (:pointer :boolean)) (userInterfaceAllowed :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh theDataRef wasChanged userInterfaceAllowed ((+ (ash 10 16) 17) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetFileSize" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (fileSize (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh fileSize ((+ (ash 4 16) 18) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHCanUseDataRef" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (dataRef :handle) (useFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh dataRef useFlags ((+ (ash 8 16) 19) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetVolumeList" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (volumeList (:pointer (:handle :datahvolumelistrecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh volumeList ((+ (ash 4 16) 20) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHWrite" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (data :pointer) (offset :signed-long) (size :signed-long) (completion :pointer) (refCon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh data offset size completion refCon ((+ (ash 20 16) 21) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHPreextend" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (maxToAdd :signed-long) (spaceAdded (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh maxToAdd spaceAdded ((+ (ash 8 16) 22) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHSetFileSize" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (fileSize :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh fileSize ((+ (ash 4 16) 23) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetFreeSpace" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (freeSize (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh freeSize ((+ (ash 4 16) 24) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHCreateFile" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (creator :ostype) (deleteExisting :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh creator deleteExisting ((+ (ash 6 16) 25) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetPreferredBlockSize" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (blockSize (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh blockSize ((+ (ash 4 16) 26) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetDeviceIndex" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (deviceIndex (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh deviceIndex ((+ (ash 4 16) 27) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHIsStreamingDataHandler" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (yes (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh yes ((+ (ash 4 16) 28) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetDataInBuffer" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (startOffset :signed-long) (size (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh startOffset size ((+ (ash 8 16) 29) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetScheduleAheadTime" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (millisecs (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh millisecs ((+ (ash 4 16) 30) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHSetCacheSizeLimit" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (cacheSizeLimit :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh cacheSizeLimit ((+ (ash 4 16) 31) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetCacheSizeLimit" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (cacheSizeLimit (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh cacheSizeLimit ((+ (ash 4 16) 32) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetMovie" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (theMovie (:pointer (:pointer :movierecord))) (id (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh theMovie id ((+ (ash 8 16) 33) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHAddMovie" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (theMovie (:pointer :movierecord)) (id (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh theMovie id ((+ (ash 8 16) 34) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHUpdateMovie" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (theMovie (:pointer :movierecord)) (id :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh theMovie id ((+ (ash 6 16) 35) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHDoesBuffer" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (buffersReads (:pointer :boolean)) (buffersWrites (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh buffersReads buffersWrites ((+ (ash 8 16) 36) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHGetFileName" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (str (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh str ((+ (ash 4 16) 37) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_DataHPlaybackHints" ("QuickTimeLib")) ((dh (:pointer :componentinstancerecord)) (flags :signed-long) (minFileOffset :signed-long) (maxFileOffset :signed-long) (bytesPerSecond :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 dh flags minFileOffset maxFileOffset bytesPerSecond ((+ (ash 16 16) 259) :signed-longint))); $ENDC;   Standard type for video digitizers  (defconstant $videoDigitizerComponentType :|vdig|)(defconstant $vdigInterfaceRev 2);   Input Format Standards  (defconstant $ntscIn 0)                         ;   current input format  (defconstant $currentIn 0)                      ;   ntsc input format  (defconstant $palIn 1)                          ;   pal input format  (defconstant $secamIn 2)                        ;   secam input format  (defconstant $ntscReallyIn 3)                   ;   ntsc input format  ;   Input Formats  (defconstant $compositeIn 0)                    ;   input is composite format  (defconstant $sVideoIn 1)                       ;   input is sVideo format  (defconstant $rgbComponentIn 2)                 ;   input is rgb component format  (defconstant $rgbComponentSyncIn 3)             ;   input is rgb component format (sync on green?) (defconstant $yuvComponentIn 4)                 ;   input is yuv component format  (defconstant $yuvComponentSyncIn 5)             ;   input is yuv component format (sync on green?)  (defconstant $tvTunerIn 6);   Video Digitizer PlayThru States  (defconstant $vdPlayThruOff 0)(defconstant $vdPlayThruOn 1);   Input Color Space Modes  (defconstant $vdDigitizerBW 0)                  ;   black and white  (defconstant $vdDigitizerRGB 1)                 ;   rgb color  ;   Phase Lock Loop Modes  (defconstant $vdBroadcastMode 0)                ;   Broadcast / Laser Disk video mode  (defconstant $vdVTRMode 1)                      ;   VCR / Magnetic media mode  ;   Field Select Options  (defconstant $vdUseAnyField 0)                  ;   Digitizers choice on field use  (defconstant $vdUseOddField 1)                  ;   Use odd field for half size vert and smaller  (defconstant $vdUseEvenField 2)                 ;   Use even field for half size vert and smaller  ;   vdig types  (defconstant $vdTypeBasic 0)                    ;   basic, no clipping  (defconstant $vdTypeAlpha 1)                    ;   supports clipping with alpha channel  (defconstant $vdTypeMask 2)                     ;   supports clipping with mask plane  (defconstant $vdTypeKey 3)                      ;   supports clipping with key color(s)  ;   Digitizer Input Capability/Current Flags	 (defconstant $digiInDoesNTSC #x1)               ;   digitizer supports NTSC input format  (defconstant $digiInDoesPAL #x2)                ;   digitizer supports PAL input format  (defconstant $digiInDoesSECAM #x4)              ;   digitizer supports SECAM input format  (defconstant $digiInDoesGenLock #x80)           ;   digitizer does genlock  (defconstant $digiInDoesComposite #x100)        ;   digitizer supports composite input type  (defconstant $digiInDoesSVideo #x200)           ;   digitizer supports S-Video input type  (defconstant $digiInDoesComponent #x400)        ;   digitizer supports component = rgb, input type  (defconstant $digiInVTR_Broadcast #x800)        ;   digitizer can differentiate between the two  (defconstant $digiInDoesColor #x1000)           ;   digitizer supports color  (defconstant $digiInDoesBW #x2000)              ;   digitizer supports black & white  ;   Digitizer Input Current Flags = these are valid only during active operating conditions,	 (defconstant $digiInSignalLock #x80000000)      ;   digitizer detects input signal is locked, this bit = horiz lock || vertical lock  ;   Digitizer Output Capability/Current Flags  (defconstant $digiOutDoes1 #x1)                 ;   digitizer supports 1 bit pixels  (defconstant $digiOutDoes2 #x2)                 ;   digitizer supports 2 bit pixels  (defconstant $digiOutDoes4 #x4)                 ;   digitizer supports 4 bit pixels  (defconstant $digiOutDoes8 #x8)                 ;   digitizer supports 8 bit pixels  (defconstant $digiOutDoes16 #x10)               ;   digitizer supports 16 bit pixels  (defconstant $digiOutDoes32 #x20)               ;   digitizer supports 32 bit pixels  (defconstant $digiOutDoesDither #x40)           ;   digitizer dithers in indexed modes  (defconstant $digiOutDoesStretch #x80)          ;   digitizer can arbitrarily stretch  (defconstant $digiOutDoesShrink #x100)          ;   digitizer can arbitrarily shrink  (defconstant $digiOutDoesMask #x200)            ;   digitizer can mask to clipping regions  (defconstant $digiOutDoesDouble #x800)          ;   digitizer can stretch to exactly double size  (defconstant $digiOutDoesQuad #x1000)           ;   digitizer can stretch exactly quadruple size  (defconstant $digiOutDoesQuarter #x2000)        ;   digitizer can shrink to exactly quarter size  (defconstant $digiOutDoesSixteenth #x4000)      ;   digitizer can shrink to exactly sixteenth size  (defconstant $digiOutDoesRotate #x8000)         ;   digitizer supports rotate transformations  (defconstant $digiOutDoesHorizFlip #x10000)     ;   digitizer supports horizontal flips Sx < 0  (defconstant $digiOutDoesVertFlip #x20000)      ;   digitizer supports vertical flips Sy < 0  (defconstant $digiOutDoesSkew #x40000)          ;   digitizer supports skew = shear,twist,  (defconstant $digiOutDoesBlend #x80000)(defconstant $digiOutDoesWarp #x100000)(defconstant $digiOutDoesHW_DMA #x200000)       ;   digitizer not constrained to local device  (defconstant $digiOutDoesHWPlayThru #x400000)   ;   digitizer doesn't need time to play thru  (defconstant $digiOutDoesILUT #x800000)         ;   digitizer does inverse LUT for index modes  (defconstant $digiOutDoesKeyColor #x1000000)    ;   digitizer does key color functions too  (defconstant $digiOutDoesAsyncGrabs #x2000000)  ;   digitizer supports async grabs  (defconstant $digiOutDoesUnreadableScreenBits #x4000000);   playthru doesn't generate readable bits on screen (defconstant $digiOutDoesCompress #x8000000)    ;   supports alternate output data types  (defconstant $digiOutDoesCompressOnly #x10000000);   can't provide raw frames anywhere  (defconstant $digiOutDoesPlayThruDuringCompress #x20000000);   digi can do playthru while providing compressed data  (defconstant $digiOutDoesCompressPartiallyVisible #x40000000);   digi doesn't need all bits visible on screen to do hardware compress  ;   Types  (def-mactype :videodigitizercomponent (find-mactype '(:pointer :componentinstancerecord)))(def-mactype :videodigitizererror (find-mactype ':signed-long))(def-mactype :digitizerinfoptr (find-mactype '(:pointer :digitizerinfo)))(defrecord DigitizerInfo    (vdigType :signed-integer)   (inputCapabilityFlags :signed-long)   (outputCapabilityFlags :signed-long)   (inputCurrentFlags :signed-long)   (outputCurrentFlags :signed-long)   (slot :signed-integer)                       ;   temporary for connection purposes     (gdh (:handle :gdevice))                     ;   temporary for digitizers that have preferred screen     (maskgdh (:handle :gdevice))                 ;   temporary for digitizers that have mask planes     (minDestHeight :signed-integer)              ;   Smallest resizable height     (minDestWidth :signed-integer)               ;   Smallest resizable width     (maxDestHeight :signed-integer)              ;   Largest resizable height     (maxDestWidth :signed-integer)               ;   Largest resizable height     (blendLevels :signed-integer)                ;   Number of blend levels supported (2 if 1 bit mask)     (reserved :signed-long)                      ;   reserved     )(def-mactype :vdigtypeptr (find-mactype '(:pointer :vdigtype)))(defrecord VdigType    (digType :signed-long)   (reserved :signed-long)   )(def-mactype :vdigtypelistptr (find-mactype '(:pointer :vdigtypelist)))(defrecord (VdigTypeList :handle)    (count :signed-integer)   (list (:array :vdigtype 1))   )(def-mactype :vdigbufferrecptr (find-mactype '(:pointer :vdigbufferrec)))(defrecord VdigBufferRec    (dest (:handle :pixmap))   (location :point)   (reserved :signed-long)   )(def-mactype :vdigbufferreclistptr (find-mactype '(:pointer :vdigbufferreclist)))(defrecord (VdigBufferRecList :handle)    (count :signed-integer)   (matrix (:pointer :matrixrecord))   (mask (:handle :region))   (list (:array :vdigbufferrec 1))   )(def-mactype :vdigbufferreclisthandle (find-mactype '(:handle :vdigbufferreclist)))(def-mactype :vdigintprocptr (find-mactype ':pointer));  PROCEDURE VdigInt(flags: LONGINT; refcon: LONGINT); (def-mactype :vdigintupp (find-mactype ':pointer))(def-mactype :vdcompressionlistptr (find-mactype '(:pointer :vdcompressionlist)))(defrecord (VDCompressionList :handle)    (codec (:pointer :componentrecord))   (cType :ostype)   (typeName (:string 63))   (name (:string 63))   (formatFlags :signed-long)   (compressFlags :signed-long)   (reserved :signed-long)   )(def-mactype :vdcompressionlisthandle (find-mactype '(:handle :vdcompressionlist)))(defconstant $dmaDepth1 1)(defconstant $dmaDepth2 2)(defconstant $dmaDepth4 4)(defconstant $dmaDepth8 8)(defconstant $dmaDepth16 16)(defconstant $dmaDepth32 32)(defconstant $dmaDepth2Gray 64)(defconstant $dmaDepth4Gray 128)(defconstant $dmaDepth8Gray 256)(defconstant $kVDIGControlledFrameRate -1); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetMaxSrcRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputStd :signed-integer) (maxSrcRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputStd maxSrcRect ((+ (ash 6 16) 1) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetActiveSrcRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputStd :signed-integer) (activeSrcRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputStd activeSrcRect ((+ (ash 6 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetDigitizerRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (digitizerRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci digitizerRect ((+ (ash 4 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetDigitizerRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (digitizerRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci digitizerRect ((+ (ash 4 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetVBlankRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputStd :signed-integer) (vBlankRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputStd vBlankRect ((+ (ash 6 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetMaskPixMap" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (maskPixMap (:handle :pixmap)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci maskPixMap ((+ (ash 4 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetPlayThruDestination" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dest (:pointer (:handle :pixmap))) (destRect (:pointer :rect)) (m (:pointer :matrixrecord)) (mask (:pointer (:handle :region))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dest destRect m mask ((+ (ash 16 16) 8) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDUseThisCLUT" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (colorTableHandle (:handle :colortable)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci colorTableHandle ((+ (ash 4 16) 9) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetInputGammaValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (channel1 :signed-long) (channel2 :signed-long) (channel3 :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci channel1 channel2 channel3 ((+ (ash 12 16) 10) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetInputGammaValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (channel1 (:pointer :signed-long)) (channel2 (:pointer :signed-long)) (channel3 (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci channel1 channel2 channel3 ((+ (ash 12 16) 11) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetBrightness" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (brightness (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci brightness ((+ (ash 4 16) 12) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetBrightness" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (brightness (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci brightness ((+ (ash 4 16) 13) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetContrast" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (contrast (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci contrast ((+ (ash 4 16) 14) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetHue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (hue (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci hue ((+ (ash 4 16) 15) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetSharpness" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (sharpness (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci sharpness ((+ (ash 4 16) 16) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetSaturation" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (saturation (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci saturation ((+ (ash 4 16) 17) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetContrast" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (contrast (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci contrast ((+ (ash 4 16) 18) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetHue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (hue (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci hue ((+ (ash 4 16) 19) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetSharpness" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (sharpness (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci sharpness ((+ (ash 4 16) 20) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetSaturation" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (saturation (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci saturation ((+ (ash 4 16) 21) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGrabOneFrame" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 22) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetMaxAuxBuffer" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (pm (:pointer (:handle :pixmap))) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci pm r ((+ (ash 8 16) 23) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetDigitizerInfo" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (info (:pointer :digitizerinfo)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci info ((+ (ash 4 16) 25) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetCurrentFlags" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputCurrentFlag (:pointer :signed-long)) (outputCurrentFlag (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputCurrentFlag outputCurrentFlag ((+ (ash 8 16) 26) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetKeyColor" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (index :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci index ((+ (ash 4 16) 27) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetKeyColor" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (index (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci index ((+ (ash 4 16) 28) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDAddKeyColor" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (index (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci index ((+ (ash 4 16) 29) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetNextKeyColor" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (index :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci index ((+ (ash 4 16) 30) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetKeyColorRange" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (minRGB (:pointer :rgbcolor)) (maxRGB (:pointer :rgbcolor)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci minRGB maxRGB ((+ (ash 8 16) 31) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetKeyColorRange" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (minRGB (:pointer :rgbcolor)) (maxRGB (:pointer :rgbcolor)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci minRGB maxRGB ((+ (ash 8 16) 32) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetDigitizerUserInterrupt" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (flags :signed-long) (userInterruptProc :pointer) (refcon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci flags userInterruptProc refcon ((+ (ash 12 16) 33) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetInputColorSpaceMode" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (colorSpaceMode :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci colorSpaceMode ((+ (ash 2 16) 34) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetInputColorSpaceMode" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (colorSpaceMode (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci colorSpaceMode ((+ (ash 4 16) 35) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetClipState" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (clipEnable :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci clipEnable ((+ (ash 2 16) 36) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetClipState" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (clipEnable (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci clipEnable ((+ (ash 4 16) 37) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetClipRgn" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (clipRegion (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci clipRegion ((+ (ash 4 16) 38) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDClearClipRgn" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (clipRegion (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci clipRegion ((+ (ash 4 16) 39) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetCLUTInUse" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (colorTableHandle (:pointer (:handle :colortable))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci colorTableHandle ((+ (ash 4 16) 40) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetPLLFilterType" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (pllType :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci pllType ((+ (ash 2 16) 41) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetPLLFilterType" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (pllType (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci pllType ((+ (ash 4 16) 42) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetMaskandValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (blendLevel :signed-integer) (mask (:pointer :signed-long)) (value (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci blendLevel mask value ((+ (ash 10 16) 43) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetMasterBlendLevel" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (blendLevel (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci blendLevel ((+ (ash 4 16) 44) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetPlayThruDestination" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (dest (:handle :pixmap)) (destRect (:pointer :rect)) (m (:pointer :matrixrecord)) (mask (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci dest destRect m mask ((+ (ash 16 16) 45) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetPlayThruOnOff" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (state :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci state ((+ (ash 2 16) 46) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetFieldPreference" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (fieldFlag :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci fieldFlag ((+ (ash 2 16) 47) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetFieldPreference" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (fieldFlag (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci fieldFlag ((+ (ash 4 16) 48) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDPreflightDestination" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (digitizerRect (:pointer :rect)) (dest (:pointer (:pointer :pixmap))) (destRect (:pointer :rect)) (m (:pointer :matrixrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci digitizerRect dest destRect m ((+ (ash 16 16) 50) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDPreflightGlobalRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theWindow (:pointer :grafport)) (globalRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theWindow globalRect ((+ (ash 8 16) 51) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetPlayThruGlobalRect" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (theWindow (:pointer :grafport)) (globalRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci theWindow globalRect ((+ (ash 8 16) 52) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetInputGammaRecord" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputGammaPtr (:pointer :vdgammarecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputGammaPtr ((+ (ash 4 16) 53) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetInputGammaRecord" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputGammaPtr (:pointer (:pointer :vdgammarecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputGammaPtr ((+ (ash 4 16) 54) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetBlackLevelValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (blackLevel (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci blackLevel ((+ (ash 4 16) 55) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetBlackLevelValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (blackLevel (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci blackLevel ((+ (ash 4 16) 56) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetWhiteLevelValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (whiteLevel (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci whiteLevel ((+ (ash 4 16) 57) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetWhiteLevelValue" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (whiteLevel (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci whiteLevel ((+ (ash 4 16) 58) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetVideoDefaults" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (blackLevel (:pointer :signed-integer)) (whiteLevel (:pointer :signed-integer)) (brightness (:pointer :signed-integer)) (hue (:pointer :signed-integer)) (saturation (:pointer :signed-integer)) (contrast (:pointer :signed-integer)) (sharpness (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci blackLevel whiteLevel brightness hue saturation contrast sharpness ((+ (ash 28 16) 59) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetNumberOfInputs" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputs (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputs ((+ (ash 4 16) 60) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetInputFormat" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (input :signed-integer) (format (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci input format ((+ (ash 6 16) 61) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetInput" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (input :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci input ((+ (ash 2 16) 62) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetInput" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (input (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci input ((+ (ash 4 16) 63) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetInputStandard" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (inputStandard :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci inputStandard ((+ (ash 2 16) 64) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetupBuffers" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (bufferList (:handle :vdigbufferreclist)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci bufferList ((+ (ash 4 16) 65) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGrabOneFrameAsync" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (buffer :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci buffer ((+ (ash 2 16) 66) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDDone" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (buffer :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci buffer ((+ (ash 2 16) 67) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetCompression" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (compressType :ostype) (depth :signed-integer) (bounds (:pointer :rect)) (spatialQuality :signed-long) (temporalQuality :signed-long) (keyFrameRate :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci compressType depth bounds spatialQuality temporalQuality keyFrameRate ((+ (ash 22 16) 68) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDCompressOneFrameAsync" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 69) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDCompressDone" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (done (:pointer :boolean)) (theData (:pointer :pointer)) (dataSize (:pointer :signed-long)) (similarity (:pointer :unsigned-byte)) (t (:pointer :timerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci done theData dataSize similarity t ((+ (ash 20 16) 70) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDReleaseCompressBuffer" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (bufferAddr :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci bufferAddr ((+ (ash 4 16) 71) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetImageDescription" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (desc (:handle :imagedescription)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci desc ((+ (ash 4 16) 72) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDResetCompressSequence" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 73) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetCompressionOnOff" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (state :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci state ((+ (ash 2 16) 74) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetCompressionTypes" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (h (:handle :vdcompressionlist)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci h ((+ (ash 4 16) 75) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetTimeBase" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (t (:pointer :timebaserecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci t ((+ (ash 4 16) 76) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetFrameRate" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (framesPerSecond :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci framesPerSecond ((+ (ash 4 16) 77) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetDataRate" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (milliSecPerFrame (:pointer :signed-long)) (framesPerSecond (:pointer :signed-long)) (bytesPerSecond (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci milliSecPerFrame framesPerSecond bytesPerSecond ((+ (ash 12 16) 78) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetSoundInputDriver" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (soundDriverName (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci soundDriverName ((+ (ash 4 16) 79) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetDMADepths" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (depthArray (:pointer :signed-long)) (preferredDepth (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci depthArray preferredDepth ((+ (ash 8 16) 80) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetPreferredTimeScale" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (preferred (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci preferred ((+ (ash 4 16) 81) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDReleaseAsyncBuffers" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 82) :signed-longint))); $ENDC;   83 is reserved for compatibility reasons  ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDSetDataRate" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (bytesPerSecond :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci bytesPerSecond ((+ (ash 4 16) 84) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetTimeCode" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (atTime (:pointer :timerecord)) (timeCodeFormat :pointer) (timeCodeTime :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci atTime timeCodeFormat timeCodeTime ((+ (ash 12 16) 85) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDUseSafeBuffers" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (useSafeBuffers :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci useSafeBuffers ((+ (ash 2 16) 86) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetSoundInputSource" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (videoInput :signed-long) (soundInput (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci videoInput soundInput ((+ (ash 8 16) 87) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_VDGetCompressionTime" ("QuickTimeLib")) ((ci (:pointer :componentinstancerecord)) (compressionType :ostype) (depth :signed-integer) (srcRect (:pointer :rect)) (spatialQuality (:pointer :signed-long)) (temporalQuality (:pointer :signed-long)) (compressTime (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci compressionType depth srcRect spatialQuality temporalQuality compressTime ((+ (ash 22 16) 88) :signed-longint))); $ENDC; ; 	General Sequence Grab stuff; (def-mactype :seqgrabcomponent (find-mactype '(:pointer :componentinstancerecord)))(def-mactype :sgchannel (find-mactype '(:pointer :componentinstancerecord)))(defconstant $SeqGrabComponentType :|barg|)(defconstant $SeqGrabChannelType :|sgch|)(defconstant $SeqGrabPanelType :|sgpn|)(defconstant $SeqGrabCompressionPanelType :|cmpr|)(defconstant $SeqGrabSourcePanelType :|sour|)(defconstant $seqGrabToDisk 1)(defconstant $seqGrabToMemory 2)(defconstant $seqGrabDontUseTempMemory 4)(defconstant $seqGrabAppendToFile 8)(defconstant $seqGrabDontAddMovieResource 16)(defconstant $seqGrabDontMakeMovie 32)(defconstant $seqGrabPreExtendFile 64)(defconstant $seqGrabDataProcIsInterruptSafe 128)(defconstant $seqGrabDataProcDoesOverlappingReads 256)(def-mactype :seqgrabdataoutputenum (find-mactype ':signed-long))(defconstant $seqGrabRecord 1)(defconstant $seqGrabPreview 2)(defconstant $seqGrabPlayDuringRecord 4)(def-mactype :seqgrabusageenum (find-mactype ':signed-long))(defconstant $seqGrabHasBounds 1)(defconstant $seqGrabHasVolume 2)(defconstant $seqGrabHasDiscreteSamples 4)(def-mactype :seqgrabchannelinfoenum (find-mactype ':signed-long))(def-mactype :seqgrabframeinfoptr (find-mactype '(:pointer :seqgrabframeinfo)))(defrecord SeqGrabFrameInfo    (frameOffset :signed-long)   (frameTime :signed-long)   (frameSize :signed-long)   (frameChannel (:pointer :componentinstancerecord))   (frameRefCon :signed-long)   )(defconstant $grabPictOffScreen 1)(defconstant $grabPictIgnoreClip 2)(defconstant $grabPictCurrentImage 4)(defconstant $sgFlagControlledGrab #x1)(def-mactype :sgdataprocptr (find-mactype ':pointer));  FUNCTION SGData(c: SGChannel; p: Ptr; len: LONGINT; VAR offset: LONGINT; chRefCon: LONGINT; time: TimeValue; writeType: INTEGER; refCon: LONGINT): OSErr; (def-mactype :sgdataupp (find-mactype ':pointer))(def-mactype :sgdevicenameptr (find-mactype '(:pointer :sgdevicename)))(defrecord SGDeviceName    (name (:string 63))   (icon :handle)   (flags :signed-long)   (refCon :signed-long)   (reserved :signed-long)                      ;   zero    )(defconstant $sgDeviceNameFlagDeviceUnavailable #x1)(def-mactype :sgdevicelistrecordptr (find-mactype '(:pointer :sgdevicelistrecord)))(defrecord (SGDeviceListRecord :handle)    (count :signed-integer)   (selectedIndex :signed-integer)   (reserved :signed-long)                      ;   zero    (entry (:array :sgdevicename 1))   )(def-mactype :sgdevicelistptr (find-mactype '(:pointer :sgdevicelistrecord)))(def-mactype :sgdevicelist (find-mactype '(:handle :sgdevicelistrecord)))(defconstant $sgDeviceListWithIcons #x1)(defconstant $sgDeviceListDontCheckAvailability #x2)(defconstant $seqGrabWriteAppend 0)(defconstant $seqGrabWriteReserve 1)(defconstant $seqGrabWriteFill 2)(defconstant $seqGrabUnpause 0)(defconstant $seqGrabPause 1)(defconstant $seqGrabPauseForMenu 3)(defconstant $channelFlagDontOpenResFile 2)(defconstant $channelFlagHasDependency 4)(def-mactype :sgmodalfilterprocptr (find-mactype ':pointer));  FUNCTION SGModalFilter(theDialog: DialogPtr; VAR theEvent: EventRecord; VAR itemHit: INTEGER; refCon: LONGINT): BOOLEAN; (def-mactype :sgmodalfilterupp (find-mactype ':pointer))(defconstant $sgPanelFlagForPanel 1)(defconstant $seqGrabSettingsPreviewOnly 1)(def-mactype :sgoutputrecordptr (find-mactype '(:pointer :sgoutputrecord)))(defrecord SGOutputRecord    (data (:array :signed-long 1))   )(def-mactype :sgoutput (find-mactype '(:pointer :sgoutputrecord)))(defconstant $channelPlayNormal 0)(defconstant $channelPlayFast 1)(defconstant $channelPlayHighQuality 2)(defconstant $channelPlayAllData 4); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGInitialize" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 1) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetDataOutput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (movieFile (:pointer :fsspec)) (whereFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s movieFile whereFlags ((+ (ash 8 16) 2) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetDataOutput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (movieFile (:pointer :fsspec)) (whereFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s movieFile whereFlags ((+ (ash 8 16) 3) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetGWorld" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (gp (:pointer :cgrafport)) (gd (:handle :gdevice)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s gp gd ((+ (ash 8 16) 4) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetGWorld" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (gp (:pointer (:pointer :cgrafport))) (gd (:pointer (:handle :gdevice))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s gp gd ((+ (ash 8 16) 5) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGNewChannel" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (channelType :ostype) (ref (:pointer (:pointer :componentinstancerecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s channelType ref ((+ (ash 8 16) 6) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGDisposeChannel" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ((+ (ash 4 16) 7) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGStartPreview" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 16) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGStartRecord" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 17) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGIdle" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 18) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGStop" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 19) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPause" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (pause :signed-byte))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s pause ((+ (ash 2 16) 20) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPrepare" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (prepareForPreview :boolean) (prepareForRecord :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s prepareForPreview prepareForRecord ((+ (ash 4 16) 21) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGRelease" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 22) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetMovie" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)))   (:stack (:pointer :movierecord))   (:stack-trap #xA82A :d0 0 s ((+ (ash 0 16) 23) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetMaximumRecordTime" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ticks :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ticks ((+ (ash 4 16) 24) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetMaximumRecordTime" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ticks (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ticks ((+ (ash 4 16) 25) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetStorageSpaceRemaining" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (bytes (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s bytes ((+ (ash 4 16) 26) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetTimeRemaining" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ticksLeft (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ticksLeft ((+ (ash 4 16) 27) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGrabPict" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (p (:pointer (:handle :picture))) (bounds (:pointer :rect)) (offscreenDepth :signed-integer) (grabPictFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s p bounds offscreenDepth grabPictFlags ((+ (ash 14 16) 28) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetLastMovieResID" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (resID (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s resID ((+ (ash 4 16) 29) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetFlags" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sgFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sgFlags ((+ (ash 4 16) 30) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetFlags" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sgFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sgFlags ((+ (ash 4 16) 31) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetDataProc" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (proc :pointer) (refCon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s proc refCon ((+ (ash 8 16) 32) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGNewChannelFromComponent" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (newChannel (:pointer (:pointer :componentinstancerecord))) (sgChannelComponent (:pointer :componentrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s newChannel sgChannelComponent ((+ (ash 8 16) 33) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGDisposeDeviceList" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (list (:handle :sgdevicelistrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s list ((+ (ash 4 16) 34) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGAppendDeviceListToMenu" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (list (:handle :sgdevicelistrecord)) (mh (:handle :menuinfo)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s list mh ((+ (ash 8 16) 35) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ud (:pointer :userdatarecord)) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ud flags ((+ (ash 8 16) 36) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ud (:pointer (:pointer :userdatarecord))) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ud flags ((+ (ash 8 16) 37) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetIndChannel" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (index :signed-integer) (ref (:pointer (:pointer :componentinstancerecord))) (chanType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s index ref chanType ((+ (ash 10 16) 38) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGUpdate" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (updateRgn (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s updateRgn ((+ (ash 4 16) 39) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetPause" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (paused (:pointer :unsigned-byte)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s paused ((+ (ash 4 16) 40) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSettingsDialog" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (numPanels :signed-integer) (panelList (:pointer (:pointer :componentrecord))) (flags :signed-long) (proc :pointer) (procRefNum :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c numPanels panelList flags proc procRefNum ((+ (ash 22 16) 41) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetAlignmentProc" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (alignmentProc (:pointer :icmalignmentprocrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s alignmentProc ((+ (ash 4 16) 42) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (ud (:pointer :userdatarecord)) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ud flags ((+ (ash 12 16) 43) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (ud (:pointer (:pointer :userdatarecord))) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ud flags ((+ (ash 12 16) 44) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetMode" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (previewMode (:pointer :boolean)) (recordMode (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s previewMode recordMode ((+ (ash 8 16) 45) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetDataRef" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (dataRef :handle) (dataRefType :ostype) (whereFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s dataRef dataRefType whereFlags ((+ (ash 12 16) 46) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetDataRef" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (dataRef (:pointer :handle)) (dataRefType (:pointer :ostype)) (whereFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s dataRef dataRefType whereFlags ((+ (ash 12 16) 47) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGNewOutput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (dataRef :handle) (dataRefType :ostype) (whereFlags :signed-long) (sgOut (:pointer (:pointer :sgoutputrecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s dataRef dataRefType whereFlags sgOut ((+ (ash 16 16) 48) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGDisposeOutput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sgOut (:pointer :sgoutputrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sgOut ((+ (ash 4 16) 49) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetOutputFlags" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sgOut (:pointer :sgoutputrecord)) (whereFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sgOut whereFlags ((+ (ash 8 16) 50) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelOutput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (sgOut (:pointer :sgoutputrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c sgOut ((+ (ash 8 16) 51) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetDataOutputStorageSpaceRemaining" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sgOut (:pointer :sgoutputrecord)) (space (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sgOut space ((+ (ash 8 16) 52) :signed-longint))); $ENDC; ; 	calls from Channel to seqGrab; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGWriteMovieData" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (p :pointer) (len :signed-long) (offset (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c p len offset ((+ (ash 16 16) 256) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGAddFrameReference" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (frameInfo (:pointer :seqgrabframeinfo)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s frameInfo ((+ (ash 4 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetNextFrameReference" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (frameInfo (:pointer :seqgrabframeinfo)) (frameDuration (:pointer :signed-long)) (frameNumber (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s frameInfo frameDuration frameNumber ((+ (ash 12 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetTimeBase" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (tb (:pointer (:pointer :timebaserecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s tb ((+ (ash 4 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSortDeviceList" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (list (:handle :sgdevicelistrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s list ((+ (ash 4 16) 260) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGAddMovieData" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (p :pointer) (len :signed-long) (offset (:pointer :signed-long)) (chRefCon :signed-long) (time :signed-long) (writeType :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c p len offset chRefCon time writeType ((+ (ash 26 16) 261) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChangedSource" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ((+ (ash 4 16) 262) :signed-longint))); $ENDC;  ** Sequence Grab CHANNEL Component Stuff ** ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelUsage" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (usage :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c usage ((+ (ash 4 16) 128) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelUsage" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (usage (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c usage ((+ (ash 4 16) 129) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelBounds" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bounds (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bounds ((+ (ash 4 16) 130) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelBounds" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bounds (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bounds ((+ (ash 4 16) 131) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelVolume" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (volume :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c volume ((+ (ash 2 16) 132) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelVolume" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (volume (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c volume ((+ (ash 4 16) 133) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelInfo" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (channelInfo (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c channelInfo ((+ (ash 4 16) 134) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelPlayFlags" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (playFlags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c playFlags ((+ (ash 4 16) 135) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelPlayFlags" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (playFlags (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c playFlags ((+ (ash 4 16) 136) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelMaxFrames" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (frameCount :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c frameCount ((+ (ash 4 16) 137) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelMaxFrames" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (frameCount (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c frameCount ((+ (ash 4 16) 138) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelRefCon" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (refCon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c refCon ((+ (ash 4 16) 139) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelClip" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (theClip (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c theClip ((+ (ash 4 16) 140) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelClip" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (theClip (:pointer (:handle :region))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c theClip ((+ (ash 4 16) 141) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelSampleDescription" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (sampleDesc :handle))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c sampleDesc ((+ (ash 4 16) 142) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelDeviceList" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (selectionFlags :signed-long) (list (:pointer (:handle :sgdevicelistrecord))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c selectionFlags list ((+ (ash 8 16) 143) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelDevice" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (name (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c name ((+ (ash 4 16) 144) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetChannelMatrix" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (m (:pointer :matrixrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c m ((+ (ash 4 16) 145) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelMatrix" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (m (:pointer :matrixrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c m ((+ (ash 4 16) 146) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetChannelTimeScale" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (scale (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c scale ((+ (ash 4 16) 147) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChannelPutPicture" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 148) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChannelSetRequestedDataRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bytesPerSecond :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bytesPerSecond ((+ (ash 4 16) 149) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChannelGetRequestedDataRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bytesPerSecond (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bytesPerSecond ((+ (ash 4 16) 150) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChannelSetDataSourceName" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (name (:string 255)) (scriptTag :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c name scriptTag ((+ (ash 6 16) 151) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGChannelGetDataSourceName" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (name (:pointer (:string 255))) (scriptTag (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c name scriptTag ((+ (ash 8 16) 152) :signed-longint))); $ENDC; ; 	calls from seqGrab to Channel; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGInitChannel" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (owner (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c owner ((+ (ash 4 16) 384) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGWriteSamples" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (m (:pointer :movierecord)) (theFile (:handle :aliasrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c m theFile ((+ (ash 8 16) 385) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetDataRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bytesPerSecond (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bytesPerSecond ((+ (ash 4 16) 386) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGAlignChannelRect" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c r ((+ (ash 4 16) 387) :signed-longint))); $ENDC; ; 	Dorky dialog panel calls; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelGetDitl" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ditl (:pointer :handle)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ditl ((+ (ash 4 16) 512) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelGetTitle" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (title (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s title ((+ (ash 4 16) 513) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelCanRun" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ((+ (ash 4 16) 514) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelInstall" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (d (:pointer :grafport)) (itemOffset :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c d itemOffset ((+ (ash 10 16) 515) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelEvent" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (d (:pointer :grafport)) (itemOffset :signed-integer) (theEvent (:pointer :eventrecord)) (itemHit (:pointer :signed-integer)) (handled (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c d itemOffset theEvent itemHit handled ((+ (ash 22 16) 516) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelItem" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (d (:pointer :grafport)) (itemOffset :signed-integer) (itemNum :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c d itemOffset itemNum ((+ (ash 12 16) 517) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelRemove" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (d (:pointer :grafport)) (itemOffset :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c d itemOffset ((+ (ash 10 16) 518) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelSetGrabber" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (sg (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s sg ((+ (ash 4 16) 519) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelSetResFile" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (resRef :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s resRef ((+ (ash 2 16) 520) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelGetSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (ud (:pointer (:pointer :userdatarecord))) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ud flags ((+ (ash 12 16) 521) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelSetSettings" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (c (:pointer :componentinstancerecord)) (ud (:pointer :userdatarecord)) (flags :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s c ud flags ((+ (ash 12 16) 522) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelValidateInput" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (ok (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s ok ((+ (ash 4 16) 523) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGPanelSetEventFilter" ("QuickTimeLib")) ((s (:pointer :componentinstancerecord)) (proc :pointer) (refCon :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 s proc refCon ((+ (ash 8 16) 524) :signed-longint))); $ENDC;  ** Sequence Grab VIDEO CHANNEL Component Stuff ** ; ; 	Video stuff; (def-mactype :sgcompressinfoptr (find-mactype '(:pointer :sgcompressinfo)))(defrecord SGCompressInfo    (buffer :pointer)   ;;Changing field buffersize from signed-long to unsigned-long to match C header (pretty-sure)   (bufferSize :unsigned-long)   (similarity :signed-byte)   (reserved :signed-byte)   )(def-mactype :sggrabbottleprocptr (find-mactype ':pointer));  FUNCTION SGGrabBottle(c: SGChannel; bufferNum: INTEGER; refCon: LONGINT): ComponentResult; (def-mactype :sggrabcompletebottleprocptr (find-mactype ':pointer));  FUNCTION SGGrabCompleteBottle(c: SGChannel; bufferNum: INTEGER; VAR done: BOOLEAN; refCon: LONGINT): ComponentResult; (def-mactype :sgdisplaybottleprocptr (find-mactype ':pointer));  FUNCTION SGDisplayBottle(c: SGChannel; bufferNum: INTEGER; VAR mp: MatrixRecord; clipRgn: RgnHandle; refCon: LONGINT): ComponentResult; (def-mactype :sgcompressbottleprocptr (find-mactype ':pointer));  FUNCTION SGCompressBottle(c: SGChannel; bufferNum: INTEGER; refCon: LONGINT): ComponentResult; (def-mactype :sgcompresscompletebottleprocptr (find-mactype ':pointer));  FUNCTION SGCompressCompleteBottle(c: SGChannel; bufferNum: INTEGER; VAR done: BOOLEAN; VAR ci: SGCompressInfo; refCon: LONGINT): ComponentResult; (def-mactype :sgaddframebottleprocptr (find-mactype ':pointer));  FUNCTION SGAddFrameBottle(c: SGChannel; bufferNum: INTEGER; atTime: TimeValue; scale: TimeScale; (CONST)VAR ci: SGCompressInfo; refCon: LONGINT): ComponentResult; (def-mactype :sgtransferframebottleprocptr (find-mactype ':pointer));  FUNCTION SGTransferFrameBottle(c: SGChannel; bufferNum: INTEGER; VAR mp: MatrixRecord; clipRgn: RgnHandle; refCon: LONGINT): ComponentResult; (def-mactype :sggrabcompresscompletebottleprocptr (find-mactype ':pointer));  FUNCTION SGGrabCompressCompleteBottle(c: SGChannel; VAR done: BOOLEAN; VAR ci: SGCompressInfo; VAR t: TimeRecord; refCon: LONGINT): ComponentResult; (def-mactype :sgdisplaycompressbottleprocptr (find-mactype ':pointer));  FUNCTION SGDisplayCompressBottle(c: SGChannel; dataPtr: Ptr; desc: ImageDescriptionHandle; VAR mp: MatrixRecord; clipRgn: RgnHandle; refCon: LONGINT): ComponentResult; (def-mactype :sggrabbottleupp (find-mactype ':pointer))(def-mactype :sggrabcompletebottleupp (find-mactype ':pointer))(def-mactype :sgdisplaybottleupp (find-mactype ':pointer))(def-mactype :sgcompressbottleupp (find-mactype ':pointer))(def-mactype :sgcompresscompletebottleupp (find-mactype ':pointer))(def-mactype :sgaddframebottleupp (find-mactype ':pointer))(def-mactype :sgtransferframebottleupp (find-mactype ':pointer))(def-mactype :sggrabcompresscompletebottleupp (find-mactype ':pointer))(def-mactype :sgdisplaycompressbottleupp (find-mactype ':pointer))(def-mactype :videobottlesptr (find-mactype '(:pointer :videobottles)))(defrecord VideoBottles    (procCount :signed-integer)   (grabProc :pointer)   (grabCompleteProc :pointer)   (displayProc :pointer)   (compressProc :pointer)   (compressCompleteProc :pointer)   (addFrameProc :pointer)   (transferFrameProc :pointer)   (grabCompressCompleteProc :pointer)   (displayCompressProc :pointer)   ); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSrcVideoBounds" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c r ((+ (ash 4 16) 256) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetVideoRect" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c r ((+ (ash 4 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetVideoRect" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (r (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c r ((+ (ash 4 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetVideoCompressorType" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (compressorType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c compressorType ((+ (ash 4 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetVideoCompressorType" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (compressorType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c compressorType ((+ (ash 4 16) 260) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetVideoCompressor" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (depth :signed-integer) (compressor (:pointer :componentrecord)) (spatialQuality :signed-long) (temporalQuality :signed-long) (keyFrameRate :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c depth compressor spatialQuality temporalQuality keyFrameRate ((+ (ash 18 16) 261) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetVideoCompressor" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (depth (:pointer :signed-integer)) (compressor (:pointer (:pointer :componentrecord))) (spatialQuality (:pointer :signed-long)) (temporalQuality (:pointer :signed-long)) (keyFrameRate (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c depth compressor spatialQuality temporalQuality keyFrameRate ((+ (ash 20 16) 262) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetVideoDigitizerComponent" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack (:pointer :componentinstancerecord))   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 263) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetVideoDigitizerComponent" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (vdig (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c vdig ((+ (ash 4 16) 264) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGVideoDigitizerChanged" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 265) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetVideoBottlenecks" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (vb (:pointer :videobottles)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c vb ((+ (ash 4 16) 266) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetVideoBottlenecks" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (vb (:pointer :videobottles)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c vb ((+ (ash 4 16) 267) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGrabFrame" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum ((+ (ash 2 16) 268) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGrabFrameComplete" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (done (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum done ((+ (ash 6 16) 269) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGDisplayFrame" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum mp clipRgn ((+ (ash 10 16) 270) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGCompressFrame" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum ((+ (ash 2 16) 271) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGCompressFrameComplete" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (done (:pointer :boolean)) (ci (:pointer :sgcompressinfo)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum done ci ((+ (ash 10 16) 272) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGAddFrame" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (atTime :signed-long) (scale :signed-long) (ci (:pointer :sgcompressinfo)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum atTime scale ci ((+ (ash 14 16) 273) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGTransferFrameForCompress" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum mp clipRgn ((+ (ash 10 16) 274) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetCompressBuffer" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (depth :signed-integer) (compressSize (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c depth compressSize ((+ (ash 6 16) 275) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetCompressBuffer" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (depth (:pointer :signed-integer)) (compressSize (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c depth compressSize ((+ (ash 8 16) 276) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetBufferInfo" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (bufferPM (:pointer (:handle :pixmap))) (bufferRect (:pointer :rect)) (compressBuffer (:pointer (:pointer :cgrafport))) (compressBufferRect (:pointer :rect)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c bufferNum bufferPM bufferRect compressBuffer compressBufferRect ((+ (ash 18 16) 277) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetUseScreenBuffer" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (useScreenBuffer :boolean))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c useScreenBuffer ((+ (ash 2 16) 278) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetUseScreenBuffer" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (useScreenBuffer (:pointer :boolean)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c useScreenBuffer ((+ (ash 4 16) 279) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGrabCompressComplete" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (done (:pointer :boolean)) (ci (:pointer :sgcompressinfo)) (tr (:pointer :timerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c done ci tr ((+ (ash 12 16) 280) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGDisplayCompress" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (dataPtr :pointer) (desc (:handle :imagedescription)) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c dataPtr desc mp clipRgn ((+ (ash 16 16) 281) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetFrameRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (frameRate :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c frameRate ((+ (ash 4 16) 282) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetFrameRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (frameRate (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c frameRate ((+ (ash 4 16) 283) :signed-longint))); $ENDC;  ** Sequence Grab SOUND CHANNEL Component Stuff ** ; ; 	Sound stuff; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetSoundInputDriver" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (driverName (:string 255)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c driverName ((+ (ash 4 16) 256) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSoundInputDriver" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSoundInputDriverChanged" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetSoundRecordChunkSize" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (seconds :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c seconds ((+ (ash 4 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSoundRecordChunkSize" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 260) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetSoundInputRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (rate :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c rate ((+ (ash 4 16) 261) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; For trap _sggetsoundinputrate, using function return type from C header. Pascal used :signed-long, C uses :fixed;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSoundInputRate" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)))   (:stack :fixed)   (:stack-trap #xA82A :d0 0 c ((+ (ash 0 16) 262) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetSoundInputParameters" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (sampleSize :signed-integer) (numChannels :signed-integer) (compressionType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c sampleSize numChannels compressionType ((+ (ash 8 16) 263) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetSoundInputParameters" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (sampleSize (:pointer :signed-integer)) (numChannels (:pointer :signed-integer)) (compressionType (:pointer :ostype)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c sampleSize numChannels compressionType ((+ (ash 12 16) 264) :signed-longint))); $ENDC; ; 	Text stuff; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetFontName" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (pstr (:pointer (:string 255))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c pstr ((+ (ash 4 16) 256) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetFontSize" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (fontSize :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c fontSize ((+ (ash 2 16) 257) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetTextColor" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (theColor (:pointer :rgbcolor)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c theColor ((+ (ash 4 16) 258) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetTextBackColor" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (theColor (:pointer :rgbcolor)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c theColor ((+ (ash 4 16) 259) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetJustification" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (just :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c just ((+ (ash 2 16) 260) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetTextRetToSpaceValue" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (rettospace (:pointer :signed-integer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c rettospace ((+ (ash 4 16) 261) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetTextRetToSpaceValue" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (rettospace :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c rettospace ((+ (ash 2 16) 262) :signed-longint))); $ENDC; ; 	Music stuff; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGGetInstrument" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (td (:pointer :tonedescription)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c td ((+ (ash 4 16) 256) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap ("_SGSetInstrument" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (td (:pointer :tonedescription)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 c td ((+ (ash 4 16) 257) :signed-longint))); $ENDC(defconstant $sgChannelAtom :|chan|)(defconstant $sgChannelSettingsAtom :|ctom|)(defconstant $sgChannelDescription :|cdsc|)(defconstant $sgChannelSettings :|cset|)(defconstant $sgDeviceNameType :|name|)(defconstant $sgUsageType :|use |)(defconstant $sgPlayFlagsType :|plyf|)(defconstant $sgClipType :|clip|)(defconstant $sgMatrixType :|mtrx|)(defconstant $sgVolumeType :|volu|)(defconstant $sgPanelSettingsAtom :|ptom|)(defconstant $sgPanelDescription :|pdsc|)(defconstant $sgPanelSettings :|pset|)(defconstant $sgcSoundCompressionType :|scmp|)(defconstant $sgcSoundSampleRateType :|srat|)(defconstant $sgcSoundChannelCountType :|schn|)(defconstant $sgcSoundSampleSizeType :|ssiz|)(defconstant $sgcSoundInputType :|sinp|)(defconstant $sgcSoundGainType :|gain|)(defconstant $sgcVideoHueType :|hue |)(defconstant $sgcVideoSaturationType :|satr|)(defconstant $sgcVideoContrastType :|trst|)(defconstant $sgcVideoSharpnessType :|shrp|)(defconstant $sgcVideoBrigtnessType :|brit|)(defconstant $sgcVideoBlackLevelType :|blkl|)(defconstant $sgcVideoWhiteLevelType :|whtl|)(defconstant $sgcVideoInputType :|vinp|)(defconstant $sgcVideoFormatType :|vstd|)(defconstant $sgcVideoFilterType :|vflt|)(defconstant $sgcVideoRectType :|vrct|)(defconstant $sgVideoDigitizerType :|vdig|);   UPP call backs  (defconstant $uppSCModalFilterProcInfo #x3FD0)(defconstant $uppSCModalHookProcInfo #x3EE0)(defconstant $uppTweenerDataProcInfo #x3FFFF0)(defconstant $uppDataHCompletionProcInfo #xBC0)(defconstant $uppVdigIntProcInfo #x3C0)(defconstant $uppSGDataProcInfo #x3BFFE0)(defconstant $uppSGModalFilterProcInfo #x3FD0)(defconstant $uppSGGrabBottleProcInfo #xEF0)(defconstant $uppSGGrabCompleteBottleProcInfo #x3EF0)(defconstant $uppSGDisplayBottleProcInfo #xFEF0)(defconstant $uppSGCompressBottleProcInfo #xEF0)(defconstant $uppSGCompressCompleteBottleProcInfo #xFEF0)(defconstant $uppSGAddFrameBottleProcInfo #x3FEF0)(defconstant $uppSGTransferFrameBottleProcInfo #xFEF0)(defconstant $uppSGGrabCompressCompleteBottleProcInfo #xFFF0)(defconstant $uppSGDisplayCompressBottleProcInfo #x3FFF0); $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSCModalFilterProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSCModalHookProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewTweenerDataProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewDataHCompletionProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewVdigIntProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGDataProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGModalFilterProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGGrabBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGGrabCompleteBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGDisplayBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGCompressBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGCompressCompleteBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGAddFrameBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGTransferFrameBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGGrabCompressCompleteBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSGDisplayCompressBottleProc" ("QuickTimeLib")) ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSCModalFilterProc" ("QuickTimeLib")) ((theDialog (:pointer :grafport)) (theEvent (:pointer :eventrecord)) (itemHit (:pointer :signed-integer)) (refcon :signed-long) (userRoutine :pointer))   :boolean   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSCModalHookProc" ("QuickTimeLib")) ((theDialog (:pointer :grafport)) (itemHit :signed-integer) (params :pointer) (refcon :signed-long) (userRoutine :pointer))   :signed-integer   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallTweenerDataProc" ("QuickTimeLib")) ((tr (:pointer :tweenrecord)) (tweenData :pointer) (tweenDataSize :signed-long) (dataDescriptionSeed :signed-long) (dataDescription :handle) (asyncCompletionProc (:pointer :icmcompletionprocrecord)) (transferProc :pointer) (refCon :pointer) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallDataHCompletionProc" ("QuickTimeLib")) ((request :pointer) (refcon :signed-long) (err :signed-integer) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallVdigIntProc" ("QuickTimeLib")) ((flags :signed-long) (refcon :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGDataProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (p :pointer) (len :signed-long) (offset (:pointer :signed-long)) (chRefCon :signed-long) (time :signed-long) (writeType :signed-integer) (refCon :signed-long) (userRoutine :pointer))   :signed-integer   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGModalFilterProc" ("QuickTimeLib")) ((theDialog (:pointer :grafport)) (theEvent (:pointer :eventrecord)) (itemHit (:pointer :signed-integer)) (refCon :signed-long) (userRoutine :pointer))   :boolean   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGGrabBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGGrabCompleteBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (done (:pointer :boolean)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGDisplayBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGCompressBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGCompressCompleteBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (done (:pointer :boolean)) (ci (:pointer :sgcompressinfo)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGAddFrameBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (atTime :signed-long) (scale :signed-long) (ci (:pointer :sgcompressinfo)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGTransferFrameBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (bufferNum :signed-integer) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGGrabCompressCompleteBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (done (:pointer :boolean)) (ci (:pointer :sgcompressinfo)) (t (:pointer :timerecord)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSGDisplayCompressBottleProc" ("QuickTimeLib")) ((c (:pointer :componentinstancerecord)) (dataPtr :pointer) (desc (:handle :imagedescription)) (mp (:pointer :matrixrecord)) (clipRgn (:handle :region)) (refCon :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := QuickTimeComponentsIncludes; $ENDC                                         ; __QUICKTIMECOMPONENTS__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'QuickTimeComponents)