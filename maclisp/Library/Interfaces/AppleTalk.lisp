(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:AppleTalk.p"; at Tuesday June 6,1995 1:59:48 pm.; ;  	File:		AppleTalk.p;  ;  	Contains:	AppleTalk Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED __APPLETALK__; $SETC __APPLETALK__ := 1; $I+; $SETC AppleTalkIncludes := UsingIncludes; $SETC UsingIncludes := 1; $IFC UNDEFINED __TYPES__(require-interface 'Types)                      ; $I Types.p; $ENDC; 	ConditionalMacros.p											; $IFC UNDEFINED __OSUTILS__(require-interface 'OSUtils)                    ; $I OSUtils.p; $ENDC; 	MixedMode.p													; 	Memory.p													; $PUSH; $ALIGN MAC68K; $LibExport+;  Driver unit and reference numbers (ADSP is dynamic) (defconstant $mppUnitNum 9)                     ;  MPP unit number (defconstant $atpUnitNum 10)                    ;  ATP unit number (defconstant $xppUnitNum 40)                    ;  XPP unit number (defconstant $mppRefNum -10)                    ;  MPP reference number (defconstant $atpRefNum -11)                    ;  ATP reference number (defconstant $xppRefNum -41)                    ;  XPP reference number ;  .MPP csCodes (defconstant $lookupReply 242)                  ;  This command queued to ourself (defconstant $writeLAP 243)                     ;  Write out LAP packet (defconstant $detachPH 244)                     ;  Detach LAP protocol handler (defconstant $attachPH 245)                     ;  Attach LAP protocol handler (defconstant $writeDDP 246)                     ;  Write out DDP packet (defconstant $closeSkt 247)                     ;  Close DDP socket (defconstant $openSkt 248)                      ;  Open DDP socket (defconstant $loadNBP 249)                      ;  Load NBP command-executing code (defconstant $lastResident 249)                 ;  Last resident command (defconstant $confirmName 250)                  ;  Confirm name (defconstant $lookupName 251)                   ;  Look up name on internet (defconstant $removeName 252)                   ;  Remove name from Names Table (defconstant $registerName 253)                 ;  Register name in Names Table (defconstant $killNBP 254)                      ;  Kill outstanding NBP request (defconstant $unloadNBP 255)                    ;  Unload NBP command code (defconstant $setSelfSend 256)                  ;  MPP: Set to allow writes to self (defconstant $SetMyZone 257)                    ;  Set my zone name (defconstant $GetATalkInfo 258)                 ;  get AppleTalk information (defconstant $ATalkClosePrep 259)               ;  AppleTalk close query ;  .ATP csCodes (defconstant $nSendRequest 248)                 ;  NSendRequest code (defconstant $relRspCB 249)                     ;  Release RspCB (defconstant $closeATPSkt 250)                  ;  Close ATP socket (defconstant $addResponse 251)                  ;  Add response code | Require open skt (defconstant $sendResponse 252)                 ;  Send response code (defconstant $getRequest 253)                   ;  Get request code (defconstant $openATPSkt 254)                   ;  Open ATP socket (defconstant $sendRequest 255)                  ;  Send request code (defconstant $relTCB 256)                       ;  Release TCB (defconstant $killGetReq 257)                   ;  Kill GetRequest (defconstant $killSendReq 258)                  ;  Kill SendRequest (defconstant $killAllGetReq 259)                ;  Kill all getRequests for a skt ;  .XPP csCodes (defconstant $openSess 255)                     ;  Open session (defconstant $closeSess 254)                    ;  Close session (defconstant $userCommand 253)                  ;  User command (defconstant $userWrite 252)                    ;  User write (defconstant $getStatus 251)                    ;  Get status (defconstant $afpCall 250)                      ;  AFP command (buffer has command code) (defconstant $getParms 249)                     ;  Get parameters (defconstant $abortOS 248)                      ;  Abort open session request (defconstant $closeAll 247)                     ;  Close all open sessions (defconstant $xCall 246)                        ;  .XPP extended calls ;  Transition Queue transition types (defconstant $ATTransOpen 0)                    ; AppleTalk has opened(defconstant $ATTransClose 2)                   ; AppleTalk is about to close(defconstant $ATTransClosePrep 3)               ; Is it OK to close AppleTalk ?(defconstant $ATTransCancelClose 4)             ; Cancel the ClosePrep transition(defconstant $afpByteRangeLock 1)               ; AFPCall command codes(defconstant $afpVolClose 2)                    ; AFPCall command codes(defconstant $afpDirClose 3)                    ; AFPCall command codes(defconstant $afpForkClose 4)                   ; AFPCall command codes(defconstant $afpCopyFile 5)                    ; AFPCall command codes(defconstant $afpDirCreate 6)                   ; AFPCall command codes(defconstant $afpFileCreate 7)                  ; AFPCall command codes(defconstant $afpDelete 8)                      ; AFPCall command codes(defconstant $afpEnumerate 9)                   ; AFPCall command codes(defconstant $afpFlush 10)                      ; AFPCall command codes(defconstant $afpForkFlush 11)                  ; AFPCall command codes(defconstant $afpGetDirParms 12)                ; AFPCall command codes(defconstant $afpGetFileParms 13)               ; AFPCall command codes(defconstant $afpGetForkParms 14)               ; AFPCall command codes(defconstant $afpGetSInfo 15)                   ; AFPCall command codes(defconstant $afpGetSParms 16)                  ; AFPCall command codes(defconstant $afpGetVolParms 17)                ; AFPCall command codes(defconstant $afpLogin 18)                      ; AFPCall command codes(defconstant $afpContLogin 19)                  ; AFPCall command codes(defconstant $afpLogout 20)                     ; AFPCall command codes(defconstant $afpMapID 21)                      ; AFPCall command codes(defconstant $afpMapName 22)                    ; AFPCall command codes(defconstant $afpMove 23)                       ; AFPCall command codes(defconstant $afpOpenVol 24)                    ; AFPCall command codes(defconstant $afpOpenDir 25)                    ; AFPCall command codes(defconstant $afpOpenFork 26)                   ; AFPCall command codes(defconstant $afpRead 27)                       ; AFPCall command codes(defconstant $afpRename 28)                     ; AFPCall command codes(defconstant $afpSetDirParms 29)                ; AFPCall command codes(defconstant $afpSetFileParms 30)               ; AFPCall command codes(defconstant $afpSetForkParms 31)               ; AFPCall command codes(defconstant $afpSetVolParms 32)                ; AFPCall command codes(defconstant $afpWrite 33)                      ; AFPCall command codes(defconstant $afpGetFlDrParms 34)               ; AFPCall command codes(defconstant $afpSetFlDrParms 35)               ; AFPCall command codes(defconstant $afpDTOpen 48)                     ; AFPCall command codes(defconstant $afpDTClose 49)                    ; AFPCall command codes(defconstant $afpGetIcon 51)                    ; AFPCall command codes(defconstant $afpGtIcnInfo 52)                  ; AFPCall command codes(defconstant $afpAddAPPL 53)                    ; AFPCall command codes(defconstant $afpRmvAPPL 54)                    ; AFPCall command codes(defconstant $afpGetAPPL 55)                    ; AFPCall command codes(defconstant $afpAddCmt 56)                     ; AFPCall command codes(defconstant $afpRmvCmt 57)                     ; AFPCall command codes(defconstant $afpGetCmt 58)                     ; AFPCall command codes(defconstant $afpAddIcon 192)                   ; Special code for ASP Write commands(defconstant $xppLoadedBit 5)                   ;  XPP bit in PortBUse (defconstant $scbMemSize 192)                   ;  Size of memory for SCB (defconstant $xppFlagClr 0)                     ;  Cs for AFPCommandBlock (defconstant $xppFlagSet 128)                   ;  StartEndFlag & NewLineFlag fields. (defconstant $lapSize 20)(defconstant $ddpSize 26)(defconstant $nbpSize 26)(defconstant $atpSize 56)(defconstant $atpXOvalue 32)                    ; ATP exactly-once bit (defconstant $atpEOMvalue 16)                   ; ATP End-Of-Message bit (defconstant $atpSTSvalue 8)                    ; ATP Send-Transmission-Status bit (defconstant $atpTIDValidvalue 2)               ; ATP trans. ID valid bit (defconstant $atpSendChkvalue 1)                ; ATP send checksum bit (defconstant $zipGetLocalZones 5)(defconstant $zipGetZoneList 6)(defconstant $zipGetMyZone 7)(defconstant $LAPMgrPtr #xB18)                  ; Entry point for LAP Manager(defconstant $LAPMgrCall 2)                     ; Offset to LAP routines(defconstant $LAddAEQ 23)                       ; LAPAddATQ routine selector(defconstant $LRmvAEQ 24)                       ; LAPRmvATQ routine selector(defconstant $tLAPRead 0)(defconstant $tLAPWrite 1)(defconstant $tDDPRead 2)(defconstant $tDDPWrite 3)(defconstant $tNBPLookup 4)(defconstant $tNBPConfirm 5)(defconstant $tNBPRegister 6)(defconstant $tATPSndRequest 7)(defconstant $tATPGetRequest 8)(defconstant $tATPSdRsp 9)(defconstant $tATPAddRsp 10)(defconstant $tATPRequest 11)(defconstant $tATPResponse 12)(def-mactype :abcalltype (find-mactype ':signed-byte))(defconstant $lapProto 0)(defconstant $ddpProto 1)(defconstant $nbpProto 2)(defconstant $atpProto 3)(def-mactype :abprototype (find-mactype ':unsigned-byte))(def-mactype :abbyte (find-mactype ':unsigned-byte))(defrecord LAPAdrBlock    (dstNodeID :unsigned-byte)   (srcNodeID :unsigned-byte)   (lapProtType :unsigned-byte)   (filler :unsigned-byte)                      ; 	Filler for proper byte alignment   )(def-mactype :atqentryptr (find-mactype '(:pointer :atqentry)))(def-mactype :atalktransitioneventprocptr (find-mactype ':pointer));  FUNCTION ATalkTransitionEvent(eventCode: LONGINT; qElem: ATQEntryPtr; eventParameter: UNIV Ptr): LONGINT; (def-mactype :atalktransitioneventupp (find-mactype ':pointer))(def-mactype :atalktransitionevent (find-mactype ':pointer))(defrecord ATQEntry    (qLink (:pointer :atqentry))                 ; next queue entry   (qType :signed-integer)                      ; queue type   (CallAddr :pointer)                          ; your routine descriptor   )(defrecord AddrBlock    (aNet :unsigned-integer)   (aNode :signed-byte)                         ;  UInt8    (aSocket :signed-byte)                       ;  UInt8    );  Real definition of EntityName is 3 PACKED strings of any length (32 is just an example). No; offests for Asm since each String address must be calculated by adding length byte to last string ptr.; In Pascal, String(32) will be 34 bytes long since fields never start on an odd byte unless they are ; only a byte long. So this will generate correct looking interfaces for Pascal and C, but they will not; be the same, which is OK since they are not used. (defrecord EntityName    (objStr (:string 32))   (pad1 :signed-byte)                          ; Str32's aligned on even word boundries.   (typeStr (:string 32))   (pad2 :signed-byte)   (zoneStr (:string 32))   (pad3 :signed-byte)   )(def-mactype :entityptr (find-mactype '(:pointer :entityname)))(defrecord RetransType    (retransInterval :unsigned-byte)   (retransCount :unsigned-byte)   )(defrecord BDSElement    (buffSize :signed-integer)   (buffPtr :pointer)   (dataSize :signed-integer)   (userBytes :signed-long)   )(defrecord BDSType (array (array :bdselement 8)))(def-mactype :bdsptr (find-mactype '(:pointer :bdselement)))(defrecord BitMapType (array (array :boolean 8 :packed)))(defrecord ATLAPRec    (abOpcode :signed-byte)   (filler :signed-byte)                        ; 	Filler for proper byte alignment   (abResult :signed-integer)   (abUserReference :signed-long)   (lapAddress :lapadrblock)   (lapReqCount :signed-integer)   (lapActCount :signed-integer)   (lapDataPtr :pointer)   )(def-mactype :atlaprecptr (find-mactype '(:pointer :atlaprec)))(def-mactype :atlaprechandle (find-mactype '(:handle :atlaprec)))(defrecord ATDDPRec    (abOpcode :signed-byte)   (filler :signed-byte)                        ; 	Filler for proper byte alignment   (abResult :signed-integer)   (abUserReference :signed-long)   (ddpType :signed-integer)   (ddpSocket :signed-integer)   (ddpAddress :addrblock)   (ddpReqCount :signed-integer)   (ddpActCount :signed-integer)   (ddpDataPtr :pointer)   (ddpNodeID :signed-integer)   )(def-mactype :atddprecptr (find-mactype '(:pointer :atddprec)))(def-mactype :atddprechandle (find-mactype '(:handle :atddprec)))(defrecord ATNBPRec    (abOpcode :signed-byte)   (filler :signed-byte)                        ; 	Filler for proper byte alignment   (abResult :signed-integer)   (abUserReference :signed-long)   (nbpEntityPtr (:pointer :entityname))   (nbpBufPtr :pointer)   (nbpBufSize :signed-integer)   (nbpDataField :signed-integer)   (nbpAddress :addrblock)   (nbpRetransmitInfo :retranstype)   )(def-mactype :atnbprecptr (find-mactype '(:pointer :atnbprec)))(def-mactype :atnbprechandle (find-mactype '(:handle :atnbprec)))(defrecord ATATPRec    (abOpcode :signed-byte)   (filler1 :signed-byte)                       ; 	Filler for proper byte alignment   (abResult :signed-integer)   (abUserReference :signed-long)   (atpSocket :signed-integer)   (atpAddress :addrblock)   (atpReqCount :signed-integer)   (atpDataPtr :pointer)   (atpRspBDSPtr (:pointer :bdselement))   (atpBitMap :bitmaptype)   (filler2 :signed-byte)                       ;  UInt8 ; 	Filler for proper byte alignment   (atpTransID :signed-integer)   (atpActCount :signed-integer)   (atpUserData :signed-long)   (atpXO :boolean)   (atpEOM :boolean)   (atpTimeOut :signed-integer)   (atpRetries :signed-integer)   (atpNumBufs :signed-integer)   (atpNumRsp :signed-integer)   (atpBDSSize :signed-integer)   (atpRspUData :signed-long)   (atpRspBuf :pointer)   (atpRspSize :signed-integer)   )(def-mactype :atatprecptr (find-mactype '(:pointer :atatprec)))(def-mactype :atatprechandle (find-mactype '(:handle :atatprec)))(defrecord AFPCommandBlock    (cmdByte :unsigned-byte)   (startEndFlag :unsigned-byte)   (forkRefNum :signed-integer)   (rwOffset :signed-long)   (reqCount :signed-long)   (newLineFlag :unsigned-byte)   (newLineChar :character)   )(def-mactype :mpppbptr (find-mactype '(:pointer :mppparamblock)))(def-mactype :atppbptr (find-mactype '(:pointer :atpparamblock)))(def-mactype :xppparmblkptr (find-mactype '(:pointer :xppparamblock))); ; 		MPPCompletionProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => thePBptr    	A0.L; 	(def-mactype :mppcompletionprocptr (find-mactype ':pointer));  register PROCEDURE MPPCompletion(thePBptr: MPPPBPtr); ; ; 		ATPCompletionProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => thePBptr    	A0.L; 	(def-mactype :atpcompletionprocptr (find-mactype ':pointer));  register PROCEDURE ATPCompletion(thePBptr: ATPPBPtr); ; ; 		XPPCompletionProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => thePBptr    	A0.L; 	(def-mactype :xppcompletionprocptr (find-mactype ':pointer));  register PROCEDURE XPPCompletion(thePBptr: XPPParmBlkPtr); ; ; 		AttnRoutineProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => sessRefnum  	D0.W; 		 => attnBytes   	D1.W; 	(def-mactype :attnroutineprocptr (find-mactype ':pointer));  register PROCEDURE AttnRoutine(sessRefnum: INTEGER; attnBytes: INTEGER); (def-mactype :mppcompletionupp (find-mactype ':pointer))(def-mactype :atpcompletionupp (find-mactype ':pointer))(def-mactype :xppcompletionupp (find-mactype ':pointer))(def-mactype :attnroutineupp (find-mactype ':pointer))(defrecord WDSElement    (entryLength :signed-integer)   (entryPtr :pointer)   )(defrecord NTElement    (nteAddress :addrblock)                      ; network address of entity   (filler :signed-byte)   (entityData (:array :signed-byte 99 :packed)); Object, Type & Zone   )(defrecord NamesTableEntry    (qNext :pointer)                             ; ptr to next NTE   (nt :ntelement)   )(def-mactype :mppprotocolhandlerprocptr (find-mactype ':pointer));  FUNCTION MPPProtocolHandler(SCCAddr1: Ptr; SCCAddr2: Ptr; MPPLocalVars: Ptr; nextFreeByteInRHA: Ptr; ReadPacketAndReadRestPtr: Ptr; numBytesLeftToReadInPacket: INTEGER): BOOLEAN; (def-mactype :ddpsocketlistenerprocptr (find-mactype ':pointer));  FUNCTION DDPSocketListener(SCCAddr1: Ptr; SCCAddr2: Ptr; MPPLocalVars: Ptr; nextFreeByteInRHA: Ptr; ReadPacketAndReadRestPtr: Ptr; packetDestinationNumber: ByteParameter; numBytesLeftToReadInPacket: INTEGER): BOOLEAN; (def-mactype :mppprotocolhandlerupp (find-mactype ':pointer))(def-mactype :ddpsocketlistenerupp (find-mactype ':pointer))(defrecord MPPParamBlock    (qLink (:pointer :qelem))   (qType :signed-integer)   (ioTrap :signed-integer)   (ioCmdAddr :pointer)   (ioCompletion :pointer)   (ioResult :signed-integer)   (userData :signed-long)   (reqTID :signed-integer)   (ioRefNum :signed-integer)   (csCode :signed-integer)   (:variant       (      (filler0 :signed-integer)      (wdsPointer :pointer)      )      (      (protType :signed-byte)                   ;  UInt8       (filler :signed-byte)                     ;  UInt8       (handler :pointer)      )      (      (socket :signed-byte)                     ;  UInt8       (checksumFlag :signed-byte)               ;  UInt8       (listener :pointer)      )      (      (interval :signed-byte)                   ;  UInt8 ; retry interval       (count :signed-byte)                      ;  UInt8 ; retry count       (nbpPtrs :pointer)      (:variant          (         (verifyFlag :signed-byte)              ;  UInt8          (filler3 :signed-byte)                 ;  UInt8          )         (         (retBuffPtr :pointer)         (retBuffSize :signed-integer)         (maxToGet :signed-integer)         (numGotten :signed-integer)         )         (         (confirmAddr :addrblock)         (newSocket :signed-byte)               ;  UInt8          (filler4 :signed-byte)                 ;  UInt8          )         ))      (      (newSelfFlag :signed-byte)                ;  UInt8 ; self-send toggle flag       (oldSelfFlag :signed-byte)                ;  UInt8 ; previous self-send state       )      (      (nKillQEl :pointer)                       ; ptr to i/o queue element to cancel       )      (      (version :signed-integer)      (varsPtr :pointer)      (DCEPtr :pointer)      (portID :signed-integer)      (configuration :signed-long)      (selfSend :signed-integer)      (netLo :signed-integer)      (netHi :signed-integer)      (ourAdd :signed-long)      (routerAddr :signed-long)      (numOfPHs :signed-integer)      (numOfSkts :signed-integer)      (numNBPEs :signed-integer)      (nTQueue :pointer)      (LAlength :signed-integer)      (linkAddr :pointer)      (zoneName :pointer)      )      (      (appName :pointer)                        ; pointer to application name in buffer      )      )   )(defrecord XPPParamBlock    (qLink (:pointer :qelem))   (qType :signed-integer)   (ioTrap :signed-integer)   (ioCmdAddr :pointer)   (ioCompletion :pointer)   (ioResult :signed-integer)   (cmdResult :signed-long)   (ioVRefNum :signed-integer)   (ioRefNum :signed-integer)   (csCode :signed-integer)   (:variant       (      (abortSCBPtr :pointer)                    ;  SCB pointer for AbortOS      )      (      (aspMaxCmdSize :signed-integer)      (aspQuantumSize :signed-integer)      (numSesss :signed-integer)      )      (      (sessRefnum :signed-integer)      (aspTimeout :signed-byte)                 ;  UInt8       (aspRetry :signed-byte)                   ;  UInt8       (:variant          (         (serverAddr :addrblock)         (scbPointer :pointer)         (attnRoutine :pointer)         )         (         (cbSize :signed-integer)         (cbPtr :pointer)         (rbSize :signed-integer)         (rbPtr :pointer)         (:variant             (            (afpAddrBlock :addrblock)            (afpSCBPtr :pointer)            (afpAttnRoutine :pointer)            )            (            (wdSize :signed-integer)            (wdPtr :pointer)            (ccbStart (:array :signed-byte 296));  UInt8             )            ))         ))      (      (xppSubCode :signed-integer)      (xppTimeout :signed-byte)                 ;  UInt8       (xppRetry :signed-byte)                   ;  UInt8       (filler1 :signed-integer)      (zipBuffPtr :pointer)      (zipNumZones :signed-integer)      (zipLastFlag :signed-byte)                ;  UInt8       (filler2 :signed-byte)                    ;  UInt8       (zipInfoField (:array :signed-byte 70 :packed));  UInt8       )      )   )(defrecord ATPParamBlock    (qLink (:pointer :qelem))   (qType :signed-integer)   (ioTrap :signed-integer)   (ioCmdAddr :pointer)   (ioCompletion :pointer)   (ioResult :signed-integer)   (userData :signed-long)   (reqTID :signed-integer)   (ioRefNum :signed-integer)   (csCode :signed-integer)   (atpSocket :signed-byte)                     ;  UInt8    (atpFlags :signed-byte)                      ;  UInt8    (AddrBlock :addrblock)   (reqLength :signed-integer)   (reqPointer :pointer)   (bdsPointer :pointer)   (:variant       (      (numOfBuffs :signed-byte)                 ;  UInt8       (timeOutVal :signed-byte)                 ;  UInt8       (numOfResps :signed-byte)                 ;  UInt8       (retryCount :signed-byte)                 ;  UInt8       (intBuff :signed-integer)      (TRelTime :signed-byte)                   ;  UInt8       )      (      (filler :signed-byte)                     ;  UInt8       (bdsSize :signed-byte)                    ;  UInt8       (transID :signed-integer)      )      (      (bitMap :signed-byte)                     ;  UInt8       (filler2 :signed-byte)                    ;  UInt8       )      (      (rspNum :signed-byte)                     ;  UInt8       (filler3 :signed-byte)                    ;  UInt8       )      (      (aKillQEl :pointer)      )      )   )(defconstant $uppATalkTransitionEventProcInfo #xFF1);  FUNCTION (4 byte param, 4 byte param, 4 byte param): 4 byte result; (defconstant $uppMPPCompletionProcInfo #x9802)  ;  Register PROCEDURE (4 bytes in A0); (defconstant $uppATPCompletionProcInfo #x9802)  ;  Register PROCEDURE (4 bytes in A0); (defconstant $uppXPPCompletionProcInfo #x9802)  ;  Register PROCEDURE (4 bytes in A0); (defconstant $uppAttnRoutineProcInfo #x61002)   ;  Register PROCEDURE (2 bytes in D0, 2 bytes in D1); (defconstant $uppMPPProtocolHandlerProcInfo #x7F);  SPECIAL_CASE_PROCINFO( kSpecialCaseProtocolHandler ) (defconstant $uppDDPSocketListenerProcInfo #x8F);  SPECIAL_CASE_PROCINFO( kSpecialCaseSocketListener ) ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewATalkTransitionEventProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewMPPCompletionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewATPCompletionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewXPPCompletionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewAttnRoutineProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewMPPProtocolHandlerProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewDDPSocketListenerProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallATalkTransitionEventProc" ((eventCode :signed-long) (qElem (:pointer :atqentry)) (eventParameter :pointer) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM                        ; To be implemented:  Glue to move parameters into registers.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallMPPCompletionProc" ((thePBptr (:pointer :mppparamblock)) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM; To be implemented:  Glue to move parameters into registers.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallATPCompletionProc" ((thePBptr (:pointer :atpparamblock)) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM; To be implemented:  Glue to move parameters into registers.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallXPPCompletionProc" ((thePBptr (:pointer :xppparamblock)) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM; To be implemented:  Glue to move parameters into registers.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallAttnRoutineProc" ((sessRefnum :signed-integer) (attnBytes :signed-integer) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM; To be implemented:  Glue to move parameters according to special case conventions.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallMPPProtocolHandlerProc" ((SCCAddr1 :pointer) (SCCAddr2 :pointer) (MPPLocalVars :pointer) (nextFreeByteInRHA :pointer) (ReadPacketAndReadRestPtr :pointer) (numBytesLeftToReadInPacket :signed-integer) (userRoutine :pointer))   :boolean   () )                                         ; $IFC NOT GENERATINGCFM; To be implemented:  Glue to move parameters according to special case conventions.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallDDPSocketListenerProc" ((SCCAddr1 :pointer) (SCCAddr2 :pointer) (MPPLocalVars :pointer) (nextFreeByteInRHA :pointer) (ReadPacketAndReadRestPtr :pointer) (packetDestinationNumber :signed-byte) (numBytesLeftToReadInPacket :signed-integer) (userRoutine :pointer))   :boolean   () );; Warning: No calling method defined for this trap;; Using mcl2 version of openxpp because there is no implementation in the new headers(deftrap "_OpenXPP"         ((xpprefnum (:pointer :signed-integer)))         (:no-trap :signed-integer)         (:no-trap (openxpp xpprefnum)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspopensession because there is no implementation in the new headers(deftrap "_ASPOpenSession"         ((thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 255 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspclosesession because there is no implementation in the new headers(deftrap "_ASPCloseSession"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 254 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspabortos because there is no implementation in the new headers(deftrap "_ASPAbortOS"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 248 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspgetparms because there is no implementation in the new headers(deftrap "_ASPGetParms"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 249 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspcloseall because there is no implementation in the new headers(deftrap "_ASPCloseAll"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 247 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspuserwrite because there is no implementation in the new headers(deftrap "_ASPUserWrite"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 252 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspusercommand because there is no implementation in the new headers(deftrap "_ASPUserCommand"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 253 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of aspgetstatus because there is no implementation in the new headers(deftrap "_ASPGetStatus"         ((thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 251 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of afpcommand because there is no implementation in the new headers(deftrap "_AFPCommand"         ((Thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -41 250 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of getlocalzones because there is no implementation in the new headers(deftrap "_GetLocalZones"         ((thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-1 thepbptr -41 246 5 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of getzonelist because there is no implementation in the new headers(deftrap "_GetZoneList"         ((thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-1 thepbptr -41 246 6 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of getmyzone because there is no implementation in the new headers(deftrap "_GetMyZone"         ((thepbptr (:pointer :xppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-1 thepbptr -41 246 7 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pattachph because there is no implementation in the new headers(deftrap "_PAttachPH"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 245 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pdetachph because there is no implementation in the new headers(deftrap "_PDetachPH"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 244 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pwritelap because there is no implementation in the new headers(deftrap "_PWriteLap"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 245 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of popenskt because there is no implementation in the new headers(deftrap "_POpenSkt"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 248 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pcloseskt because there is no implementation in the new headers(deftrap "_PCloseSkt"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 247 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pwriteddp because there is no implementation in the new headers(deftrap "_PWriteDDP"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 246 async)));; Warning: No calling method defined for this trap;; Using mcl2 version of pregistername because there is no implementation in the new headers(deftrap "_PRegisterName"         ((thepbptr (:pointer :mppparamblock)) (async :boolean))         (:no-trap :signed-integer)         (:no-trap (pb-control-0 thepbptr -10 253 async)));; Warning: No calling method defined for this trap(deftrap-inline "_PLookupName" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PConfirmName" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PRemoveName" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PSetSelfSend" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PKillNBP" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PGetAppleTalkInfo" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PATalkClosePrep" ((thePBptr (:pointer :mppparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_POpenATPSkt" ((thePBptr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PCloseATPSkt" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PSendRequest" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PGetRequest" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PSendResponse" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PAddResponse" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PRelTCB" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PRelRspCB" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PNSendRequest" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PKillSendReq" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PKillGetReq" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPKillAllGetReq" ((thePBPtr (:pointer :atpparamblock)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_BuildLAPwds" ((wdsPtr :pointer) (dataPtr :pointer) (destHost :signed-integer) (prototype :signed-integer) (frameLen :signed-integer))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_BuildDDPwds" ((wdsPtr :pointer) (headerPtr :pointer) (dataPtr :pointer) (netAddr :addrblock) (ddpType :signed-integer) (dataLen :signed-integer))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPSetEntity" ((buffer :pointer) (nbpObject (:string 32)) (nbpType (:string 32)) (nbpZone (:string 32)))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPSetNTE" ((ntePtr :pointer) (nbpObject (:string 32)) (nbpType (:string 32)) (nbpZone (:string 32)) (socket :signed-integer))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_GetBridgeAddress" ()   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_BuildBDS" ((buffPtr :pointer) (bdsPtr :pointer) (buffSize :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_MPPOpen" ()   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPAddATQ" ((theATQEntry (:pointer :atqentry)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPRmvATQ" ((theATQEntry (:pointer :atqentry)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPLoad" ()   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPUnload" ()   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPExtract" ((theBuffer :pointer) (numInBuf :signed-integer) (whichOne :signed-integer) (abEntity (:pointer :entityname)) (address (:pointer :addrblock)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_GetNodeAddress" ((myNode (:pointer :signed-integer)) (myNet (:pointer :signed-integer)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_IsMPPOpen" ()   :boolean   () );; Warning: No calling method defined for this trap(deftrap-inline "_IsATPOpen" ()   :boolean   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATEvent" ((event :signed-long) (infoPtr :pointer))   nil   () )                                         ; ; 	The following routines are obsolete and will not be supported on; 	PowerPC. Equivalent functionality is provided by the routines; 	above.;                                               ; $IFC OLDROUTINENAMES  & NOT GENERATINGCFM ;; Warning: No calling method defined for this trap(deftrap-inline "_ATPreFlightEvent" ((event :signed-long) (cancel :signed-long) (infoPtr :pointer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_MPPClose" ()   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPOpenProtocol" ((theLAPType :signed-byte) (protoPtr :pointer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPCloseProtocol" ((theLAPType :signed-byte))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPWrite" ((abRecord (:handle :atlaprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPRead" ((abRecord (:handle :atlaprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_LAPRdCancel" ((abRecord (:handle :atlaprec)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_DDPOpenSocket" ((theSocket (:pointer :signed-integer)) (sktListener :pointer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_DDPCloseSocket" ((theSocket :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_DDPRead" ((abRecord (:handle :atddprec)) (retCksumErrs :boolean) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_DDPWrite" ((abRecord (:handle :atddprec)) (doChecksum :boolean) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_DDPRdCancel" ((abRecord (:handle :atddprec)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPOpenSocket" ((addrRcvd :addrblock) (atpSocket (:pointer :signed-integer)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPCloseSocket" ((atpSocket :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPSndRequest" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPRequest" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPReqCancel" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPGetRequest" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPSndRsp" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPAddRsp" ((abRecord (:handle :atatprec)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPResponse" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_ATPRspCancel" ((abRecord (:handle :atatprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPRegister" ((abRecord (:handle :atnbprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPLookup" ((abRecord (:handle :atnbprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPConfirm" ((abRecord (:handle :atnbprec)) (async :boolean))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPRemove" ((abEntity (:pointer :entityname)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_NBPLoad" ()   :signed-integer   () )                                         ; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := AppleTalkIncludes; $ENDC; __APPLETALK__#|                                              ; $IFC NOT UsingIncludes;; No calling method defined for this trap(deftrap-inline "_NBPUnload" ()   :signed-integer   () ) |#                                             ; $ENDC(provide-interface 'AppleTalk);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch(DEF-MACTYPE :XPPPRMBLKTYPE (FIND-MACTYPE :UNSIGNED-BYTE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEF-MACTYPE :MPPPARMTYPE (FIND-MACTYPE :UNSIGNED-LONGINT));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEF-MACTYPE :XPPSUBPRMTYPE (FIND-MACTYPE :UNSIGNED-BYTE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEF-MACTYPE :XPPENDPRMTYPE (FIND-MACTYPE :UNSIGNED-BYTE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEF-MACTYPE :ABRECPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFRECORD (ABUSRECORD :HANDLE)           (ABOPCODE :SIGNED-INTEGER)           (ABRESULT :SIGNED-INTEGER)           (ABUSERREFERENCE :SIGNED-LONG)           (:VARIANT            ((LAPADDRESS :LAPADRBLOCK) (LAPREQCOUNT :SIGNED-INTEGER)             (LAPACTCOUNT :SIGNED-INTEGER) (LAPDATAPTR :POINTER))            ((FILLER2 :SIGNED-BYTE) (DDPTYPE :UNSIGNED-BYTE)             (FILLER3 :SIGNED-BYTE) (DDPSOCKET :UNSIGNED-BYTE)             (DDPADDRESS :ADDRBLOCK) (DDPREQCOUNT :SIGNED-INTEGER)             (DDPACTCOUNT :SIGNED-INTEGER) (DDPDATAPTR :POINTER)             (FILLER4 :SIGNED-BYTE) (DDPNODEID :UNSIGNED-BYTE))            ((NBPENTITYPTR (:POINTER ENTITYNAME)) (NBPBUFPTR :POINTER)             (NBPBUFSIZE :SIGNED-INTEGER) (NBPDATAFIELD :SIGNED-INTEGER)             (NBPADDRESS :ADDRBLOCK) (NBPRETRANSMITINFO :RETRANSTYPE))            ((FILLER5 :SIGNED-BYTE) (ATPSOCKET :UNSIGNED-BYTE)             (ATPADDRESS :ADDRBLOCK) (ATPREQCOUNT :SIGNED-INTEGER)             (ATPDATAPTR :POINTER) (ATPRSPBDSPTR (:POINTER :BDSTYPE))             (FILLER6 :SIGNED-BYTE) (ATPBITMAP :UNSIGNED-BYTE)             (ATPTRANSID :SIGNED-INTEGER) (ATPACTCOUNT :SIGNED-INTEGER)             (ATPUSERDATA :SIGNED-LONG) (ATPXO :BOOLEAN) (ATPEOM :BOOLEAN)             (FILLER7 :SIGNED-BYTE) (ATPTIMEOUT :UNSIGNED-BYTE)             (FILLER8 :SIGNED-BYTE) (ATPRETRIES :UNSIGNED-BYTE)             (FILLER9 :SIGNED-BYTE) (ATPNUMBUFS :UNSIGNED-BYTE)             (FILLER10 :SIGNED-BYTE) (ATPNUMRSP :UNSIGNED-BYTE)             (FILLER11 :SIGNED-BYTE) (ATPBDSSIZE :UNSIGNED-BYTE)             (ATPRSPUDATA :SIGNED-LONG) (ATPRSPBUF :POINTER)             (ATPRSPSIZE :SIGNED-INTEGER))));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEF-MACTYPE :ABRECHANDLE (FIND-MACTYPE :HANDLE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $OPENATPSKTPARM 6);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $DETACHPHPARM 2);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $CONFIRMNAMEPARM 16);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $SENDREQUESTPARM 8);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $KILLALLGETREQPARM 24);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $SETSELFSENDPARM 18);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $KILLNBPPARM 22);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $GETREQUESTPARM 9);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ASPOPENPRM 0);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $XPPPRMBLK 0);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $AFPLOGINPRM 0);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ASPENDPRM 1);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $REMOVENAMEPARM 17);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $CLOSESKTPARM 4);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $CANCELATALKCLOSEPREPPARM 26);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ASPSUBPRM 1);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ATALKCLOSEPREPPARM 25);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $SENDRESPONSEPARM 10);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $RELTCBPARM 12);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $KILLSENDREQPARM 20);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $KILLGETREQPARM 21);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $CLOSEATPSKTPARM 7);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ATTACHPHPARM 1);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $LOOKUPNAMEPARM 15);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ASPABORTPRM 2);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $OPENSKTPARM 3);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $XCALLPARAM 3);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ADDRESPONSEPARM 11);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $REGISTERNAMEPARM 14);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $GETAPPLETALKINFOPARM 23);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $RELRSPCBPARM 13);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $NSENDREQUESTPARM 19);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $ASPSIZEBLK 1);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $LAPWRITEPARM 0);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:AppleTalk.patch (DEFCONSTANT $WRITEDDPPARM 5)