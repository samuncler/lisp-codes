(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Timer.p"; at Tuesday June 6,1995 2:22:48 pm.; ;  	File:		Timer.p;  ;  	Contains:	Time Manager interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in ÒMPW LatestÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __TIMER__; $SETC __TIMER__ := 1; $I+; $SETC TimerIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __OSUTILS__|#(require-interface 'OSUtils)#|                                              ; $I OSUtils.p |#                                             ; $ENDC; 	MixedMode.p													; 	Memory.p													; $PUSH; $ALIGN MAC68K; $LibExport+;  high bit of qType is set if task is active (defconstant $kTMTaskActive 32768)(def-mactype :tmtaskptr (find-mactype '(:pointer :tmtask))); ; 		TimerProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => tmTaskPtr   	A1.L; 	(def-mactype :timerprocptr (find-mactype ':pointer));  register PROCEDURE Timer(tmTaskPtr: TMTaskPtr); (def-mactype :timerupp (find-mactype ':pointer))(defrecord TMTask    (qLink (:pointer :qelem))   (qType :signed-integer)   (tmAddr :pointer)   (tmCount :signed-long)   (tmWakeUp :signed-long)   (tmReserved :signed-long)   ); $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-no-return(deftrap "_InsTime" ((tmTaskPtr (:pointer :qelem)))   nil   (:register-trap #xA058 :a0 tmTaskPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-no-return(deftrap "_InsXTime" ((tmTaskPtr (:pointer :qelem)))   nil   (:register-trap #xA458 :a0 tmTaskPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_PrimeTime" ((tmTaskPtr (:pointer :qelem)) (count :signed-long))   nil   (:register-trap #xA05A :d0 count :a0 tmTaskPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-no-return(deftrap "_RmvTime" ((tmTaskPtr (:pointer :qelem)))   nil   (:register-trap #xA059 :a0 tmTaskPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_Microseconds" ((microTickCount (:pointer :unsignedwide)))   nil   (#xA193 #x225F #x22C8 #x2280) ); $ENDC(defconstant $uppTimerProcInfo #xB802)          ;  Register PROCEDURE (4 bytes in A1); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewTimerProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM                        ; To be implemented:  Glue to move parameters into registers.; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := TimerIncludes; $ENDC; __TIMER__; $IFC NOT UsingIncludes;; Warning: No calling method defined for this trap(deftrap-inline "_CallTimerProc" ((TMTaskPtr (:pointer :tmtask)) (userRoutine :pointer))   nil   () ); $ENDC(provide-interface 'Timer)