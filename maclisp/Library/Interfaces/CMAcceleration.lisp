(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:CMAcceleration.p"; at Tuesday June 6,1995 2:05:21 pm.; ;  	File:		CMAcceleration.p;  ;  	Contains:	ColorSync 2.0 Acceleration Component Interfaces;  ;  	Version:	Technology:	ColorSync 2.0;  				Package:	Universal Interfaces 2.1ß1 in “MPW Prerelease” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __CMACCELERATION__; $SETC __CMACCELERATION__ := 1; $I+; $SETC CMAccelerationIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __MEMORY__|#(require-interface 'Memory)#|                                              ; $I Memory.p |#                                             ; $ENDC; 	Types.p														; 		ConditionalMacros.p										; 	MixedMode.p													#|                                              ; $IFC UNDEFINED __COMPONENTS__|#(require-interface 'Components)#|                                              ; $I Components.p |#                                             ; $ENDC; $IFC UNDEFINED __CMAPPLICATION__(require-interface 'CMApplication)              ; $I CMApplication.p; $ENDC; 	Quickdraw.p													; 		QuickdrawText.p											; 	Files.p														; 		OSUtils.p												; 	Printing.p													; 		Errors.p												; 		Dialogs.p												; 			Windows.p											; 				Events.p										; 				Controls.p										; 					Menus.p										; 			TextEdit.p											; 	CMICCProfile.p												; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $cmAccelerationInterfaceVersion 1); –––––––––––––––––––––––––––––––––––––– Component Type(defconstant $cmAccelerationComponentType :|csac|); –––––––––––––––––––––––––––––––––––––– Required Component function selectors(defconstant $cmLoadTables 0)(defconstant $cmCalculateData 1); –––––––––––––––––––––––––––––––––––––– table data for acceleration component(defrecord CMAccelerationTableData    (inputLutEntryCount :signed-long)            ;  count of entries for input lut for one dimension   (inputLutWordSize :signed-long)              ;  count of bits of each entry ( e.g. 16 for WORD )   (inputLut :handle)                           ;  handle to input lut   (outputLutEntryCount :signed-long)           ;  count of entries for output lut for one dimension	   (outputLutWordSize :signed-long)             ;  count of bits of each entry ( e.g. 8 for BYTE )   (outputLut :handle)                          ;  handle to output lut   (colorLutInDim :signed-long)                 ;  input dimension  ( e.g. 3 for LAB ; 4 for CMYK )   (colorLutOutDim :signed-long)                ;  output dimension ( e.g. 3 for LAB ; 4 for CMYK )   (colorLutGridPoints :signed-long)            ;  count of gridpoints for color lut ( for one Dimension )	   (colorLutWordSize :signed-long)              ;  count of bits of each entry ( e.g. 8 for BYTE )   (colorLut :handle)                           ;  handle to color lut   (inputColorSpace :signed-long)               ;  packing info for input   (outputColorSpace :signed-long)              ;  packing info for output   (userData :pointer)   ;;Changing field reserved1 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved1 :unsigned-long)   ;;Changing field reserved2 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved2 :unsigned-long)   ;;Changing field reserved3 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved3 :unsigned-long)   ;;Changing field reserved4 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved4 :unsigned-long)   ;;Changing field reserved5 from signed-long to unsigned-long to match C header (pretty-darn-sure)   (reserved5 :unsigned-long)   )(def-mactype :cmaccelerationtabledataptr (find-mactype '(:pointer :cmaccelerationtabledata)))(def-mactype :cmaccelerationtabledatahdl (find-mactype '(:handle :cmaccelerationtabledata))); –––––––––––––––––––––––––––––––––––––– calc data for acceleration component(defrecord CMAccelerationCalcData    (pixelCount :signed-long)                    ;  count of input pixels   (inputData :pointer)                         ;  input array   (outputData :pointer)                        ;  output array   ;;Changing field reserved1 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved1 :unsigned-long)   ;;Changing field reserved2 from signed-long to unsigned-long to match C header (pretty-sure)   (reserved2 :unsigned-long)   )(def-mactype :cmaccelerationcalcdataptr (find-mactype '(:pointer :cmaccelerationcalcdata)))(def-mactype :cmaccelerationcalcdatahdl (find-mactype '(:handle :cmaccelerationcalcdata))); ————————————————————————————————————————————————————————————————————————————————————————————————; 				A c c e l e r a t i o n   C o m p o n e n t   I n t e r f a c e s; ————————————————————————————————————————————————————————————————————————————————————————————————; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CMAccelerationLoadTables" ((CMSession (:pointer :componentinstancerecord)) (tableData (:pointer :cmaccelerationtabledata)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 CMSession tableData ((+ (ash 4 16) 0) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CMAccelerationCalculateData" ((CMSession (:pointer :componentinstancerecord)) (calcData (:pointer :cmaccelerationcalcdata)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 CMSession calcData ((+ (ash 4 16) 1) :signed-longint))); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := CMAccelerationIncludes; $ENDC                                         ; __CMACCELERATION__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'CMAcceleration)