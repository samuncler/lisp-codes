(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:ASDebugging.p"; at Tuesday June 6,1995 2:05:01 pm.; ;  	File:		ASDebugging.p;  ;  	Contains:	AppleScript Debugging Interfaces.;  ;  	Version:	Technology:	AppleScript 1.1;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __ASDEBUGGING__; $SETC __ASDEBUGGING__ := 1; $I+; $SETC ASDebuggingIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __APPLEEVENTS__|#(require-interface 'AppleEvents)#|                                              ; $I AppleEvents.p |#                                             ; $ENDC; 	Errors.p													; 		ConditionalMacros.p										; 	Types.p														; 	Memory.p													; 		MixedMode.p												; 	OSUtils.p													; 	Events.p													; 		Quickdraw.p												; 			QuickdrawText.p										; 	EPPC.p														; 		AppleTalk.p												; 		Files.p													; 		PPCToolbox.p											; 		Processes.p												; 	Notification.p												#|                                              ; $IFC UNDEFINED __APPLESCRIPT__|#(require-interface 'AppleScript)#|                                              ; $I AppleScript.p |#                                             ; $ENDC; 	OSA.p														; 		AEObjects.p												; 		Components.p											; 	TextEdit.p													; $PUSH; $ALIGN MAC68K; $LibExport+;  	This mode flag can be passed to OSASetProperty or OSASetHandler; 		and will prevent properties or handlers from being defined in a context; 		that doesn't already have bindings for them. An error is returned if; 		a current binding doesn't already exist. (defconstant $kOSAModeDontDefine #x1); *************************************************************************; 	Component Selectors; *************************************************************************(defconstant $kASSelectSetPropertyObsolete #x1101)(defconstant $kASSelectGetPropertyObsolete #x1101)(defconstant $kASSelectSetHandlerObsolete #x1103)(defconstant $kASSelectGetHandlerObsolete #x1104)(defconstant $kASSelectGetAppTerminologyObsolete #x1105)(defconstant $kASSelectSetProperty #x1106)(defconstant $kASSelectGetProperty #x1107)(defconstant $kASSelectSetHandler #x1108)(defconstant $kASSelectGetHandler #x1109)(defconstant $kASSelectGetAppTerminology #x110A)(defconstant $kASSelectGetSysTerminology #x110B)(defconstant $kASSelectGetPropertyNames #x110C)(defconstant $kASSelectGetHandlerNames #x110D); *************************************************************************; 	Context Accessors; *************************************************************************; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSASetProperty" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (variableName (:pointer :aedesc)) (scriptValueID :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID variableName scriptValueID ((+ (ash 16 16) 4358) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetProperty" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (variableName (:pointer :aedesc)) (resultingScriptValueID (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID variableName resultingScriptValueID ((+ (ash 16 16) 4359) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetPropertyNames" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (resultingPropertyNames (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID resultingPropertyNames ((+ (ash 12 16) 4364) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSASetHandler" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (handlerName (:pointer :aedesc)) (compiledScriptID :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID handlerName compiledScriptID ((+ (ash 16 16) 4360) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetHandler" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (handlerName (:pointer :aedesc)) (resultingCompiledScriptID (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID handlerName resultingCompiledScriptID ((+ (ash 16 16) 4361) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetHandlerNames" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (contextID :signed-long) (resultingHandlerNames (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags contextID resultingHandlerNames ((+ (ash 12 16) 4365) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetAppTerminology" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (fileSpec (:pointer :fsspec)) (terminologyID :signed-integer) (didLaunch (:pointer :boolean)) (terminologyList (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags fileSpec terminologyID didLaunch terminologyList ((+ (ash 18 16) 4362) :signed-longint))); $ENDC;  Errors:; 	   errOSASystemError		operation failed; 	; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_OSAGetSysTerminology" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (terminologyID :signed-integer) (terminologyList (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags terminologyID terminologyList ((+ (ash 10 16) 4363) :signed-longint))); $ENDC;  Errors:; 	   errOSASystemError		operation failed; 	;  Notes on terminology ID; ; 	A terminology ID is derived from script code and language code; 	as follows;; ; 		terminologyID = ((scriptCode & 0x7F) << 8) | (langCode & 0xFF); ; *************************************************************************; 	Obsolete versions provided for backward compatibility:; ; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASSetProperty" ((scriptingComponent (:pointer :componentinstancerecord)) (contextID :signed-long) (variableName (:pointer :aedesc)) (scriptValueID :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent contextID variableName scriptValueID ((+ (ash 12 16) 4353) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASGetProperty" ((scriptingComponent (:pointer :componentinstancerecord)) (contextID :signed-long) (variableName (:pointer :aedesc)) (resultingScriptValueID (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent contextID variableName resultingScriptValueID ((+ (ash 12 16) 4353) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASSetHandler" ((scriptingComponent (:pointer :componentinstancerecord)) (contextID :signed-long) (handlerName (:pointer :aedesc)) (compiledScriptID :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent contextID handlerName compiledScriptID ((+ (ash 12 16) 4355) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASGetHandler" ((scriptingComponent (:pointer :componentinstancerecord)) (contextID :signed-long) (handlerName (:pointer :aedesc)) (resultingCompiledScriptID (:pointer :signed-long)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent contextID handlerName resultingCompiledScriptID ((+ (ash 12 16) 4356) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASGetAppTerminology" ((scriptingComponent (:pointer :componentinstancerecord)) (fileSpec (:pointer :fsspec)) (terminologID :signed-integer) (didLaunch (:pointer :boolean)) (terminologyList (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent fileSpec terminologID didLaunch terminologyList ((+ (ash 14 16) 4357) :signed-longint))); $ENDC;  Errors:; 		errOSASystemError		operation failed; 	; ************************************************************************; $ALIGN RESET; $POP; $SETC UsingIncludes := ASDebuggingIncludes; $ENDC                                         ; __ASDEBUGGING__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'ASDebugging)