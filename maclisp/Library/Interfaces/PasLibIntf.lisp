(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:PasLibIntf.p"; at Tuesday June 6,1995 2:12:59 pm.; *-------------------------------------------------------------------------------*;  |																				 |;  |						  <<< Pascal Library Interface >>>						 |;  |																				 |;  |					  Copyright Apple Computer, Inc. 1986, 1992, 1994			 |;  |							   All rights reserved. 							 |;  |																				 |;  *-------------------------------------------------------------------------------*; ;  Interface to the Pascal I/O and Memory Manager Library.;  Built-in procedure and function declarations are marked with;  the (* *) comment characters; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED UsingPASLIBINTF AND UNDEFINED __PASLIBINTF__; $SETC UsingPASLIBINTF := 1; $I+; $SETC PASLIBINTFIncludes := UsingIncludes; $SETC UsingIncludes := 1; $IFC UNDEFINED UsingTypes AND UNDEFINED __TYPES__(require-interface 'Types)                      ; $I $$Shell(PInterfaces)Types.p; $ENDC; $IFC UNDEFINED UsingFiles AND UNDEFINED __FILES__(require-interface 'Files)                      ; $I $$Shell(PInterfaces)Files.p; $ENDC; $IFC UNDEFINED UsingAliases AND UNDEFINED __ALIASES__(require-interface 'Aliases)                    ; $I $$Shell(PInterfaces)Aliases.p; $ENDC#|                                              ; $IFC UNDEFINED __CONDITIONALMACROS__|#(require-interface 'ConditionalMacros)#|                                              ; $I ConditionalMacros.p |#                                             ; $ENDC; $ALIGN MAC68K; $SETC UsingIncludes := PASLIBINTFIncludes(def-mactype :pascalpointer (find-mactype '(:pointer :signed-integer)));  Universal POINTER type (def-mactype :pascalfile (find-mactype ':invalid-type));  Universal FILE type ; ;  	  PASCALBLOCK =    { Universal block of chars };  			PACKED ARRAY [0..511] OF CHAR;;  ;  <StdIO.h> PLSetVBuf styles (defconstant _IOFBF #x0)                        ;  File buffering (defconstant _IOLBF #x40)                       ;  Line buffering (defconstant _IONBF #x4)                        ;  No buffering ; ;  Mac Pascal heap management; ; ;  The following procedure is obsolete, use PLHeapInit; ;; Warning: No calling method defined for this trap(deftrap-inline "_PLHeapInit" ((sizepheap :signed-long) (heapDelta :signed-long) (memerrProc (:pointer :signed-integer)) (allowNonCont :boolean) (forDispose :boolean))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLInitHeap" ((sizepheap :signed-long) (memerrProc (:pointer :signed-integer)) (allowNonCont :boolean) (allowDispose :boolean))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLSetNonCont" ((allowNonCont :boolean))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLSetMErrProc" ((memerrProc (:pointer :signed-integer)))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLSetHeapType" ((forDispose :boolean))   nil   () )                                         ; ;  File I/O;                                               ; ;  	  PROCEDURE;  		RESET(VAR fvar:  UNIV PASCALFILE; OPT fname: STRING);;  		BUILTIN;;  ;  	  PROCEDURE;  		REWRITE(VAR fvar: UNIV PASCALFILE; OPT fname: STRING);;  		BUILTIN;;  ;  	  PROCEDURE;  		OPEN(VAR fvar:	UNIV PASCALFILE; fname: STRING);;  		BUILTIN;;  ;; Warning: No calling method defined for this trap(deftrap-inline "_PLSetHeapCheck" ((DoIt :boolean))   nil   () )                                         ; ;  	  FUNCTION;  		BLOCKREAD(;  		  VAR fvar: FILE;;  		  VAR buffer: UNIV PASCALBLOCK;;  		  nBlocks: INTEGER;;  		  OPT stBlock:INTEGER;  		):;  		INTEGER;;  		BUILTIN;;  ;  	  FUNCTION;  		BLOCKWRITE(;  		  VAR fvar: FILE;;  		  VAR buffer: UNIV PASCALBLOCK;;  		  nBlocks: INTEGER;;  		  OPT stBlock:INTEGER;  		):;  		INTEGER;;  		BUILTIN;;  ;  	  FUNCTION;  		BYTEREAD(;  		  VAR fvar: FILE;;  		  VAR buffer: UNIV PASCALBLOCK;;  		  nBytes:  LONGINT;;  		  OPT stByte: LONGINT;  		):;  		LONGINT;;  		BUILTIN;;  ;  	  FUNCTION;  		BYTEWRITE(;  		  VAR fvar: FILE;;  		  VAR buffer: UNIV PASCALBLOCK;;  		  nBytes:  LONGINT;;  		  OPT stByte: LONGINT;  		):;  		LONGINT;;  		BUILTIN;;  ;  	  FUNCTION;  		EOF(OPT VAR fvar: UNIV PASCALFILE):;  		BOOLEAN;;  		BUILTIN;;  ;  	  FUNCTION;  		EOLN(OPT VAR fvar: TEXT):;  		BOOLEAN;;  		BUILTIN;;  ;  	  PROCEDURE;  		READ(VAR fvar: TEXT; OPT EXPR_LIST);;  		BUILTIN;;  ;  	  PROCEDURE;  		READLN(OPT VAR fvar: TEXT; OPT EXPR_LIST);;  		BUILTIN;;  ;  	  PROCEDURE;  		WRITE(VAR fvar: TEXT; OPT EXPR_LIST);;  		BUILTIN;;  ;  	  PROCEDURE;  		WRITELN(OPT VAR fvar: TEXT; OPT EXPR_LIST);;  		BUILTIN;;  ;  	  PROCEDURE;  		GET(VAR fvar: UNIV PASCALFILE);;  		BUILTIN;;  ;  	  PROCEDURE;  		PUT(VAR fvar: UNIV PASCALFILE);;  		BUILTIN;;  ;  	  PROCEDURE;  		SEEK(VAR fvar: UNIV PASCALFILE; recno: LONGINT);;  		BUILTIN;;  ;; Warning: No calling method defined for this trap(deftrap-inline "_PLSetVBuf" ((fvar (:pointer :text)) (buffer (:pointer :signed-integer)) (style :signed-integer) (bufsize :signed-integer))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLFilePos" ((fvar (:pointer :invalid-type)))   :signed-long   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLFlush" ((fvar (:pointer :text)))   nil   () )                                         ; ;  Directory operations.; ;; Warning: No calling method defined for this trap(deftrap-inline "_PLCrunch" ((fvar (:pointer :invalid-type)))   nil   () )                                         ; ;  Miscellaneous Operations; #|                                              ; $IFC NOT UNDEFINED __CFM68K__; $IFC NOT UNDEFINED UsingSharedLibs; $PUSH; $LibExport+; $ENDC |#                                             ; $ENDC;  The following definition has been moved to MacRuntime.p ; 	FUNCTION TrapAvailable(trap: INTEGER): BOOLEAN; ;  The following functions can no longer be called directly from Pascal.;   They have been replaced by IExxxxx glue routines, defined below. ; ; 	FUNCTION ResolveFolderAliases (volume: INTEGER; directory: LONGINT;; 								   path: Str255; resolveLeafName: BOOLEAN;; 								   VAR theSpec: FSSpec; VAR isFolder, hadAlias,; 								   leafIsAlias: BOOLEAN): OSErr; C;; ; 	FUNCTION MakeResolvedFSSpec (volume: INTEGER; directory: LONGINT;; 								 path: Str255; VAR theSpec: FSSpec; VAR isFolder,; 								 hadAlias, leafIsAlias: BOOLEAN): OSErr; C;; 	; 	FUNCTION MakeResolvedPath (volume: INTEGER; directory: LONGINT; path: Str255;; 							   resolveLeafAlias: BOOLEAN; VAR buffer: Str255;; 							   VAR isFolder, hadAlias, leafIsAlias: BOOLEAN):; 							   OSErr; C;; ;; Warning: No calling method defined for this trap(deftrap-inline "_PLPurge" ((fname (:string 255)) (PROCEDURE (:string 255)) (PLRename (:string 255)) (oldFname (:string 255)) (newFname (:string 255)) (FUNCTION :signed-integer) (IEResolveFolderAliases :signed-integer) (volume :signed-integer) (directory :signed-long) (path (:string 255)) (resolveLeafName :boolean) (theSpec (:pointer :fsspec)) (isFolder (:pointer :boolean)) (hadAlias (:pointer :boolean)) (leafIsAlias (:pointer :boolean)))   nil   () );; Warning: No calling method defined for this trap(deftrap-inline "_IEMakeResolvedFSSpec" ((volume :signed-integer) (directory :signed-long) (path (:string 255)) (theSpec (:pointer :fsspec)) (isFolder (:pointer :boolean)) (hadAlias (:pointer :boolean)) (leafIsAlias (:pointer :boolean)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_IEResolvePath" ((rawPath (:pointer (:string 255))) (resolvedPath (:pointer (:string 255))) (isFolder (:pointer :boolean)) (hadAlias (:pointer :boolean)))   :signed-integer   () )                                         ; ;  C string functions for Pascal strings; ;; Warning: No calling method defined for this trap(deftrap-inline "_IEMakeResolvedPath" ((volume :signed-integer) (directory :signed-long) (path (:string 255)) (resolveLeafAlias :boolean) (buffer (:pointer (:string 255))) (isFolder (:pointer :boolean)) (hadAlias (:pointer :boolean)) (leafIsAlias (:pointer :boolean)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrCmp" ((string1 (:string 255)) (string2 (:string 255)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrnCmp" ((string1 (:string 255)) (string2 (:string 255)) (n :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrCpy" ((string1 (:pointer (:string 255))) (string2 (:string 255)))   (:pointer (:string 255))   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrnCpy" ((string1 (:pointer (:string 255))) (string2 (:string 255)) (n :signed-integer))   (:pointer (:string 255))   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrCat" ((string1 (:pointer (:string 255))) (string2 (:string 255)))   (:pointer (:string 255))   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrnCat" ((string1 (:pointer (:string 255))) (string2 (:string 255)) (n :signed-integer))   (:pointer (:string 255))   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrChr" ((string1 (:string 255)) (c :character))   :pointer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrrChr" ((string1 (:string 255)) (c :character))   :pointer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrPBrk" ((string1 (:string 255)) (string2 (:string 255)))   :pointer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrSpn" ((string1 (:string 255)) (string2 (:string 255)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrStr" ((string1 (:string 255)) (string2 (:string 255)))   :pointer   () );; Warning: No calling method defined for this trap(deftrap-inline "_PLStrLen" ((string1 (:string 255)))   :signed-integer   () )#|                                              ; $IFC NOT UNDEFINED __CFM68K__; $IFC NOT UNDEFINED UsingSharedLibs; $POP; $ENDC |#                                             ; $ENDC; $ALIGN RESET; $SETC UsingIncludes := PASLIBINTFIncludes; $ENDC;  UsingPASLIBINTF #|                                              ; $IFC NOT UsingIncludes;; No calling method defined for this trap(deftrap-inline "_PLPos" ((STRING1 (:string 255)) (STRING2 (:string 255)))   :signed-integer   () ) |#                                             ; $ENDC(provide-interface 'PasLibIntf); Warning: Did not recognize these types or records: (text)