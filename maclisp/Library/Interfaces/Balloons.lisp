(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Balloons.p"; at Tuesday June 6,1995 2:05:09 pm.; ;  	File:		Balloons.p;  ;  	Contains:	Balloon Help Package Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in ÒMPW LatestÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __BALLOONS__; $SETC __BALLOONS__ := 1; $I+; $SETC BalloonsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __QUICKDRAW__|#(require-interface 'Quickdraw)#|                                              ; $I Quickdraw.p |#                                             ; $ENDC; 	MixedMode.p													; 	QuickdrawText.p												; $IFC UNDEFINED __MENUS__(require-interface 'Menus)                      ; $I Menus.p; $ENDC; 	Memory.p													#|                                              ; $IFC UNDEFINED __TEXTEDIT__|#(require-interface 'TextEdit)#|                                              ; $I TextEdit.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __ERRORS__|#(require-interface 'Errors)#|                                              ; $I Errors.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $hmBalloonHelpVersion #x2)         ;  The real version of the Help Manager (defconstant $kHMHelpMenuID -16490)             ;  Resource ID and menu ID of help menu (defconstant $kHMAboutHelpItem 1)               ;  help menu item number of About Balloon HelpÉ (defconstant $kHMShowBalloonsItem 3)            ;  help menu item number of Show/Hide Balloons (defconstant $kHMHelpID -5696)                  ;  ID of various Help Mgr package resources (in Pack14 range) (defconstant $kBalloonWDEFID 126)               ;  Resource ID of the WDEF proc used in standard balloons ;  Dialog item template type constant (defconstant $helpItem 1)                       ;  key value in DITL template that corresponds to the help item ;  Options for Help Manager resources in 'hmnu', 'hdlg', 'hrct', 'hovr', & 'hfdr' resources (defconstant $hmDefaultOptions 0)               ;  default options for help manager resources (defconstant $hmUseSubID 1)                     ;  treat resID's in resources as subID's of driver base ID (for Desk Accessories) (defconstant $hmAbsoluteCoords 2)               ;  ignore window port origin and treat rectangles as absolute coords (local to window) (defconstant $hmSaveBitsNoWindow 4)             ;  don't create a window, just blast bits on screen. No update event is generated (defconstant $hmSaveBitsWindow 8)               ;  create a window, but restore bits behind window when window goes away & generate update event (defconstant $hmMatchInTitle 16)                ;  for hwin resources, match string anywhere in window title string ;  Constants for Help Types in 'hmnu', 'hdlg', 'hrct', 'hovr', & 'hfdr' resources (defconstant $kHMStringItem 1)                  ;  pstring used in resource (defconstant $kHMPictItem 2)                    ;  'PICT' ResID used in resource (defconstant $kHMStringResItem 3)               ;  'STR#' ResID & index used in resource (defconstant $kHMTEResItem 6)                   ;  Styled Text Edit ResID used in resource ('TEXT' & 'styl') (defconstant $kHMSTRResItem 7)                  ;  'STR ' ResID used in resource (defconstant $kHMSkipItem 256)                  ;  don't display a balloon (defconstant $kHMCompareItem 512)               ;  Compare pstring in menu item w/ PString in resource item ('hmnu' only) (defconstant $kHMNamedResourceItem 1024)        ;  Use pstring in menu item to get 'STR#', 'PICT', or 'STR ' resource ('hmnu' only) (defconstant $kHMTrackCntlItem 2048)            ;  Reserved ;  Constants for hmmHelpType's when filling out HMMessageRecord (defconstant $khmmString 1)                     ;  help message contains a PString (defconstant $khmmPict 2)                       ;  help message contains a resource ID to a 'PICT' resource (defconstant $khmmStringRes 3)                  ;  help message contains a res ID & index to a 'STR#' resource (defconstant $khmmTEHandle 4)                   ;  help message contains a Text Edit handle (defconstant $khmmPictHandle 5)                 ;  help message contains a Picture handle (defconstant $khmmTERes 6)                      ;  help message contains a res ID to 'TEXT' & 'styl' resources (defconstant $khmmSTRRes 7)                     ;  help message contains a res ID to a 'STR ' resource (defconstant $kHMEnabledItem 0)                 ;  item is enabled, but not checked or control value = 0 ;  ResTypes for Styled TE Handles in Resources (defconstant $kHMTETextResType :|TEXT|)         ;  Resource Type of text data for styled TE record w/o style info (defconstant $kHMTEStyleResType :|styl|)(defconstant $kHMDisabledItem 1)                ;  item is disabled, grayed in menus or disabled in dialogs (defconstant $kHMCheckedItem 2)                 ;  item is enabled, and checked or control value = 1 (defconstant $kHMOtherItem 3)                   ;  item is enabled, and control value > 1 ;  Method parameters to pass to HMShowBalloon (defconstant $kHMRegularWindow 0)               ;  Create a regular window floating above all windows (defconstant $kHMSaveBitsNoWindow 1)            ;  Just save the bits and draw (for MDEF calls) (defconstant $kHMSaveBitsWindow 2)              ;  Regular window, save bits behind, AND generate update event ;  Resource Types for whichType parameter used when extracting 'hmnu' & 'hdlg' messages (defconstant $kHMMenuResType :|hmnu|)           ;  ResType of help resource for supporting menus (defconstant $kHMDialogResType :|hdlg|)         ;  ResType of help resource for supporting dialogs (defconstant $kHMWindListResType :|hwin|)       ;  ResType of help resource for supporting windows (defconstant $kHMRectListResType :|hrct|)       ;  ResType of help resource for rectangles in windows (defconstant $kHMOverrideResType :|hovr|)       ;  ResType of help resource for overriding system balloons (defconstant $kHMFinderApplResType :|hfdr|)(defrecord HMStringResType    (hmmResID :signed-integer)   (hmmIndex :signed-integer)   )(defrecord HMMessageRecord    (hmmHelpType :signed-integer)   (:variant       (      (hmmString (:string 255))      )      (      (hmmPict :signed-integer)      )      (      (hmmTEHandle (:handle :terec))      )      (      (hmmStringRes :hmstringrestype)      )      (      (hmmPictRes :signed-integer)      )      (      (hmmPictHandle (:handle :picture))      )      (      (hmmTERes :signed-integer)      )      (      (hmmSTRRes :signed-integer)      )      )   )(def-mactype :hmmessagerecptr (find-mactype '(:pointer :hmmessagerecord)))(def-mactype :tipfunctionprocptr (find-mactype ':pointer));  FUNCTION TipFunction(tip: Point; structure: RgnHandle; VAR r: Rect; VAR balloonVariant: INTEGER): OSErr; (def-mactype :tipfunctionupp (find-mactype ':pointer))(defconstant $uppTipFunctionProcInfo #x3FE0)    ;  FUNCTION (4 byte param, 4 byte param, 4 byte param, 4 byte param): 2 byte result; ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewTipFunctionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallTipFunctionProc" ((tip :point) (structure (:handle :region)) (r (:pointer :rect)) (balloonVariant (:pointer :signed-integer)) (userRoutine :pointer))   :signed-integer   (#x205F #x4E90) ); $ENDC;   Public Interfaces  ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetHelpMenuHandle" ((mh (:pointer (:handle :menuinfo))))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 512 mh)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMShowBalloon" ((aHelpMsg (:pointer :hmmessagerecord)) (tip :point) (alternateRect (:pointer :rect)) (tipProc :pointer) (theProc :signed-integer) (balloonVariant :signed-integer) (method :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 2817 aHelpMsg tip alternateRect tipProc theProc balloonVariant method)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMRemoveBalloon" ()   (:stack :signed-integer)   (:stack-trap #xA830 :d0 2)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetBalloons" ()   (:stack :boolean)   (:stack-trap #xA830 :d0 3)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMSetBalloons" ((flag :boolean))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 260 flag)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMShowMenuBalloon" ((itemNum :signed-integer) (itemMenuID :signed-integer) (itemFlags :signed-long) (itemReserved :signed-long) (tip :point) (alternateRect (:pointer :rect)) (tipProc :pointer) (theProc :signed-integer) (balloonVariant :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 3589 itemNum itemMenuID itemFlags itemReserved tip alternateRect tipProc theProc balloonVariant)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetIndHelpMsg" ((whichType :ostype) (whichResID :signed-integer) (whichMsg :signed-integer) (whichState :signed-integer) (options (:pointer :unsigned-long)) (tip (:pointer :point)) (altRect (:pointer :rect)) (theProc (:pointer :signed-integer)) (balloonVariant (:pointer :signed-integer)) (aHelpMsg (:pointer :hmmessagerecord)) (count (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 4870 whichType whichResID whichMsg whichState options tip altRect theProc balloonVariant aHelpMsg count)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMIsBalloon" ()   (:stack :boolean)   (:stack-trap #xA830 :d0 7)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMSetFont" ((font :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 264 font)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMSetFontSize" ((fontSize :unsigned-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 265 fontSize)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetFont" ((font (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 522 font)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetFontSize" ((fontSize (:pointer :unsigned-integer)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 523 fontSize)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMSetDialogResID" ((resID :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 268 resID)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMSetMenuResID" ((menuID :signed-integer) (resID :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 525 menuID resID)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMBalloonRect" ((aHelpMsg (:pointer :hmmessagerecord)) (coolRect (:pointer :rect)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 1038 aHelpMsg coolRect)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMBalloonPict" ((aHelpMsg (:pointer :hmmessagerecord)) (coolPict (:pointer (:handle :picture))))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 1039 aHelpMsg coolPict)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMScanTemplateItems" ((whichID :signed-integer) (whichResFile :signed-integer) (whichType :ostype))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 1040 whichID whichResFile whichType)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMExtractHelpMsg" ((whichType :ostype) (whichResID :signed-integer) (whichMsg :signed-integer) (whichState :signed-integer) (aHelpMsg (:pointer :hmmessagerecord)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 1809 whichType whichResID whichMsg whichState aHelpMsg)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetDialogResID" ((resID (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 531 resID)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetMenuResID" ((menuID :signed-integer) (resID (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 788 menuID resID)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_HMGetBalloonWindow" ((window (:pointer (:pointer :windowrecord))))   (:stack :signed-integer)   (:stack-trap #xA830 :d0 533 window)); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := BalloonsIncludes; $ENDC                                         ; __BALLOONS__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'Balloons)