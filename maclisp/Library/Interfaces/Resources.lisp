(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Resources.p"; at Tuesday June 6,1995 2:07:20 pm.; ;  	File:		Resources.p;  ;  	Contains:	Resource Manager Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in ÒMPW LatestÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED __RESOURCES__; $SETC __RESOURCES__ := 1; $I+; $SETC ResourcesIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __MIXEDMODE__|#(require-interface 'MixedMode)#|                                              ; $I MixedMode.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __FILES__|#(require-interface 'Files)#|                                              ; $I Files.p |#                                             ; $ENDC; 	OSUtils.p													; 		Memory.p												; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $resSysHeap 64)                    ; System or application heap?(defconstant $resPurgeable 32)                  ; Purgeable resource?(defconstant $resLocked 16)                     ; Load it in locked?(defconstant $resProtected 8)                   ; Protected?(defconstant $resPreload 4)                     ; Load in on OpenResFile?(defconstant $resChanged 2)                     ; Resource changed?(defconstant $mapReadOnly 128)                  ; Resource file read-only(defconstant $mapCompact 64)                    ; Compact resource file(defconstant $mapChanged 32)                    ; Write map out at update(defconstant $kResFileNotOpened -1)             ; ref num return as error when opening a resource file(defconstant $kSystemResFile 0)                 ; this is the default ref num to the system file; ; 		ResErrProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => thErr       	D0.W; 	(def-mactype :reserrprocptr (find-mactype ':pointer));  register PROCEDURE ResErr(thErr: OSErr); (def-mactype :reserrupp (find-mactype ':pointer))(defconstant $uppResErrProcInfo #x1002)         ;  Register PROCEDURE (2 bytes in D0); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewResErrProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM                        ; To be implemented:  Glue to move parameters into registers.; $ENDC; 	These are no longer needed.;  *	CFM provides us with the necessary run time initialization;  *	entry points.;  ;; Warning: No calling method defined for this trap(deftrap-inline "_CallResErrProc" ((thErr :signed-integer) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_InitResources" ()   (:stack :signed-integer)   (:stack-trap #xA995)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_RsrcZoneInit" ()   nil   (:stack-trap #xA996)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_CloseResFile" ((refNum :signed-integer))   nil   (:stack-trap #xA99A)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_ResError" ()   (:stack :signed-integer)   (:stack-trap #xA9AF)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_CurResFile" ()   (:stack :signed-integer)   (:stack-trap #xA994)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_HomeResFile" ((theResource :handle))   (:stack :signed-integer)   (:stack-trap #xA9A4)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_CreateResFile" ((fileName (:string 255)))   nil   (:stack-trap #xA9B1)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_OpenResFile" ((fileName (:string 255)))   (:stack :signed-integer)   (:stack-trap #xA997)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_UseResFile" ((refNum :signed-integer))   nil   (:stack-trap #xA998)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_CountTypes" ()   (:stack :signed-integer)   (:stack-trap #xA99E)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Count1Types" ()   (:stack :signed-integer)   (:stack-trap #xA81C)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetIndType" ((theType (:pointer :ostype)) (index :signed-integer))   nil   (:stack-trap #xA99F)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Get1IndType" ((theType (:pointer :ostype)) (index :signed-integer))   nil   (:stack-trap #xA80F)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetResLoad" ((load :boolean))   nil   (:stack-trap #xA99B)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_CountResources" ((theType :ostype))   (:stack :signed-integer)   (:stack-trap #xA99C)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Count1Resources" ((theType :ostype))   (:stack :signed-integer)   (:stack-trap #xA80D)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetIndResource" ((theType :ostype) (index :signed-integer))   (:stack :handle)   (:stack-trap #xA99D)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Get1IndResource" ((theType :ostype) (index :signed-integer))   (:stack :handle)   (:stack-trap #xA80E)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetResource" ((theType :ostype) (theID :signed-integer))   (:stack :handle)   (:stack-trap #xA9A0)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Get1Resource" ((theType :ostype) (theID :signed-integer))   (:stack :handle)   (:stack-trap #xA81F)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetNamedResource" ((theType :ostype) (name (:string 255)))   (:stack :handle)   (:stack-trap #xA9A1)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Get1NamedResource" ((theType :ostype) (name (:string 255)))   (:stack :handle)   (:stack-trap #xA820)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_LoadResource" ((theResource :handle))   nil   (:stack-trap #xA9A2)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_ReleaseResource" ((theResource :handle))   nil   (:stack-trap #xA9A3)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_DetachResource" ((theResource :handle))   nil   (:stack-trap #xA992)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_UniqueID" ((theType :ostype))   (:stack :signed-integer)   (:stack-trap #xA9C1)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Unique1ID" ((theType :ostype))   (:stack :signed-integer)   (:stack-trap #xA810)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetResAttrs" ((theResource :handle))   (:stack :signed-integer)   (:stack-trap #xA9A6)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetResInfo" ((theResource :handle) (theID (:pointer :signed-integer)) (theType (:pointer :ostype)) (name (:pointer (:string 255))))   nil   (:stack-trap #xA9A8)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetResInfo" ((theResource :handle) (theID :signed-integer) (name (:string 255)))   nil   (:stack-trap #xA9A9)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_AddResource" ((theData :handle) (theType :ostype) (theID :signed-integer) (name (:string 255)))   nil   (:stack-trap #xA9AB)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetResourceSizeOnDisk" ((theResource :handle))   (:stack :signed-long)   (:stack-trap #xA9A5)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetMaxResourceSize" ((theResource :handle))   (:stack :signed-long)   (:stack-trap #xA821)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_RsrcMapEntry" ((theResource :handle))   (:stack :signed-long)   (:stack-trap #xA9C5)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetResAttrs" ((theResource :handle) (attrs :signed-integer))   nil   (:stack-trap #xA9A7)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_ChangedResource" ((theResource :handle))   nil   (:stack-trap #xA9AA)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_RemoveResource" ((theResource :handle))   nil   (:stack-trap #xA9AD)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_UpdateResFile" ((refNum :signed-integer))   nil   (:stack-trap #xA999)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_WriteResource" ((theResource :handle))   nil   (:stack-trap #xA9B0)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetResPurge" ((install :boolean))   nil   (:stack-trap #xA993)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetResFileAttrs" ((refNum :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9F6)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetResFileAttrs" ((refNum :signed-integer) (attrs :signed-integer))   nil   (:stack-trap #xA9F7)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_OpenRFPerm" ((fileName (:string 255)) (vRefNum :signed-integer) (permission :signed-byte))   (:stack :signed-integer)   (:stack-trap #xA9C4)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_RGetResource" ((theType :ostype) (theID :signed-integer))   (:stack :handle)   (:stack-trap #xA80C)); $ENDC; $IFC SystemSevenOrLater ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_HOpenResFile" ((vRefNum :signed-integer) (dirID :signed-long) (fileName (:string 255)) (permission :signed-byte))   (:stack :signed-integer)   (:stack-trap #xA81A)); $ENDC#|                                              ; $ELSEC |#                                             ; $ENDC; $IFC SystemSevenOrLater ;; Generated by translator basic-stack-trap(deftrap "_HOpenResFile" ((vRefNum :signed-integer) (dirID :signed-long) (fileName (:string 255)) (permission :signed-byte))   (:stack :signed-integer)   (:stack-trap #xA81A))                        ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_HCreateResFile" ((vRefNum :signed-integer) (dirID :signed-long) (fileName (:string 255)))   nil   (:stack-trap #xA81B)); $ENDC#|                                              ; $ELSEC |#                                             ; $ENDC;; Generated by translator basic-stack-trap(deftrap "_HCreateResFile" ((vRefNum :signed-integer) (dirID :signed-long) (fileName (:string 255)))   nil   (:stack-trap #xA81B))                        ; CONST; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_FSpOpenResFile" ((spec (:pointer :fsspec)) (permission :signed-byte))   (:stack :signed-integer)   (:stack-trap #xAA52 :d0 13 spec permission)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_FSpCreateResFile" ((spec (:pointer :fsspec)) (creator :ostype) (fileType :ostype) (scriptTag :signed-integer))   nil   (:stack-trap #xAA52 :d0 14 spec creator fileType scriptTag)); $ENDC;   partial resource calls  ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_ReadPartialResource" ((theResource :handle) (offset :signed-long) (buffer :pointer) (count :signed-long))   nil   (:stack-trap #xA822 :d0 1 theResource offset buffer count)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_WritePartialResource" ((theResource :handle) (offset :signed-long) (buffer :pointer) (count :signed-long))   nil   (:stack-trap #xA822 :d0 2 theResource offset buffer count)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetResourceSize" ((theResource :handle) (newSize :signed-long))   nil   (:stack-trap #xA822 :d0 3 theResource newSize)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetNextFOND" ((fondHandle :handle))   (:stack :handle)   (:stack-trap #xA822 :d0 10 fondHandle)); $ENDC;  Use TempInsertROMMap to force the ROM resource map to be;    inserted into the chain in front of the system. Note that;    this call is only temporary - the modified resource chain;    is only used for the next call to the resource manager.;    See IM IV 19 for more information. ; $IFC OLDROUTINENAMES ;; Warning: No calling method defined for this trap(deftrap-inline "_TempInsertROMMap" ((tempResLoad :boolean))   nil   () )                                         ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SizeResource" "GetResourceSizeOnDisk")         ((theResource :handle))   (:stack :signed-long)   (:stack-trap #xA9A5)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_MaxSizeRsrc" "GetMaxResourceSize")         ((theResource :handle))   (:stack :signed-long)   (:stack-trap #xA821)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_RmveResource" "RemoveResource")         ((theResource :handle))   nil   (:stack-trap #xA9AD)); $ENDC; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := ResourcesIncludes; $ENDC                                         ; __RESOURCES__#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC(provide-interface 'Resources);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:Resources.patch(DEFCONSTANT $MAPFALSE 65280);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:Resources.patch (DEFCONSTANT $MAPTRUE 65535)