(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:ControlStrip.p"; at Tuesday June 6,1995 2:07:11 pm.; ;  	File:		ControlStrip.p;  ;  	Contains:	Control Strip (for Powerbooks and Duos) Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __CONTROLSTRIP__; $SETC __CONTROLSTRIP__ := 1; $I+; $SETC ControlStripIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __MENUS__|#(require-interface 'Menus)#|                                              ; $I Menus.p |#                                             ; $ENDC; 	Memory.p													; 		MixedMode.p												; 	Quickdraw.p													; 		QuickdrawText.p											#|                                              ; $IFC UNDEFINED __DIALOGS__|#(require-interface 'Dialogs)#|                                              ; $I Dialogs.p |#                                             ; $ENDC; 	Errors.p													; 	Windows.p													; 		Events.p												; 			OSUtils.p											; 		Controls.p												; 	TextEdit.p													; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $sdevInitModule 0)                 ;  initialize the module(defconstant $sdevCloseModule 1)                ;  clean up before being closed(defconstant $sdevFeatures 2)                   ;  return feature bits(defconstant $sdevGetDisplayWidth 3)            ;  returns the width of the module's display(defconstant $sdevPeriodicTickle 4)             ;  periodic tickle when nothing else is happening(defconstant $sdevDrawStatus 5)                 ;  update the interface in the Control Strip(defconstant $sdevMouseClick 6)                 ;  user clicked on the module's display area in the Control Strip(defconstant $sdevSaveSettings 7)               ;  saved any changed settings in module's preferences file(defconstant $sdevShowBalloonHelp 8)            ;  puts up a help balloon, if the module has one to display; ********************************************************************************************; ; 	Features supported by the module.  If a bit is set, it means that feature is supported.; 	All undefined bits are reserved for future use by Apple, and should be set to zero.; ; ********************************************************************************************(defconstant $sdevWantMouseClicks 0)            ;  notify the module of mouseDown events(defconstant $sdevDontAutoTrack 1)              ;  call the module to do mouse tracking(defconstant $sdevHasCustomHelp 2)              ;  module provides its own help messages(defconstant $sdevKeepModuleLocked 3)           ;  module needs to be locked in the heap; ********************************************************************************************; ; 	Result values returned by the sdevPeriodicTickle and sdevIconMouseClick selectors.; 	If a bit is set, the module can request that a specific function is performed by; 	the Control Strip.  A result of zero will do nothing.  All undefined bits are reserved; 	for future use by Apple, and should be set to zero.; ; ********************************************************************************************(defconstant $sdevResizeDisplay 0)              ;  resize the module's display(defconstant $sdevNeedToSave 1)                 ;  need to save changed settings, when convenient(defconstant $sdevHelpStateChange 2)            ;  need to update the help message because of a state change(defconstant $sdevCloseNow 3)                   ;  close a module because it doesn't want to stay around; ********************************************************************************************; ; 	miscellaneous; ; ********************************************************************************************(defconstant $sdevFileType :|sdev|)(defconstant $sdevMenuItemMark "•"); 	direction values for SBDrawBarGraph(defconstant $BarGraphSlopeLeft -1)             ;  max end of sloping bar graph is on the left(defconstant $BarGraphFlatRight 0)              ;  max end of flat bar graph is on the right(defconstant $BarGraphSlopeRight 1)             ;  max end of sloping bar graph is on the right; ********************************************************************************************; ; 	utility routines to provide standard interface elements and support for common functions; ; ********************************************************************************************; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SBIsControlStripVisible" ()   (:stack :boolean)   (:stack-trap #xAAF2 :d0 0)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBShowHideControlStrip" ((showIt :boolean))   nil   (:stack-trap #xAAF2 :d0 257 showIt)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SBSafeToAccessStartupDisk" ()   (:stack :boolean)   (:stack-trap #xAAF2 :d0 2)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBOpenModuleResourceFile" ((fileCreator :ostype))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 515 fileCreator)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBLoadPreferences" ((prefsResourceName (:string 255)) (preferences (:pointer :handle)))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1028 prefsResourceName preferences)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBSavePreferences" ((prefsResourceName (:string 255)) (preferences :handle))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1029 prefsResourceName preferences)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBGetDetachedIndString" ((theString (:pointer (:string 255))) (stringList :handle) (whichString :signed-integer))   nil   (:stack-trap #xAAF2 :d0 1286 theString stringList whichString)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBGetDetachIconSuite" ((theIconSuite (:pointer :handle)) (theResID :signed-integer) (selector :signed-long))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1287 theIconSuite theResID selector)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBTrackPopupMenu" ((moduleRect (:pointer :rect)) (theMenu (:handle :menuinfo)))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1032 moduleRect theMenu)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBTrackSlider" ((moduleRect (:pointer :rect)) (ticksOnSlider :signed-integer) (initialValue :signed-integer))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1033 moduleRect ticksOnSlider initialValue)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBShowHelpString" ((moduleRect (:pointer :rect)) (helpString (:pointer (:string 255))))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 1034 moduleRect helpString)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBGetBarGraphWidth" ((barCount :signed-integer))   (:stack :signed-integer)   (:stack-trap #xAAF2 :d0 267 barCount)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBDrawBarGraph" ((level :signed-integer) (barCount :signed-integer) (direction :signed-integer) (barGraphTopLeft :point))   nil   (:stack-trap #xAAF2 :d0 1292 level barCount direction barGraphTopLeft)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SBModalDialogInContext" ((filterProc :pointer) (itemHit (:pointer :signed-integer)))   nil   (:stack-trap #xAAF2 :d0 1037 filterProc itemHit)); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := ControlStripIncludes; $ENDC                                         ; __CONTROLSTRIP__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'ControlStrip)