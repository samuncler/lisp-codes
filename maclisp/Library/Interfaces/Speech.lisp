(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Speech.p"; at Tuesday June 6,1995 2:21:41 pm.; ;  	File:		Speech.p;  ;  	Contains:	Speech Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __SPEECH__; $SETC __SPEECH__ := 1; $I+; $SETC SpeechIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __MEMORY__|#(require-interface 'Memory)#|                                              ; $I Memory.p |#                                             ; $ENDC; 	MixedMode.p													#|                                              ; $IFC UNDEFINED __FILES__|#(require-interface 'Files)#|                                              ; $I Files.p |#                                             ; $ENDC; 	OSUtils.p													; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $kTextToSpeechSynthType :|ttsc|)(defconstant $kTextToSpeechVoiceType :|ttvd|)(defconstant $kTextToSpeechVoiceFileType :|ttvf|)(defconstant $kTextToSpeechVoiceBundleType :|ttvb|)(defconstant $kNoEndingProsody 1)(defconstant $kNoSpeechInterrupt 2)(defconstant $kPreflightThenPause 4)(defconstant $kImmediate 0)(defconstant $kEndOfWord 1)(defconstant $kEndOfSentence 2); ------------------------------------------;  GetSpeechInfo & SetSpeechInfo selectors	; ------------------------------------------(defconstant $soStatus :|stat|)(defconstant $soErrors :|erro|)(defconstant $soInputMode :|inpt|)(defconstant $soCharacterMode :|char|)(defconstant $soNumberMode :|nmbr|)(defconstant $soRate :|rate|)(defconstant $soPitchBase :|pbas|)(defconstant $soPitchMod :|pmod|)(defconstant $soVolume :|volm|)(defconstant $soSynthType :|vers|)(defconstant $soRecentSync :|sync|)(defconstant $soPhonemeSymbols :|phsy|)(defconstant $soCurrentVoice :|cvox|)(defconstant $soCommandDelimiter :|dlim|)(defconstant $soReset :|rset|)(defconstant $soCurrentA5 :|myA5|)(defconstant $soRefCon :|refc|)(defconstant $soTextDoneCallBack :|tdcb|)(defconstant $soSpeechDoneCallBack :|sdcb|)(defconstant $soSyncCallBack :|sycb|)(defconstant $soErrorCallBack :|ercb|)(defconstant $soPhonemeCallBack :|phcb|)(defconstant $soWordCallBack :|wdcb|)(defconstant $soSynthExtension :|xtnd|)(defconstant $soSoundOutput :|sndo|); ------------------------------------------;  Speaking Mode Constants 					; ------------------------------------------(defconstant $modeText :|TEXT|)                 ;  input mode constants 					(defconstant $modePhonemes :|PHON|)(defconstant $modeNormal :|NORM|)               ;  character mode and number mode constants (defconstant $modeLiteral :|LTRL|)(defconstant $soVoiceDescription :|info|)(defconstant $soVoiceFile :|fref|)(defrecord SpeechChannelRecord    (data (:array :signed-long 1))   )(def-mactype :speechchannel (find-mactype '(:pointer :speechchannelrecord)))(defrecord VoiceSpec    (creator :ostype)   (id :ostype)   )(defconstant $kNeuter 0)(defconstant $kMale 1)(defconstant $kFemale 2)(defrecord VoiceDescription    (length :signed-long)   (voice :voicespec)   (version :signed-long)   (name (:string 63))   (comment (:string 255))   (gender :signed-integer)   (age :signed-integer)   (script :signed-integer)   (language :signed-integer)   (region :signed-integer)   (reserved (:array :signed-long 4))   )(defrecord VoiceFileInfo    (fileSpec :fsspec)   (resID :signed-integer)   )(defrecord SpeechStatusInfo    (outputBusy :boolean)   (outputPaused :boolean)   (inputBytesLeft :signed-long)   (phonemeCode :signed-integer)   )(defrecord SpeechErrorInfo    (count :signed-integer)   (oldest :signed-integer)   (oldPos :signed-long)   (newest :signed-integer)   (newPos :signed-long)   )(defrecord SpeechVersionInfo    (synthType :ostype)   (synthSubType :ostype)   (synthManufacturer :ostype)   (synthFlags :signed-long)   (synthVersion :numversion)   )(defrecord PhonemeInfo    (opcode :signed-integer)   (phStr (:string 15))   (exampleStr (:string 31))   (hiliteStart :signed-integer)   (hiliteEnd :signed-integer)   )(defrecord PhonemeDescriptor    (phonemeCount :signed-integer)   (thePhonemes (:array :phonemeinfo 1))   )(defrecord SpeechXtndData    (synthCreator :ostype)   (synthData (:array :unsigned-byte 2))   )(defrecord DelimiterInfo    (startDelimiter (:array :unsigned-byte 2))   (endDelimiter (:array :unsigned-byte 2))   )(def-mactype :speechtextdoneprocptr (find-mactype ':pointer));  PROCEDURE SpeechTextDone(parameter0: SpeechChannel; parameter1: LONGINT; VAR parameter2: Ptr; VAR parameter3: LONGINT; VAR parameter4: LONGINT); (def-mactype :speechdoneprocptr (find-mactype ':pointer));  PROCEDURE SpeechDone(parameter0: SpeechChannel; parameter1: LONGINT); (def-mactype :speechsyncprocptr (find-mactype ':pointer));  PROCEDURE SpeechSync(parameter0: SpeechChannel; parameter1: LONGINT; parameter2: OSType); (def-mactype :speecherrorprocptr (find-mactype ':pointer));  PROCEDURE SpeechError(parameter0: SpeechChannel; parameter1: LONGINT; parameter2: OSErr; parameter3: LONGINT); (def-mactype :speechphonemeprocptr (find-mactype ':pointer));  PROCEDURE SpeechPhoneme(parameter0: SpeechChannel; parameter1: LONGINT; parameter2: INTEGER); (def-mactype :speechwordprocptr (find-mactype ':pointer));  PROCEDURE SpeechWord(parameter0: SpeechChannel; parameter1: LONGINT; parameter2: LONGINT; parameter3: INTEGER); (def-mactype :speechtextdoneupp (find-mactype ':pointer))(def-mactype :speechdoneupp (find-mactype ':pointer))(def-mactype :speechsyncupp (find-mactype ':pointer))(def-mactype :speecherrorupp (find-mactype ':pointer))(def-mactype :speechphonemeupp (find-mactype ':pointer))(def-mactype :speechwordupp (find-mactype ':pointer))(defconstant $uppSpeechTextDoneProcInfo #xFFC0) ;  PROCEDURE (4 byte param, 4 byte param, 4 byte param, 4 byte param, 4 byte param); (defconstant $uppSpeechDoneProcInfo #x3C0)      ;  PROCEDURE (4 byte param, 4 byte param); (defconstant $uppSpeechSyncProcInfo #xFC0)      ;  PROCEDURE (4 byte param, 4 byte param, 4 byte param); (defconstant $uppSpeechErrorProcInfo #x3BC0)    ;  PROCEDURE (4 byte param, 4 byte param, 2 byte param, 4 byte param); (defconstant $uppSpeechPhonemeProcInfo #xBC0)   ;  PROCEDURE (4 byte param, 4 byte param, 2 byte param); (defconstant $uppSpeechWordProcInfo #x2FC0)     ;  PROCEDURE (4 byte param, 4 byte param, 4 byte param, 2 byte param); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechTextDoneProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechDoneProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechSyncProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechErrorProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechPhonemeProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSpeechWordProc" ("SpeechLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechTextDoneProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (parameter2 (:pointer :pointer)) (parameter3 (:pointer :signed-long)) (parameter4 (:pointer :signed-long)) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechDoneProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechSyncProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (parameter2 :ostype) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechErrorProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (parameter2 :signed-integer) (parameter3 :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechPhonemeProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (parameter2 :signed-integer) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSpeechWordProc" ("SpeechLib"))  ((parameter0 (:pointer :speechchannelrecord)) (parameter1 :signed-long) (parameter2 :signed-long) (parameter3 :signed-integer) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeechManagerVersion" ("SpeechLib"))         ()   (:stack :numversion)   (:stack-trap #xA800 :d0 (+ (ash 0 16) 12))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_MakeVoiceSpec" ("SpeechLib"))         ((creator :ostype) (id :ostype) (voice (:pointer :voicespec)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1540 16) 12) creator id voice)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_CountVoices" ("SpeechLib"))         ((numVoices (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 264 16) 12) numVoices)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetIndVoice" ("SpeechLib"))         ((index :signed-integer) (voice (:pointer :voicespec)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 780 16) 12) index voice)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetVoiceDescription" ("SpeechLib"))         ((voice (:pointer :voicespec)) (info (:pointer :voicedescription)) (infoLength :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1552 16) 12) voice info infoLength)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetVoiceInfo" ("SpeechLib"))         ((voice (:pointer :voicespec)) (selector :ostype) (voiceInfo :pointer))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1556 16) 12) voice selector voiceInfo)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_NewSpeechChannel" ("SpeechLib"))         ((voice (:pointer :voicespec)) (chan (:pointer (:pointer :speechchannelrecord))))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1048 16) 12) voice chan)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_DisposeSpeechChannel" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 540 16) 12) chan)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeakString" ("SpeechLib"))         ((s (:pointer (:string 255))))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 544 16) 12) s)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeakText" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (textBuf :pointer) (textBytes :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1572 16) 12) chan textBuf textBytes)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeakBuffer" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (textBuf :pointer) (textBytes :signed-long) (controlFlags :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 2088 16) 12) chan textBuf textBytes controlFlags)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_StopSpeech" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 556 16) 12) chan)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_StopSpeechAt" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (whereToStop :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1072 16) 12) chan whereToStop)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_PauseSpeechAt" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (whereToPause :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1076 16) 12) chan whereToPause)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_ContinueSpeech" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 568 16) 12) chan)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeechBusy" ("SpeechLib"))         ()   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 60 16) 12))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SpeechBusySystemWide" ("SpeechLib"))         ()   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 64 16) 12))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SetSpeechRate" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (rate :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1092 16) 12) chan rate)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetSpeechRate" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (rate (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1096 16) 12) chan rate)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SetSpeechPitch" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (pitch :signed-long))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1100 16) 12) chan pitch)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetSpeechPitch" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (pitch (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1104 16) 12) chan pitch)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SetSpeechInfo" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (selector :ostype) (speechInfo :pointer))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1620 16) 12) chan selector speechInfo)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_GetSpeechInfo" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (selector :ostype) (speechInfo :pointer))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1624 16) 12) chan selector speechInfo)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_TextToPhonemes" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (textBuf :pointer) (textBytes :signed-long) (phonemeBuf :handle) (phonemeBytes (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 2652 16) 12) chan textBuf textBytes phonemeBuf phonemeBytes)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_UseDictionary" ("SpeechLib"))         ((chan (:pointer :speechchannelrecord)) (dictionary :handle))   (:stack :signed-integer)   (:stack-trap #xA800 :d0 (+ (ash 1120 16) 12) chan dictionary)); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := SpeechIncludes; $ENDC                                         ; __SPEECH__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'Speech);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch(DEF-MACTYPE :SPEECHMODEINFOPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :SPEECHSTATUSINFOPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :VOICESPECPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEFRECORD SPEECHMODEINFO           (INPUTMODE :OSTYPE)           (CHARACTERMODE :OSTYPE)           (NUMBERMODE :OSTYPE)           (SYMBOLMODE :OSTYPE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :SPEECHVERSIONINFOPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :VOICEDESCRIPTIONPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :SPEECHCHANNELPTR (FIND-MACTYPE :HANDLE));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEF-MACTYPE :VOICEFILEINFOPTR (FIND-MACTYPE :POINTER));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEFCONSTANT $MODETX "TX");; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:speech.patch (DEFCONSTANT $MODEPH "PH")