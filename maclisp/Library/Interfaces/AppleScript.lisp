(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:AppleScript.p"; at Tuesday June 6,1995 2:04:28 pm.; ;  	File:		AppleScript.p;  ;  	Contains:	AppleScript Specific Interfaces.;  ;  	Version:	Technology:	AppleScript 1.1;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __APPLESCRIPT__; $SETC __APPLESCRIPT__ := 1; $I+; $SETC AppleScriptIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __ERRORS__|#(require-interface 'Errors)#|                                              ; $I Errors.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __APPLEEVENTS__|#(require-interface 'AppleEvents)#|                                              ; $I AppleEvents.p |#                                             ; $ENDC; 	Types.p														; 	Memory.p													; 		MixedMode.p												; 	OSUtils.p													; 	Events.p													; 		Quickdraw.p												; 			QuickdrawText.p										; 	EPPC.p														; 		AppleTalk.p												; 		Files.p													; 		PPCToolbox.p											; 		Processes.p												; 	Notification.p												; $IFC UNDEFINED __OSA__(require-interface 'OSA)                        ; $I OSA.p; $ENDC; 	AEObjects.p													; 	Components.p												; $IFC UNDEFINED __TEXTEDIT__(require-interface 'TextEdit)                   ; $I TextEdit.p; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $typeAppleScript :|ascr|)(defconstant $kAppleScriptSubtype #$typeAppleScript)(defconstant $typeASStorage #$typeAppleScript); *************************************************************************; 	Component Selectors; *************************************************************************(defconstant $kASSelectInit #x1001)(defconstant $kASSelectSetSourceStyles #x1002)(defconstant $kASSelectGetSourceStyles #x1003)(defconstant $kASSelectGetSourceStyleNames #x1004); *************************************************************************; 	OSAGetScriptInfo Selectors; *************************************************************************(defconstant $kASHasOpenHandler :|hsod|); ; 		This selector is used to query a context as to whether it contains; 		a handler for the kAEOpenDocuments event. This allows "applets" to be ; 		distinguished from "droplets."  OSAGetScriptInfo returns false if; 		there is no kAEOpenDocuments handler, and returns the error value ; 		errOSAInvalidAccess if the input is not a context.; 	; *************************************************************************; 	Initialization; *************************************************************************; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASInit" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (minStackSize :signed-long) (preferredStackSize :signed-long) (maxStackSize :signed-long) (minHeapSize :signed-long) (preferredHeapSize :signed-long) (maxHeapSize :signed-long))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags minStackSize preferredStackSize maxStackSize minHeapSize preferredHeapSize maxHeapSize ((+ (ash 28 16) 4097) :signed-longint))); $ENDC; ; 		ComponentCallNow(kASSelectInit, 28);; 		This call can be used to explicitly initialize AppleScript.  If it is; 		not called, the a scripting size resource is looked for and used. If; 		there is no scripting size resource, then the constants listed below; 		are used.  If at any stage (the init call, the size resource, the ; 		defaults) any of these parameters are zero, then parameters from the; 		next stage are used.  ModeFlags are not currently used.; 		Errors:; 		errOSASystemError		initialization failed; 	; ; 	These values will be used if ASInit is not called explicitly, or if any; 	of ASInit's parameters are zero:; (defconstant $kASDefaultMinStackSize 4096)(defconstant $kASDefaultPreferredStackSize 16384)(defconstant $kASDefaultMaxStackSize 16384)(defconstant $kASDefaultMinHeapSize 4096)(defconstant $kASDefaultPreferredHeapSize 16384)(defconstant $kASDefaultMaxHeapSize 33554432); *************************************************************************; 	Source Styles; *************************************************************************; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASSetSourceStyles" ((scriptingComponent (:pointer :componentinstancerecord)) (sourceStyles (:handle :testyletable)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent sourceStyles ((+ (ash 4 16) 4098) :signed-longint))); $ENDC; ; 		ComponentCallNow(kASSelectSetSourceStyles, 4);; 		Errors:; 		errOSASystemError		operation failed; 	; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASGetSourceStyles" ((scriptingComponent (:pointer :componentinstancerecord)) (resultingSourceStyles (:pointer (:handle :testyletable))))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent resultingSourceStyles ((+ (ash 4 16) 4099) :signed-longint))); $ENDC; ; 		ComponentCallNow(kASSelectGetSourceStyles, 4);; 		Errors:; 		errOSASystemError		operation failed; 	; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ASGetSourceStyleNames" ((scriptingComponent (:pointer :componentinstancerecord)) (modeFlags :signed-long) (resultingSourceStyleNamesList (:pointer :aedesc)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 scriptingComponent modeFlags resultingSourceStyleNamesList ((+ (ash 8 16) 4100) :signed-longint))); $ENDC; ; 		ComponentCallNow(kASSelectGetSourceStyleNames, 8);; 		This call returns an AEList of styled text descriptors the names of the; 		source styles in the current dialect.  The order of the names corresponds; 		to the order of the source style constants, below.  The style of each; 		name is the same as the styles returned by ASGetSourceStyles.; 		; 		Errors:; 		errOSASystemError		operation failed; 	; ; 	Elements of STHandle correspond to following categories of tokens, and; 	accessed through following index constants:; (defconstant $kASSourceStyleUncompiledText 0)(defconstant $kASSourceStyleNormalText 1)(defconstant $kASSourceStyleLanguageKeyword 2)(defconstant $kASSourceStyleApplicationKeyword 3)(defconstant $kASSourceStyleComment 4)(defconstant $kASSourceStyleLiteral 5)(defconstant $kASSourceStyleUserSymbol 6)(defconstant $kASSourceStyleObjectSpecifier 7)(defconstant $kASNumberOfSourceStyles 8);  Gestalt selectors for AppleScript (defconstant $gestaltAppleScriptAttr :|ascr|)(defconstant $gestaltAppleScriptVersion :|ascv|)(defconstant $gestaltAppleScriptPresent 0)(defconstant $gestaltAppleScriptPowerPCSupport 1); $ALIGN RESET; $POP; $SETC UsingIncludes := AppleScriptIncludes; $ENDC                                         ; __APPLESCRIPT__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'AppleScript)