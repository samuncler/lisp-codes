;;;; 96-12-20: Version for MCL-PPC 4.0(in-package :traps)(require-interface 'ConditionalMacros)(require-interface 'Types)(require-interface 'GXErrors)(require-interface 'GXTypes)(def-mactype :gxjob (find-mactype ':pointer));; Generated by translator put-a-constant-longword-in-d0(deftrap-inline ("_GXInitPrinting" ("QuickDrawGXLib"))  ()  :word  (:stack-trap #xABFE :d0 0))(deftrap-inline ("_GXExitPrinting" ("QuickDrawGXLib"))  ()  :word  (:stack-trap #xABFE :d0 1));;;; ---------------------------------------------------------------------------;;;; Dialog box constants;;;; ---------------------------------------------------------------------------(defconstant $gxcancelselected 0)   ; Move to the interface file!(defconstant $gxokselected 1)(defconstant $gxrevertselected 2);;;; -----------------------------------------------------------------------;;;; Event Constants and Event Routines;;;; -----------------------------------------------------------------------(defconstant $gxinitialize 0)(defconstant $gxshutdown 1)(defconstant $gxjobidle 2)(defconstant $gxjobstatus 3)(defconstant $gxprintingevent 4)(defconstant $gxjobdefaultformatdialog 5)(defconstant $gxformatdialog 6)(defconstant $gxjobprintdialog 7)(defconstant $gxfilterpanelevent 8)(defconstant $gxhandlepanelevent 9)(defconstant $gxparsepagerange 10)(defconstant $gxdefaultjob 11)(defconstant $gxdefaultformat 12)(defconstant $gxdefaultpapertype 13)(defconstant $gxdefaultprinter 14)(defconstant $gxcreatespoolfile 15)(defconstant $gxspoolpage 16)(defconstant $gxspooldata 17)(defconstant $gxspoolresource 18)(defconstant $gxcompletespoolfile 19)(defconstant $gxcountpages 20)(defconstant $gxdespoolpage 21)(defconstant $gxdespooldata 22)(defconstant $gxdespoolresource 23)(defconstant $gxclosespoolfile 24)(defconstant $gxstartjob 25)(defconstant $gxfinishjob 26)(defconstant $gxstartpage 27)(defconstant $gxfinishpage 28)(defconstant $gxprintpage 29)(defconstant $gxsetupimagedata 30)(defconstant $gximagejob 31)(defconstant $gximagedocument 32)(defconstant $gximagepage 33)(defconstant $gxrenderpage 34)(defconstant $gxcreateimagefile 35)(defconstant $gxopenconnection 36)(defconstant $gxcloseconnection 37)(defconstant $gxstartsendpage 38)(defconstant $gxfinishsendpage 39)(defconstant $gxwritedata 40)(defconstant $gxbufferdata 41)(defconstant $gxdumpbuffer 42)(defconstant $gxfreebuffer 43)(defconstant $gxcheckstatus 44)(defconstant $gxgetdevicestatus 45)(defconstant $gxfetchtaggeddata 46)(defconstant $gxgetdtpmenulist 47)(defconstant $gxdtpmenuselect 48)(defconstant $gxhandlealertfilter 49)(defconstant $gxjobformatmodequery 50)(defconstant $gxwritestatustodtpwindow 51)(defconstant $gxinitializestatusalert 52)(defconstant $gxhandlealertstatus 53)(defconstant $gxhandlealertevent 54)(defconstant $gxcleanupstartjob 55)(defconstant $gxcleanupstartpage 56)(defconstant $gxcleanupopenconnection 57)(defconstant $gxcleanupstartsendpage 58)(defconstant $gxdefaultdesktopprinter 59)(defconstant $gxcaptureoutputdevice 60)(defconstant $gxopenconnectionretry 61)(defconstant $gxexaminespoolfile 62)(defconstant $gxfinishsendplane	63)(defconstant $gxdoespaperfit 64)(defconstant $gxchoosermessage 65)(defconstant $gxfindprinterprofile 66)(defconstant $gxfindformatprofile 67)(defconstant $gxsetprinterprofile 68)(defconstant $gxsetformatprofile 69);; identifiers for Quickdraw message overrides...(defconstant $gxpropendoc 0)(defconstant $gxprclosedoc 1)(defconstant $gxpropenpage 2)(defconstant $gxprclosepage 3)(defconstant $gxprintdefault 4)(defconstant $gxprstldialog 5)(defconstant $gxprjobdialog 6)(defconstant $gxprstlinit 7)(defconstant $gxprjobinit 8)(defconstant $gxprdlgmain 9)(defconstant $gxprvalidate 10)(defconstant $gxprjobmerge 11)(defconstant $gxprgeneral 12)(defconstant $gxconvertprintrecordto 13)(defconstant $gxconvertprintrecordfrom 14)(defconstant $gxprintrecordtojob 15);; identifiers for raster imaging message overrides...(defconstant $gxrasterdatain 0)(defconstant $gxrasterlinefeed 1)(defconstant $gxrasterpackagebitmap 2);; identifiers for PostScript imaging message overrides...(defconstant $gxpostscriptqueryprinter 0)(defconstant $gxpostscriptinitializeprinter 1)(defconstant $gxpostscriptresetprinter 2)(defconstant $gxpostscriptexitserver 3)(defconstant $gxpostscriptgetstatustext 4)(defconstant $gxpostscriptgetprintertext 5)(defconstant $gxpostscriptscanstatustext 6)(defconstant $gxpostscriptscanprintertext 7)(defconstant $gxpostscriptgetdocumentprocsetlist 8)(defconstant $gxpostscriptdownloadprocsetlist 9)(defconstant $gxpostscriptgetprinterglyphsinformation 10)(defconstant $gxpostscriptstreamfont 11)(defconstant $gxpostscriptdodocumentheader 12)(defconstant $gxpostscriptdodocumentsetup 13)(defconstant $gxpostscriptdodocumenttrailer 14)(defconstant $gxpostscriptdopagesetup 15)(defconstant $gxpostscriptselectpapertype 16)(defconstant $gxpostscriptdopagetrailer 17)(defconstant $gxpostscriptejectpage 18)(defconstant $gxpostscriptprocessshape 19);; identifiers for Vector imaging message overrides...(defconstant $gxvectorpackagedata 0)(defconstant $gxvectorloadpens 1)(defconstant $gxvectorvectorizeshape 2)(deftrap-inline ("_GXInstallApplicationOverride" ("QuickDrawGXLib"))  ((aJob :gxJob) (messageID :short) (override :pointer))  nil  (:stack-trap #xABFE :d0 18 aJob messageID override));;;; -----------------------------------------------------------------------;;;; Error-Handling Routines;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXGetJobError" ("QuickDrawGXLib"))  ((aJob :gxjob))  :word  (:stack-trap #xABFE :d0 14 aJob))(deftrap-inline ("_GXSetJobError" ("QuickDrawGXLib"))  ((aJob :gxjob) (anErr :signed-long))  nil  (:stack-trap #xABFE :d0 15 aJob anErr));;;; -----------------------------------------------------------------------;;;; Job Routines;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXNewJob" ("QuickDrawGXLib"))  ((aJob (:pointer :gxjob)))  :word  (:stack-trap #xABFE :d0 2 aJob))(deftrap-inline ("_GXDisposeJob" ("QuickDrawGXLib"))  ((aJob :gxjob))  :word  (:stack-trap #xABFE :d0 3 aJob))(deftrap-inline ("_GXFlattenJob" ("QuickDrawGXLib"))  ((ajob :gxJob) (aProc :pointer) (refCon :pointer))  nil  (:stack-trap #xABFE :d0 4 aJob aProc refCon))(deftrap-inline ("_GXUnflattenJob" ("QuickDrawGXLib"))  ((ajob :gxJob) (aProc :pointer) (refCon :pointer))  :pointer  (:stack-trap #xABFE :d0 5 aJob aProc refCon))(deftrap-inline ("_GXFlattenJobToHdl" ("QuickDrawGXLib"))  ((ajob :gxJob) (aHandle :pointer))  :pointer  (:stack-trap #xABFE :d0 6 aJob aHandle))(deftrap-inline ("_GXUnflattenJobFromHdl" ("QuickDrawGXLib"))  ((ajob :gxJob) (aHandle :pointer))  :word  (:stack-trap #xABFE :d0 7 aJob aHandle));;;; -----------------------------------------------------------------------;;;; Format Routines;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXNewFormat" ("QuickDrawGXLib"))  ((aJob :gxjob))  :word  (:stack-trap #xABFE :d0 9 aJob))(deftrap-inline ("_GXDisposeFormat" ("QuickDrawGXLib"))  ((aFormat :pointer))  nil  (:stack-trap #xABFE :d0 10 aFormat))(deftrap-inline ("_GXGetJobFormat" ("QuickDrawGXLib"))  ((aJob :gxjob) (whichFormat :signed-long))  :pointer  (:stack-trap #xABFE :d0 19 aJob whichFormat))(deftrap-inline ("_GXGetFormatPaperType" ("QuickDrawGXLib"))  ((aJob :gxJob))  :pointer  (:stack-trap #xABFE :d0 21 aJob))(deftrap-inline ("_GXGetFormatDimensions" ("QuickDrawGXLib"))  ((aFormat :pointer) (pageSize (:pointer :gxRectangle)) (paperSize (:pointer :gxRectangle)))  nil  (:stack-trap #xABFE :d0 22 aFormat pageSize paperSize));;;; -----------------------------------------------------------------------;;;; Dialog Routines;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXJobDefaultFormatDialog" ("QuickDrawGXLib"))  ((aJob :gxjob) (anEditMenuRec :pointer))  :word  (:stack-trap #xABFE :d0 16 aJob anEditMenuRec))(deftrap-inline ("_GXJobPrintDialog" ("QuickDrawGXLib"))  ((aJob :gxjob) (anEditMenuRec :pointer))  :word  (:stack-trap #xABFE :d0 17 aJob anEditMenuRec))(deftrap-inline ("_GXFormatDialog" ("QuickDrawGXLib"))  ((aFormat :pointer) (anEditMenuRec :pointer) (aTitle :pointer))  :word  (:stacktrap #xABFE :d0 18 aFormat anEditMenuRec aTitle));;;; -----------------------------------------------------------------------;;;; Spooling Routines;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXGetJobPageRange" ("QuickDrawGXLib"))  ((theJob :gxjob) (firstPage :pointer) (lastPage :pointer))  nil  (:stack-trap #xABFE :d0 23 theJob firstPage lastPage))(deftrap-inline ("_GXStartJob" ("QuickDrawGXLib"))  ((theJob :gxjob) (docName :pointer) (pageCount :signed-long))  nil  (:stack-trap #xABFE :d0 24 theJob docName pageCount))(deftrap-inline ("_GXPrintPage" ("QuickDrawGXLib"))  ((theJob :gxjob) (pageNumber :signed-long) (theFormat :pointer) (thePage :pointer))  nil  (:stack-trap #xABFE :d0 25 theJob pageNumber theFormat thePage))(deftrap-inline ("_GXStartPage" ("QuickDrawGXLib"))  ((theJob :gxjob) (pageNumber :signed-long) (theFormat :pointer) (numViewPorts :signed-long) (viewPortList :pointer))  :boolean  (:stack-trap #xABFE :d0 26 theJob pageNumber theFormat numViewPorts viewPortList))(deftrap-inline ("_GXFinishPage" ("QuickDrawGXLib"))  ((theJob :gxjob))  nil  (:stack-trap #xABFE :d0 27 theJob))(deftrap-inline ("_GXFinishJob" ("QuickDrawGXLib"))  ((theJob :gxjob))  nil  (:stack-trap #xABFE :d0 28 theJob));;;; -----------------------------------------------------------------------;;;; Jobs;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXCopyJob" ("QuickDrawGXLib"))  ((srcJob :gxJob) (dstJob :gxJob))  :pointer  (:stack-trap #xABFE :d0 32 srcJob dstJob))(deftrap-inline ("_GXSelectJobFormattingPrinter" ("QuickDrawGXLib"))  ((aJob :gxJob) (printerName :pointer))  nil  (:stack-trap #xABFE :d0 33 aJob printerName))(deftrap-inline ("_GXSelectJobOutputPrinter" ("QuickDrawGXLib"))  ((aJob :gxJob) (printerName :pointer))  nil  (:stack-trap #xABFE :d0 34 aJob printerName))(deftrap-inline ("_GXForEachJobFormatDo" ("QuickDrawGXLib"))  ((aJob :gxJob) (aFormatProc :pointer) (refCon :pointer))  nil  (:stack-trap #xABFE :d0 35 aJob aFormatProc refCon))(deftrap-inline ("_GXCountJobFormats" ("QuickDrawGXLib"))  ((aJob :gxJob))  :long  (:stack-trap #xABFE :d0 36 aJob))(deftrap-inline ("_GXUpdateJob" ("QuickDrawGXLib"))  ((aJob :gxJob))  :boolean  (:stack-trap #xABFE :d0 37 aJob));;;; -----------------------------------------------------------------------;;;; Paper types, etc;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXCountJobPaperTypes" ("QuickDrawGXLib"))  ((theJob :gxJob) (forFormattingDevice :boolean))  :long  (:stack-trap #xABFE :d0 66 theJob forFormattingDevice))(deftrap-inline ("_GXForEachJobPaperTypeDo" ("QuickDrawGXLib"))  ((aJob :gxJob) (aProc :ptr) (refCon :ptr) (forFormattingPrinter :boolean))  nil  (:stack-trap #xABFE :d0 68 aJob aProc refCon forFormattingPrinter))(deftrap-inline ("_GXGetPaperTypeName" ("QuickDrawGXLib"))  ((aPaperType :pointer) (name :pointer))  nil  (:stack-trap #xABFE :d0 70 aPaperType name))(deftrap-inline ("_GXGetPaperTypeDimensions" ("QuickDrawGXLib"))  ((aPaperType :pointer) (pageSize (:pointer :gxRectangle)) (paperSize (:pointer :gxRectangle)))  nil  (:stack-trap #xABFE :d0 71 aPaperType pageSize paperSize));;;; -----------------------------------------------------------------------;;;; Page Formatting and Dialog Box Customization;;;; -----------------------------------------------------------------------(deftrap-inline ("_GXEnableJobScalingPanel" ("QuickDrawGXLib"))  ((aJob :gxJob) (enabled :boolean))  nil  (:stack-trap #xABFE :d0 64 aJob enabled))