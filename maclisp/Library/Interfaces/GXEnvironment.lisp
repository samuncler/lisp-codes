(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:GXEnvironment.p"; at Tuesday June 6,1995 2:10:00 pm.; ;  	File:		GXEnvironment.p;  ;  	Contains:	QuickDraw GX environment constants and interfaces;  ;  	Version:	Technology:	Quickdraw GX 1.1;  				Package:	Universal Interfaces 2.1§1 in ÒMPW PrereleaseÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __GXENVIRONMENT__; $SETC __GXENVIRONMENT__ := 1; $I+; $SETC GXEnvironmentIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __CONDITIONALMACROS__|#(require-interface 'ConditionalMacros)#|                                              ; $I ConditionalMacros.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MIXEDMODE__|#(require-interface 'MixedMode)#|                                              ; $I MixedMode.p |#                                             ; $ENDC; 	Types.p														#|                                              ; $IFC UNDEFINED __WINDOWS__|#(require-interface 'Windows)#|                                              ; $I Windows.p |#                                             ; $ENDC; 	Memory.p													; 	Quickdraw.p													; 		QuickdrawText.p											; 	Events.p													; 		OSUtils.p												; 	Controls.p													; 		Menus.p													; $IFC UNDEFINED __GXTYPES__(require-interface 'GXTypes)                    ; $I GXTypes.p; $ENDC; 	GXMath.p													; 		FixMath.p												; $PUSH; $ALIGN MAC68K; $LibExport+; $SETC graphicsMacintoshIncludes := 1(defconstant $defaultPollingHandlerFlags #x0)(defconstant $okToSwitchDuringPollFlag #x0)(defconstant $dontSwitchDuringPollFlag #x1)(def-mactype :gxpollinghandlerflags (find-mactype ':signed-long))(def-mactype :gxpollinghandlerprocptr (find-mactype ':pointer));  PROCEDURE gxPollingHandler(reference: LONGINT; flags: gxPollingHandlerFlags); (def-mactype :gxpollinghandlerupp (find-mactype ':pointer))(defconstant $uppgxPollingHandlerProcInfo #x3C1);  PROCEDURE (4 byte param, 4 byte param); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxPollingHandlerProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxPollingHandlerProc" ("QuickDrawGXLib"))  ((reference :signed-long) (flags :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC;; Inline instructions called as foreign function(deftrap-inline ("_GXGetGraphicsPollingHandler" ("QuickDrawGXLib"))  ((reference (:pointer :signed-long)))   :pointer   (:c #x303C #x245 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXSetGraphicsPollingHandler" ("QuickDrawGXLib"))  ((handler :pointer) (reference :signed-long))   nil   (:c #x303C #x246 #xA832) ); $SETC graphicsToolboxIncludes := 1;  QD to QD GX Translator typedefs (defconstant $gxDefaultOptionsTranslation #x0)(defconstant $gxOptimizedTranslation #x1)(defconstant $gxReplaceLineWidthTranslation #x2)(defconstant $gxSimpleScalingTranslation #x4)(defconstant $gxSimpleGeometryTranslation #x8)  ;  implies simple scaling (defconstant $gxSimpleLinesTranslation #xC)     ;  implies simple geometry & scaling (defconstant $gxLayoutTextTranslation #x10)     ;  turn on gxLine layout (normally off) (defconstant $gxRasterTargetTranslation #x20)(defconstant $gxPostScriptTargetTranslation #x40)(defconstant $gxVectorTargetTranslation #x80)(def-mactype :gxtranslationoption (find-mactype ':signed-long))(defconstant $gxContainsFormsBegin #x1)(defconstant $gxContainsFormsEnd #x2)(defconstant $gxContainsPostScript #x4)(defconstant $gxContainsEmptyPostScript #x8)(def-mactype :gxtranslationstatistic (find-mactype ':signed-long))(defconstant $gxQuickDrawPictTag :|pict|)(defrecord gxQuickDrawPict ;  translator inputs    (options :signed-long)   (srcRect :rect)   (styleStretch :point);  size of quickdraw picture data    ;;Changing field datalength from signed-long to unsigned-long to match C header (pretty-sure)   (dataLength :unsigned-long);  file alias    (alias :gxbitmapdatasourcealias)   );  WindowRecord utilities ;; Inline instructions called as foreign function(deftrap-inline ("_GXNewWindowViewPort" ("QuickDrawGXLib"))  ((qdWindow (:pointer :grafport)))   :pointer   (:c #x303C #x236 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetWindowViewPort" ("QuickDrawGXLib"))  ((qdWindow (:pointer :grafport)))   :pointer   (:c #x303C #x237 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetViewPortWindow" ("QuickDrawGXLib"))  ((portOrder :pointer))   (:pointer :grafport)   (:c #x303C #x238 #xA832) );  GDevice utilities ;; Inline instructions called as foreign function(deftrap-inline ("_GXGetViewDeviceGDevice" ("QuickDrawGXLib"))  ((theDevice :pointer))   (:handle :gdevice)   (:c #x303C #x239 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetGDeviceViewDevice" ("QuickDrawGXLib"))  ((qdGDevice (:handle :gdevice)))   :pointer   (:c #x303C #x23A #xA832) );  gxPoint utilities ; CONST;; Inline instructions called as foreign function(deftrap-inline ("_GXConvertQDPoint" ("QuickDrawGXLib"))  ((shortPt (:pointer :point)) (portOrder :pointer) (fixedPt (:pointer :gxpoint)))   nil   (:c #x303C #x23B #xA832) );  printing utilities typedef (def-mactype :gxshapespoolprocptr (find-mactype ':pointer));  FUNCTION gxShapeSpool(toSpool: gxShape; refCon: LONGINT): OSErr; (def-mactype :gxuserviewportfilterprocptr (find-mactype ':pointer));  PROCEDURE gxUserViewPortFilter(toFilter: gxShape; portOrder: gxViewPort; refCon: LONGINT); (def-mactype :gxconvertqdfontprocptr (find-mactype ':pointer));  FUNCTION gxConvertQDFont(dst: gxStyle; txFont: LONGINT; txFace: LONGINT): LONGINT; (def-mactype :gxshapespoolupp (find-mactype ':pointer))(def-mactype :gxuserviewportfilterupp (find-mactype ':pointer))(def-mactype :gxconvertqdfontupp (find-mactype ':pointer))(defconstant $uppgxShapeSpoolProcInfo #x3E1)    ;  FUNCTION (4 byte param, 4 byte param): 2 byte result; (defconstant $uppgxUserViewPortFilterProcInfo #xFC1);  PROCEDURE (4 byte param, 4 byte param, 4 byte param); (defconstant $uppgxConvertQDFontProcInfo #xFF1) ;  FUNCTION (4 byte param, 4 byte param, 4 byte param): 4 byte result; ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxShapeSpoolProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxUserViewPortFilterProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxConvertQDFontProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxShapeSpoolProc" ("QuickDrawGXLib"))  ((toSpool :pointer) (refCon :signed-long) (userRoutine :pointer))   :signed-integer   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxUserViewPortFilterProc" ("QuickDrawGXLib"))  ((toFilter :pointer) (portOrder :pointer) (refCon :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxConvertQDFontProc" ("QuickDrawGXLib"))  ((dst :pointer) (txFont :signed-long) (txFace :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC(def-mactype :gxshapespoolfunction (find-mactype ':pointer))(def-mactype :gxuserviewportfilter (find-mactype ':pointer))(def-mactype :gxconvertqdfontfunction (find-mactype ':pointer));  mouse utilities ;  return mouse location in fixed-gxPoint global space ;; Inline instructions called as foreign function(deftrap-inline ("_GXGetGlobalMouse" ("QuickDrawGXLib"))  ((globalPt (:pointer :gxpoint)))   nil   (:c #x303C #x23C #xA832) );  return fixed-gxPoint local mouse (gxViewPort == 0 --> default) ;; Inline instructions called as foreign function(deftrap-inline ("_GXGetViewPortMouse" ("QuickDrawGXLib"))  ((portOrder :pointer) (localPt (:pointer :gxpoint)))   nil   (:c #x303C #x23D #xA832) );  printing utilities ;; Inline instructions called as foreign function(deftrap-inline ("_GXGetViewPortFilter" ("QuickDrawGXLib"))  ((portOrder :pointer) (refCon (:pointer :signed-long)))   :pointer   (:c #x303C #x25E #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXSetViewPortFilter" ("QuickDrawGXLib"))  ((portOrder :pointer) (filter :pointer) (refCon :signed-long))   nil   (:c #x303C #x23E #xA832) );  QD to QD GX Translator functions ; CONST                                         ; CONST;; Inline instructions called as foreign function(deftrap-inline ("_GXInstallQDTranslator" ("QuickDrawGXLib"))  ((port (:pointer :grafport)) (options :signed-long) (srcRect (:pointer :rect)) (dstRect (:pointer :rect)) (styleStrech :point) (userFunction :pointer) (reference :pointer))   nil   (:c #x303C #x23F #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXRemoveQDTranslator" ("QuickDrawGXLib"))  ((port (:pointer :grafport)) (statistic (:pointer :signed-long)))   :signed-long   (:c #x303C #x240 #xA832) ); CONST                                         ; CONST;; Inline instructions called as foreign function(deftrap-inline ("_GXConvertPICTToShape" ("QuickDrawGXLib"))  ((pict (:handle :picture)) (options :signed-long) (srcRect (:pointer :rect)) (dstRect (:pointer :rect)) (styleStretch :point) (destination :pointer) (stats (:pointer :signed-long)))   :pointer   (:c #x303C #x241 #xA832) );  Find the best GX style given a QD font and face. Called by the QD->GX translator ;; Inline instructions called as foreign function(deftrap-inline ("_GXConvertQDFont" ("QuickDrawGXLib"))  ((theStyle :pointer) (txFont :signed-long) (txFace :signed-long))   :signed-long   (:c #x303C #x242 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetConvertQDFont" ("QuickDrawGXLib"))  ()   :pointer   (:c #x303C #x243 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXSetConvertQDFont" ("QuickDrawGXLib"))  ((userFunction :pointer))   nil   (:c #x303C #x244 #xA832) ); $ALIGN RESET; $POP; $SETC UsingIncludes := GXEnvironmentIncludes; $ENDC                                         ; __GXENVIRONMENT__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'GXEnvironment)