(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:SFNTTypes.p"; at Tuesday June 6,1995 2:10:46 pm.; ;  	File:		SFNTTypes.p;  ;  	Contains:	Font file structures.;  ;  	Version:	Technology:	Quickdraw GX 1.1;  				Package:	Universal Interfaces 2.1ß1 in “MPW Prerelease” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED __SFNTTYPES__; $SETC __SFNTTYPES__ := 1; $I+; $SETC SFNTTypesIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __GXMATH__|#(require-interface 'GXMath)#|                                              ; $I GXMath.p |#                                             ; $ENDC; 	ConditionalMacros.p											; 	Types.p														; 	FixMath.p													#|                                              ; $IFC UNDEFINED __GXTYPES__|#(require-interface 'GXTypes)#|                                              ; $I GXTypes.p |#                                             ; $ENDC; 	MixedMode.p													; $PUSH; $ALIGN MAC68K; $LibExport+(defrecord sfntDirectoryEntry    (tableTag :signed-long)   ;;Changing field checksum from signed-long to unsigned-long to match C header (pretty-darn-sure)   (checkSum :unsigned-long)   ;;Changing field offset from signed-long to unsigned-long to match C header (pretty-sure)   (offset :unsigned-long)   ;;Changing field length from signed-long to unsigned-long to match C header (pretty-sure)   (length :unsigned-long)   );  The search fields limits numOffsets to 4096. (defrecord sfntDirectory    ;;Changing field format from signed-long to unsigned-long to match C header (educated-guess)   (format :unsigned-long)   ;;Changing field numoffsets from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (numOffsets :unsigned-word)                  ;  number of tables    ;;Changing field searchrange from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (searchRange :unsigned-word)                 ;  (max2 <= numOffsets)*16    ;;Changing field entryselector from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (entrySelector :unsigned-word)               ;  log2(max2 <= numOffsets)    ;;Changing field rangeshift from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (rangeShift :unsigned-word)                  ;  numOffsets*16-searchRange   (table (:array :sfntdirectoryentry 1))       ;  table[numOffsets]    )(defconstant $sizeof_sfntDirectory 12);  Cmap - character id to glyph id gxMapping (defconstant $cmapFontTableTag :|cmap|)(defrecord sfntCMapSubHeader    ;;Changing field format from signed-integer to unsigned-word to match C header (pretty-sure)   (format :unsigned-word)   ;;Changing field length from signed-integer to unsigned-word to match C header (pretty-sure)   (length :unsigned-word)   ;;Changing field languageid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (languageID :unsigned-word)                  ;  base-1    )(defconstant $sizeof_sfntCMapSubHeader 6)(defrecord sfntCMapEncoding    ;;Changing field platformid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (platformID :unsigned-word)                  ;  base-0    ;;Changing field scriptid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (scriptID :unsigned-word)                    ;  base-0    ;;Changing field offset from signed-long to unsigned-long to match C header (pretty-sure)   (offset :unsigned-long)   )(defconstant $sizeof_sfntCMapEncoding 8)(defrecord sfntCMapHeader    ;;Changing field version from signed-integer to unsigned-word to match C header (pretty-sure)   (version :unsigned-word)   ;;Changing field numtables from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (numTables :unsigned-word)   (encoding (:array :sfntcmapencoding 1))   )(defconstant $sizeof_sfntCMapHeader 4);  Name table (defconstant $nameFontTableTag :|name|)(defrecord sfntNameRecord    ;;Changing field platformid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (platformID :unsigned-word)                  ;  base-0    ;;Changing field scriptid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (scriptID :unsigned-word)                    ;  base-0    ;;Changing field languageid from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (languageID :unsigned-word)                  ;  base-0    (nameID :signed-integer)                     ;  base-0    ;;Changing field length from signed-integer to unsigned-word to match C header (pretty-sure)   (length :unsigned-word)   ;;Changing field offset from signed-integer to unsigned-word to match C header (pretty-sure)   (offset :unsigned-word)   )(defconstant $sizeof_sfntNameRecord 12)(defrecord sfntNameHeader    ;;Changing field format from signed-integer to unsigned-word to match C header (pretty-sure)   (format :unsigned-word)   ;;Changing field count from signed-integer to unsigned-word to match C header (pretty-sure)   (count :unsigned-word)   ;;Changing field stringoffset from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (stringOffset :unsigned-word)   (rec (:array :sfntnamerecord 1))   )(defconstant $sizeof_sfntNameHeader 6);  Fvar table - gxFont variations (defconstant $variationFontTableTag :|fvar|);  These define each gxFont variation (defrecord sfntVariationAxis    (axisTag :signed-long)   (minValue :signed-long)   (defaultValue :signed-long)   (maxValue :signed-long)   (flags :signed-integer)   (nameID :signed-integer)   )(defconstant $sizeof_sfntVariationAxis 20);  These are named locations in gxStyle-space for the user (defrecord sfntInstance    (nameID :signed-integer)   (flags :signed-integer)   (coord (:array :signed-long 1))              ;  [axisCount] ;  room to grow since the header carries a tupleSize field    )(defconstant $sizeof_sfntInstance 4)(defrecord sfntVariationHeader    ;;Changing field version from signed-long to unsigned-long to match C header (educated-guess)   (version :unsigned-long)                     ;  1.0 Fixed    ;;Changing field offsettodata from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (offsetToData :unsigned-word)                ;  to first axis = 16   ;;Changing field countsizepairs from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (countSizePairs :unsigned-word)              ;  axis+inst = 2    ;;Changing field axiscount from signed-integer to unsigned-word to match C header (pretty-sure)   (axisCount :unsigned-word)   ;;Changing field axissize from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (axisSize :unsigned-word)   ;;Changing field instancecount from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (instanceCount :unsigned-word)   ;;Changing field instancesize from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (instanceSize :unsigned-word);  …other <count,size> pairs    (axis (:array :sfntvariationaxis 1))         ;  [axisCount]    (instance (:array :sfntinstance 1))          ;  [instanceCount]  …other arrays of data    )(defconstant $sizeof_sfntVariationHeader 16);  Fdsc table - gxFont descriptor (defconstant $descriptorFontTableTag :|fdsc|)(defrecord sfntDescriptorHeader    ;;Changing field version from signed-long to unsigned-long to match C header (educated-guess)   (version :unsigned-long)                     ;  1.0 in Fixed    (descriptorCount :signed-long)   (descriptor (:array :gxfontvariation 1))   )(defconstant $sizeof_sfntDescriptorHeader 8);  Feat Table - layout feature table (defconstant $featureFontTableTag :|feat|)(defrecord sfntFeatureName    ;;Changing field featuretype from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (featureType :unsigned-word)   ;;Changing field settingcount from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (settingCount :unsigned-word)   (offsetToSettings :signed-long)   ;;Changing field featureflags from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (featureFlags :unsigned-word)   (nameID :signed-integer)   )(defrecord sfntFontRunFeature    ;;Changing field featuretype from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (featureType :unsigned-word)   ;;Changing field setting from signed-integer to unsigned-word to match C header (pretty-sure)   (setting :unsigned-word)   )(defrecord sfntFeatureHeader    ;;Changing field version from signed-long to unsigned-long to match C header (educated-guess)   (version :unsigned-long)                     ;  1.0    ;;Changing field featurenamecount from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (featureNameCount :unsigned-word)   ;;Changing field featuresetcount from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (featureSetCount :unsigned-word)   (reserved :signed-long)                      ;  set to 0    (names (:array :sfntfeaturename 1))   (settings (:array :gxfontfeaturesetting 1))   (runs (:array :sfntfontrunfeature 1))   );  OS/2 Table (defconstant $os2FontTableTag :|OS/2|);   Special invalid glyph ID value, useful as a sentinel value, for example (defconstant $nonGlyphID 65535); $ALIGN RESET; $POP; $SETC UsingIncludes := SFNTTypesIncludes; $ENDC                                         ; __SFNTTYPES__#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC(provide-interface 'SFNTTypes)