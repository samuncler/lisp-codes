(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:AIFF.p"; at Tuesday June 6,1995 2:04:20 pm.; ;  	File:		AIFF.p;  ;  	Contains:	Definition of AIFF file format components.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __AIFF__; $SETC __AIFF__ := 1; $I+; $SETC AIFFIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $AIFFID :|AIFF|)(defconstant $AIFCID :|AIFC|)(defconstant $FormatVersionID :|FVER|)(defconstant $CommonID :|COMM|)(defconstant $FORMID :|FORM|)(defconstant $SoundDataID :|SSND|)(defconstant $MarkerID :|MARK|)(defconstant $InstrumentID :|INST|)(defconstant $MIDIDataID :|MIDI|)(defconstant $AudioRecordingID :|AESD|)(defconstant $ApplicationSpecificID :|APPL|)(defconstant $CommentID :|COMT|)(defconstant $NameID :|NAME|)(defconstant $AuthorID :|AUTH|)(defconstant $CopyrightID :|(c) |)(defconstant $AnnotationID :|ANNO|)(defconstant $NoLooping 0)(defconstant $ForwardLooping 1)(defconstant $ForwardBackwardLooping 2);  AIFF-C Versions (defconstant $AIFCVersion1 #xA2805140);  Compression Names (defconstant $NoneName "not compressed")(defconstant $ACE2to1Name "ACE 2-to-1")(defconstant $ACE8to3Name "ACE 8-to-3")(defconstant $MACE3to1Name "MACE 3-to-1")(defconstant $MACE6to1Name "MACE 6-to-1");  Compression Types (defconstant $NoneType :|NONE|)(defconstant $ACE2Type :|ACE2|)(defconstant $ACE8Type :|ACE8|)(defconstant $MACE3Type :|MAC3|)(defconstant $MACE6Type :|MAC6|); Warning: Patching def of type ID from translator table: was :signed-long, is now :ostype(def-mactype :id (find-mactype :ostype))#| (def-mactype :id (find-mactype ':signed-long)) |#(def-mactype :markeridtype (find-mactype ':signed-integer))(defrecord ChunkHeader    (ckID :ostype)   (ckSize :signed-long)   )(defrecord ContainerChunk    (ckID :ostype)   (ckSize :signed-long)   (formType :ostype)   )(defrecord FormatVersionChunk    (ckID :ostype)   (ckSize :signed-long)   ;;Changing field timestamp from signed-long to unsigned-long to match C header (pretty-darn-sure)   (timestamp :unsigned-long)   )(def-mactype :formatversionchunkptr (find-mactype '(:pointer :formatversionchunk)))(defrecord CommonChunk    (ckID :ostype)   (ckSize :signed-long)   (numChannels :signed-integer)   ;;Changing field numsampleframes from signed-long to unsigned-long to match C header (pretty-darn-sure)   (numSampleFrames :unsigned-long)   (sampleSize :signed-integer)   (sampleRate :pointer)   )(def-mactype :commonchunkptr (find-mactype '(:pointer :commonchunk)))(defrecord ExtCommonChunk    (ckID :ostype)   (ckSize :signed-long)   (numChannels :signed-integer)   ;;Changing field numsampleframes from signed-long to unsigned-long to match C header (pretty-darn-sure)   (numSampleFrames :unsigned-long)   (sampleSize :signed-integer)   (sampleRate :pointer)   (compressionType :ostype)   (compressionName (:array :character 1 :packed));  variable length array, Pascal string    )(def-mactype :extcommonchunkptr (find-mactype '(:pointer :extcommonchunk)))(defrecord SoundDataChunk    (ckID :ostype)   (ckSize :signed-long)   ;;Changing field offset from signed-long to unsigned-long to match C header (pretty-sure)   (offset :unsigned-long)   ;;Changing field blocksize from signed-long to unsigned-long to match C header (pretty-sure)   (blockSize :unsigned-long)   )(def-mactype :sounddatachunkptr (find-mactype '(:pointer :sounddatachunk)))(defrecord Marker    (id :signed-integer)   ;;Changing field position from signed-long to unsigned-long to match C header (pretty-darn-sure)   (position :unsigned-long)   (markerName (:string 255))   )(defrecord MarkerChunk    (ckID :ostype)   (ckSize :signed-long)   ;;Changing field nummarkers from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (numMarkers :unsigned-word)   (Markers (:array :marker 1))                 ;  variable length array    )(def-mactype :markerchunkptr (find-mactype '(:pointer :markerchunk)))(defrecord AIFFLoop    (playMode :signed-integer)   (beginLoop :signed-integer)   (endLoop :signed-integer)   );; This form has been patched from HD:CCL3.0d17:Interface Translator:Patches:aiff.patch#|(defrecord InstrumentChunk    (ckID :ostype)   (ckSize :signed-long)   (baseFrequency :unsigned-byte)   (detune :unsigned-byte)   (lowFrequency :unsigned-byte)   (highFrequency :unsigned-byte)   (lowVelocity :unsigned-byte)   (highVelocity :unsigned-byte)   (gain :signed-integer)   (sustainLoop :aiffloop)   (releaseLoop :aiffloop)   )|#;;; I have no documentation for this. The patch was part of the old interface system.;;; here, every byte has before-padding(defrecord InstrumentChunk    (ckID :signed-long)   (ckSize :signed-long)   (filler1 :signed-byte)   (baseFrequency :unsigned-byte)   (filler2 :signed-byte)   (detune :unsigned-byte)   (filler3 :signed-byte)   (lowFrequency :unsigned-byte)   (filler4 :signed-byte)   (highFrequency :unsigned-byte)   (filler5 :signed-byte)   (lowVelocity :unsigned-byte)   (filler6 :signed-byte)   (highVelocity :unsigned-byte)   (gain :signed-integer)   (sustainLoop :aiffloop)   (releaseLoop :aiffloop)   )(def-mactype :instrumentchunkptr (find-mactype '(:pointer :instrumentchunk)))(defrecord MIDIDataChunk    (ckID :ostype)   (ckSize :signed-long)   (MIDIdata (:array :signed-byte 1 :packed))   ;  UInt8 ;  variable length array    )(def-mactype :mididatachunkptr (find-mactype '(:pointer :mididatachunk)))(defrecord AudioRecordingChunk    (ckID :ostype)   (ckSize :signed-long)   (AESChannelStatus (:array :signed-byte 24 :packed));  UInt8    )(def-mactype :audiorecordingchunkptr (find-mactype '(:pointer :audiorecordingchunk)))(defrecord ApplicationSpecificChunk    (ckID :ostype)   (ckSize :signed-long)   (applicationSignature :ostype)   (data (:array :signed-byte 1 :packed))       ;  UInt8 ;  variable length array    )(def-mactype :applicationspecificchunkptr (find-mactype '(:pointer :applicationspecificchunk)))(defrecord Comment    ;;Changing field timestamp from signed-long to unsigned-long to match C header (pretty-darn-sure)   (timeStamp :unsigned-long)   (marker :signed-integer)   ;;Changing field count from signed-integer to unsigned-word to match C header (pretty-sure)   (count :unsigned-word)   (text (:array :character 1 :packed))         ;  variable length array, Pascal string    )(defrecord CommentsChunk    (ckID :ostype)   (ckSize :signed-long)   ;;Changing field numcomments from signed-integer to unsigned-word to match C header (pretty-darn-sure)   (numComments :unsigned-word)   (comments (:array :comment 1 :packed))       ;  variable length array    )(def-mactype :commentschunkptr (find-mactype '(:pointer :commentschunk)))(defrecord TextChunk    (ckID :ostype)   (ckSize :signed-long)   (text (:array :character 1 :packed))         ;  variable length array, Pascal string    )(def-mactype :textchunkptr (find-mactype '(:pointer :textchunk))); $ALIGN RESET; $POP; $SETC UsingIncludes := AIFFIncludes; $ENDC                                         ; __AIFF__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'AIFF)