(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:OCEStandardMail.p"; at Tuesday June 6,1995 2:15:15 pm.; ;  	File:		OCEStandardMail.p;  ;  	Contains:	Apple Open Collaboration Environment Standard Mail Interfaces.;  ;  	Version:	Technology:	AOCE Toolbox 1.02;  				Package:	Universal Interfaces 2.1ß1 in “MPW Prerelease” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __OCESTANDARDMAIL__; $SETC __OCESTANDARDMAIL__ := 1; $I+; $SETC OCEStandardMailIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __EVENTS__|#(require-interface 'Events)#|                                              ; $I Events.p |#                                             ; $ENDC; 	Types.p														; 		ConditionalMacros.p										; 	Quickdraw.p													; 		MixedMode.p												; 		QuickdrawText.p											; 	OSUtils.p													; 		Memory.p												#|                                              ; $IFC UNDEFINED __APPLEEVENTS__|#(require-interface 'AppleEvents)#|                                              ; $I AppleEvents.p |#                                             ; $ENDC; 	Errors.p													; 	EPPC.p														; 		AppleTalk.p												; 		Files.p													; 		PPCToolbox.p											; 		Processes.p												; 	Notification.p												#|                                              ; $IFC UNDEFINED __CONTROLS__|#(require-interface 'Controls)#|                                              ; $I Controls.p |#                                             ; $ENDC; 	Menus.p														#|                                              ; $IFC UNDEFINED __DIALOGS__|#(require-interface 'Dialogs)#|                                              ; $I Dialogs.p |#                                             ; $ENDC; 	Windows.p													; 	TextEdit.p													#|                                              ; $IFC UNDEFINED __FILES__|#(require-interface 'Files)#|                                              ; $I Files.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __WINDOWS__|#(require-interface 'Windows)#|                                              ; $I Windows.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __OCEAUTHDIR__|#(require-interface 'OCEAuthDir)#|                                              ; $I OCEAuthDir.p |#                                             ; $ENDC; 	OCE.p														; 		Aliases.p												; 		Script.p												; 			IntlResources.p										#|                                              ; $IFC UNDEFINED __OCEMAIL__|#(require-interface 'OCEMail)#|                                              ; $I OCEMail.p |#                                             ; $ENDC; 	DigitalSignature.p											; 	OCEMessaging.p												; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $kSMPVersion 1)(defconstant $gestaltSMPMailerVersion :|malr|)(defconstant $gestaltSMPSPSendLetterVersion :|spsl|)(defconstant $kSMPNativeFormatName :|natv|)(defrecord LetterSpec    ;;Changing field spec from signed-long to unsigned-long to match C header (pretty-darn-sure)   (spec (:array :unsigned-long 3))   )(defconstant $typeLetterSpec :|lttr|); 	Wildcard used for filtering letter types. (defconstant $FilterAnyLetter :|ltr*|)(defconstant $FilterAppleLetterContent :|ltc*|)(defconstant $FilterImageContent :|lti*|)(defrecord LetterDescriptor    (onDisk :boolean)   (filler1 :boolean)   (:variant       (      (fileSpec :fsspec)      )      (      (mailboxSpec :letterspec)      )      )   ); ; SMPPSendAs values.  You may add the following values together to determine how the; file is sent, but you may not set both kSMPSendAsEnclosureMask and kSMPSendFileOnlyMask.  This; will allow you to send the letter as an image so that it will work with fax gateways; and send as an enclosure as well.; (defconstant $kSMPSendAsEnclosureBit 0)         ;  Appears as letter with enclosures (defconstant $kSMPSendFileOnlyBit 1)            ;  Appears as a file in mailbox. (defconstant $kSMPSendAsImageBit 2)             ;  Content imaged in letter ;  Values of SMPPSendAs (defconstant $kSMPSendAsEnclosureMask (* 1 (expt 2 #$kSMPSendAsEnclosureBit)))(defconstant $kSMPSendFileOnlyMask (* 1 (expt 2 #$kSMPSendFileOnlyBit)))(defconstant $kSMPSendAsImageMask (* 1 (expt 2 #$kSMPSendAsImageBit)))(def-mactype :smppsendas (find-mactype ':signed-byte))(def-mactype :smpdrawimageprocptr (find-mactype ':pointer));  PROCEDURE SMPDrawImage(refcon: LONGINT; inColor: BOOLEAN); (def-mactype :smpdrawimageupp (find-mactype ':pointer))(defconstant $uppSMPDrawImageProcInfo #x1C0)    ;  PROCEDURE (4 byte param, 1 byte param); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSMPDrawImageProc" ("AOCELib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSMPDrawImageProc" ("AOCELib"))  ((refcon :signed-long) (inColor :boolean) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC(defrecord SMPRecipientDescriptor    (next (:pointer :smprecipientdescriptor))    ;   Q-Link.    (result :signed-integer)                     ;   result code when using the object.    (recipient (:pointer :ocepackedrecipient))   ;   Pointer to a Packed Address.    ;;Changing field size from signed-long to unsigned-long to match C header (pretty-sure)   (size :unsigned-long)                        ;   length of recipient in bytes.    (theAddress :dsspec)                         ;   structure points into recipient and theRID.    (theRID :recordid)                           ;   structure points into recipient.    )(def-mactype :smprecipientdescriptorptr (find-mactype '(:pointer :smprecipientdescriptor)))(defrecord SMPEnclosureDescriptor    (next (:pointer :smpenclosuredescriptor))   (result :signed-integer)   (fileSpec :fsspec)   (fileCreator :ostype)                        ;   Creator of this enclosure.    (fileType :ostype)                           ;   File Type of this enclosure.    )(def-mactype :smpenclosuredescriptorptr (find-mactype '(:pointer :smpenclosuredescriptor)))(defrecord SMPLetterPB    (result :signed-integer)                     ;  result of operation    (subject (:pointer :rstring))                ;  RString    (senderIdentity :signed-long)                ;  Letter is sent from this Identity    (toList (:pointer :smprecipientdescriptor))  ;  Pointer to linked list    (ccList (:pointer :smprecipientdescriptor))  ;  Pointer to linked list    (bccList (:pointer :smprecipientdescriptor)) ;  Pointer to linked list    (script :signed-integer)                     ;  Identifier for language    (textSize :signed-long)                      ;  length of body data    (textBuffer :pointer)                        ;  body of the letter    (sendAs :signed-byte)                        ;  Send as Letter,Enclosure,Image    (padByte :signed-byte)                       ;  Byte    (enclosures (:pointer :smpenclosuredescriptor));  files to be enclosed    (drawImageProc :pointer)                     ;  For imaging    (imageRefCon :signed-long)                   ;  For imaging    (supportsColor :boolean)                     ;  For imaging - set to true if you application supports color imaging    (filler1 :boolean)   )(def-mactype :smpletterpbptr (find-mactype '(:pointer :smpletterpb)))(defconstant $kSMPAppMustHandleEventBit 0)(defconstant $kSMPAppShouldIgnoreEventBit 1)(defconstant $kSMPContractedBit 2)(defconstant $kSMPExpandedBit 3)(defconstant $kSMPMailerBecomesTargetBit 4)(defconstant $kSMPAppBecomesTargetBit 5)(defconstant $kSMPCursorOverMailerBit 6)(defconstant $kSMPCreateCopyWindowBit 7)(defconstant $kSMPDisposeCopyWindowBit 8);  Values of SMPMailerResult (defconstant $kSMPAppMustHandleEventMask (* 1 (expt 2 #$kSMPAppMustHandleEventBit)))(defconstant $kSMPAppShouldIgnoreEventMask (* 1 (expt 2 #$kSMPAppShouldIgnoreEventBit)))(defconstant $kSMPContractedMask (* 1 (expt 2 #$kSMPContractedBit)))(defconstant $kSMPExpandedMask (* 1 (expt 2 #$kSMPExpandedBit)))(defconstant $kSMPMailerBecomesTargetMask (* 1 (expt 2 #$kSMPMailerBecomesTargetBit)))(defconstant $kSMPAppBecomesTargetMask (* 1 (expt 2 #$kSMPAppBecomesTargetBit)))(defconstant $kSMPCursorOverMailerMask (* 1 (expt 2 #$kSMPCursorOverMailerBit)))(defconstant $kSMPCreateCopyWindowMask (* 1 (expt 2 #$kSMPCreateCopyWindowBit)))(defconstant $kSMPDisposeCopyWindowMask (* 1 (expt 2 #$kSMPDisposeCopyWindowBit)))(def-mactype :smpmailerresult (find-mactype ':signed-long));  Values of SMPMailerComponent(defconstant $kSMPOther -1)(defconstant $kSMPFrom 32)(defconstant $kSMPTo 20)(defconstant $kSMPRegarding 22)(defconstant $kSMPSendDateTime 29)(defconstant $kSMPAttachments 26)(defconstant $kSMPAddressOMatic 16)(def-mactype :smpmailercomponent (find-mactype ':signed-long))(defconstant $kSMPToAddress #$kMailToBit)(defconstant $kSMPCCAddress #$kMailCcBit)(defconstant $kSMPBCCAddress #$kMailBccBit)(def-mactype :smpaddresstype (find-mactype ':signed-integer))(defconstant $kSMPUndoCommand 0)(defconstant $kSMPCutCommand 1)(defconstant $kSMPCopyCommand 2)(defconstant $kSMPPasteCommand 3)(defconstant $kSMPClearCommand 4)(defconstant $kSMPSelectAllCommand 5)(def-mactype :smpeditcommand (find-mactype ':signed-integer))(defconstant $kSMPUndoDisabled 0)(defconstant $kSMPAppMayUndo 1)(defconstant $kSMPMailerUndo 2)(def-mactype :smpundostate (find-mactype ':signed-integer)); ; SMPSendFormatMask:; ; Bitfield indicating which combinations of formats are included in,; should be included or, or can be included in a letter.; (defconstant $kSMPNativeBit 0)(defconstant $kSMPImageBit 1)(defconstant $kSMPStandardInterchangeBit 2);  Values of SMPSendFormatMask (defconstant $kSMPNativeMask (* 1 (expt 2 #$kSMPNativeBit)))(defconstant $kSMPImageMask (* 1 (expt 2 #$kSMPImageBit)))(defconstant $kSMPStandardInterchangeMask (* 1 (expt 2 #$kSMPStandardInterchangeBit)))(def-mactype :smpsendformatmask (find-mactype ':signed-long)); ; 	Pseudo-events passed to the clients filter proc for initialization and cleanup.; (defconstant $kSMPSendOptionsStart -1)(defconstant $kSMPSendOptionsEnd -2); ; SMPSendFormatMask:; ; Structure describing the format of a letter.  If kSMPNativeMask bit is set, the whichNativeFormat field indicates which of the client-defined formats to use.; (defrecord SMPSendFormat    (whichFormats :signed-long)   (whichNativeFormat :signed-integer)          ;  0 based    )(defrecord SMPLetterInfo    (letterCreator :ostype)   (letterType :ostype)   (subject :rstring32)   (sender :rstring32)   )(defconstant $kSMPSave 0)(defconstant $kSMPSaveAs 1)(defconstant $kSMPSaveACopy 2)(def-mactype :smpsavetype (find-mactype ':signed-integer))(def-mactype :frontwindowprocptr (find-mactype ':pointer));  FUNCTION FrontWindow(clientData: LONGINT): WindowPtr; (def-mactype :preparemailerfordrawingprocptr (find-mactype ':pointer));  PROCEDURE PrepareMailerForDrawing(window: WindowPtr; clientData: LONGINT); (def-mactype :sendoptionsfilterprocptr (find-mactype ':pointer));  FUNCTION SendOptionsFilter(theDialog: DialogPtr; VAR theEvent: EventRecord; itemHit: INTEGER; clientData: LONGINT): BOOLEAN; (def-mactype :frontwindowupp (find-mactype ':pointer))(def-mactype :preparemailerfordrawingupp (find-mactype ':pointer))(def-mactype :sendoptionsfilterupp (find-mactype ':pointer))(defconstant $uppFrontWindowProcInfo #xF0)      ;  FUNCTION (4 byte param): 4 byte result; (defconstant $uppPrepareMailerForDrawingProcInfo #x3C0);  PROCEDURE (4 byte param, 4 byte param); (defconstant $uppSendOptionsFilterProcInfo #x3BD0);  FUNCTION (4 byte param, 4 byte param, 2 byte param, 4 byte param): 1 byte result; ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewFrontWindowProc" ("AOCELib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewPrepareMailerForDrawingProc" ("AOCELib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewSendOptionsFilterProc" ("AOCELib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallFrontWindowProc" ("AOCELib"))  ((clientData :signed-long) (userRoutine :pointer))   (:pointer :grafport)   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallPrepareMailerForDrawingProc" ("AOCELib"))  ((window (:pointer :grafport)) (clientData :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallSendOptionsFilterProc" ("AOCELib"))  ((theDialog (:pointer :grafport)) (theEvent (:pointer :eventrecord)) (itemHit :signed-integer) (clientData :signed-long) (userRoutine :pointer))   :boolean   (#x205F #x4E90) ); $ENDC(defconstant $kSMPGetDimensions 4700)(defconstant $kSMPNewMailer 4701)(defconstant $kSMPDisposeMailer 4702)(defconstant $kSMPMailerEvent 4703)(defconstant $kSMPMailerEditCommand 4704)(defconstant $kSMPMailerForward 4705)(defconstant $kSMPMailerReply 4706)(defconstant $kSMPGetMailerState 4707)(defconstant $kSMPPrepareCoverPages 4708)(defconstant $kSMPDrawNthCoverPage 4709)(defconstant $kSMPBeginSave 4710)(defconstant $kSMPBeginSend 4711)(defconstant $kSMPOpenLetter 4712)(defconstant $kSMPDrawMailer 4713)(defconstant $kSMPMoveMailer 4714)(defconstant $kSMPSetSubject 4715)(defconstant $kSMPSetFromIdentity 4716)(defconstant $kSMPAddAddress 4717)(defconstant $kSMPAddAttachment 4718)(defconstant $kSMPContentChanged 4719)(defconstant $kSMPEndSave 4720)(defconstant $kSMPEndSend 4721)(defconstant $kSMPExpandOrContract 4722)(defconstant $kSMPBecomeTarget 4723)(defconstant $kSMPGetTabInfo 4724)(defconstant $kSMPClearUndo 4725)(defconstant $kSMPAttachDialog 4726)(defconstant $kSMPGetComponentSize 4727)(defconstant $kSMPGetComponentInfo 4728)(defconstant $kSMPGetListItemInfo 4729)(defconstant $kSMPAddContent 4730)(defconstant $kSMPReadContent 4731)(defconstant $kSMPGetFontNameFromLetter 4732)(defconstant $kSMPAddMainEnclosure 4733)(defconstant $kSMPGetMainEnclosureFSSpec 4734)(defconstant $kSMPAddBlock 4735)(defconstant $kSMPReadBlock 4736)(defconstant $kSMPEnumerateBlocks 4737)(defconstant $kSMPImage 4738)(defconstant $kSMPInitMailer 4741)(defconstant $kSMPGetNextLetter 4742)(defconstant $kSMPPrepareToClose 4743)(defconstant $kSMPCloseOptionsDialog 4744)(defconstant $kSMPPrepareToChange 4745)(defconstant $kSMPGetLetterInfo 4746)(defconstant $kSMPTagDialog 4747)(defconstant $kSMPSendOptionsDialog 5000)(defrecord SMPMailerState    (mailerCount :signed-integer)   (currentMailer :signed-integer)   (upperLeft :point)   (hasBeenReceived :boolean)   (isTarget :boolean)   (isExpanded :boolean)   (canMoveToTrash :boolean)   (canTag :boolean)   (padByte2 :signed-byte)                      ;  Byte    ;;Changing field changecount from signed-long to unsigned-long to match C header (pretty-darn-sure)   (changeCount :unsigned-long)   (targetComponent :signed-long)   (canCut :boolean)   (canCopy :boolean)   (canPaste :boolean)   (canClear :boolean)   (canSelectAll :boolean)   (padByte3 :signed-byte)                      ;  Byte    (undoState :signed-integer)   (undoWhat (:string 63))   )(defrecord SMPSendOptions    (signWhenSent :boolean)   (priority :signed-byte)   )(def-mactype :smpsendoptionsptr (find-mactype '(:pointer :smpsendoptions)))(def-mactype :smpsendoptionshandle (find-mactype '(:handle :smpsendoptions)))(defrecord SMPCloseOptions    (moveToTrash :boolean)   (addTag :boolean)   (tag :rstring32)   )(def-mactype :smpcloseoptionsptr (find-mactype '(:pointer :smpcloseoptions))); ----------------------------------------------------------------------------------------; 	Send Package Routines; ----------------------------------------------------------------------------------------(defconstant $kSMPSendLetter 500)(defconstant $kSMPResolveToRecipient 1100)(defconstant $kSMPNewPage 2100)(defconstant $kSMPImageErr 2101); $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPSendLetter" ("AOCELib"))         ((theLetter (:pointer :smpletterpb)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 500) theLetter)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPNewPage" ("AOCELib"))         ((newHeader (:pointer :opencpicparams)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 2100) newHeader)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPImageErr" ("AOCELib"))         ()   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 0 16) 2101))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPResolveToRecipient" ("AOCELib"))         ((dsSpec (:pointer :packeddsspec)) (recipientList (:pointer (:pointer :smprecipientdescriptor))) (identity :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 6 16) 1100) dsSpec recipientList identity)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPInitMailer" ("AOCELib"))         ((mailerVersion :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4741) mailerVersion)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetDimensions" ("AOCELib"))         ((width (:pointer :signed-integer)) (contractedHeight (:pointer :signed-integer)) (expandedHeight (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 6 16) 4700) width contractedHeight expandedHeight)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetTabInfo" ("AOCELib"))         ((firstTab (:pointer :signed-long)) (lastTab (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4724) firstTab lastTab)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPNewMailer" ("AOCELib"))         ((window (:pointer :grafport)) (upperLeft :point) (canContract :boolean) (initiallyExpanded :boolean) (identity :signed-long) (prepareMailerForDrawingCB :pointer) (clientData :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 12 16) 4701) window upperLeft canContract initiallyExpanded identity prepareMailerForDrawingCB clientData)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPPrepareToClose" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4743) window)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPCloseOptionsDialog" ("AOCELib"))         ((window (:pointer :grafport)) (closeOptions (:pointer :smpcloseoptions)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4744) window closeOptions)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPTagDialog" ("AOCELib"))         ((window (:pointer :grafport)) (theTag (:pointer :rstring32)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4747) window theTag)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPDisposeMailer" ("AOCELib"))         ((window (:pointer :grafport)) (closeOptions (:pointer :smpcloseoptions)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4702) window closeOptions)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPMailerEvent" ("AOCELib"))         ((event (:pointer :eventrecord)) (whatHappened (:pointer :signed-long)) (frontWindowCB :pointer) (clientData :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 8 16) 4703) event whatHappened frontWindowCB clientData)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPClearUndo" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4725) window)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPMailerEditCommand" ("AOCELib"))         ((window (:pointer :grafport)) (command :signed-integer) (whatHappened (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 5 16) 4704) window command whatHappened)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPMailerForward" ("AOCELib"))         ((window (:pointer :grafport)) (from :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4705) window from)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPMailerReply" ("AOCELib"))         ((originalLetter (:pointer :grafport)) (newLetter (:pointer :grafport)) (replyToAll :boolean) (upperLeft :point) (canContract :boolean) (initiallyExpanded :boolean) (identity :signed-long) (prepareMailerForDrawingCB :pointer) (clientData :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 15 16) 4706) originalLetter newLetter replyToAll upperLeft canContract initiallyExpanded identity prepareMailerForDrawingCB clientData)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetMailerState" ("AOCELib"))         ((window (:pointer :grafport)) (itsState (:pointer :smpmailerstate)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4707) window itsState)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPSendOptionsDialog" ("AOCELib"))         ((window (:pointer :grafport)) (documentName (:pointer (:string 255))) (nativeFormatNames (:pointer (:pointer (:string 255)))) (nameCount :signed-integer) (canSend :signed-long) (currentFormat (:pointer :smpsendformat)) (filterProc :pointer) (clientData :signed-long) (shouldSend (:pointer :smpsendformat)) (sendOptions (:pointer :smpsendoptions)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 19 16) 5000) window documentName nativeFormatNames nameCount canSend currentFormat filterProc clientData shouldSend sendOptions)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPPrepareCoverPages" ("AOCELib"))         ((window (:pointer :grafport)) (pageCount (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4708) window pageCount)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPDrawNthCoverPage" ("AOCELib"))         ((window (:pointer :grafport)) (pageNumber :signed-integer) (doneDrawingCoverPages :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4709) window pageNumber doneDrawingCoverPages)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPPrepareToChange" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4745) window)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPContentChanged" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4719) window)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPBeginSave" ("AOCELib"))         ((window (:pointer :grafport)) (diskLetter (:pointer :fsspec)) (creator :ostype) (fileType :ostype) (saveType :signed-integer) (mustAddContent (:pointer :boolean)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 11 16) 4710) window diskLetter creator fileType saveType mustAddContent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPEndSave" ("AOCELib"))         ((window (:pointer :grafport)) (okToSave :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 3 16) 4720) window okToSave)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPBeginSend" ("AOCELib"))         ((window (:pointer :grafport)) (creator :ostype) (fileType :ostype) (sendOptions (:pointer :smpsendoptions)) (mustAddContent (:pointer :boolean)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 10 16) 4711) window creator fileType sendOptions mustAddContent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPEndSend" ("AOCELib"))         ((window (:pointer :grafport)) (okToSend :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 3 16) 4721) window okToSend)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPOpenLetter" ("AOCELib"))         ((letter (:pointer :letterdescriptor)) (window (:pointer :grafport)) (upperLeft :point) (canContract :boolean) (initiallyExpanded :boolean) (prepareMailerForDrawingCB :pointer) (clientData :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 12 16) 4712) letter window upperLeft canContract initiallyExpanded prepareMailerForDrawingCB clientData)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAddMainEnclosure" ("AOCELib"))         ((window (:pointer :grafport)) (enclosure (:pointer :fsspec)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4733) window enclosure)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetMainEnclosureFSSpec" ("AOCELib"))         ((window (:pointer :grafport)) (enclosureDir (:pointer :fsspec)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4734) window enclosureDir)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAddContent" ("AOCELib"))         ((window (:pointer :grafport)) (segmentType :signed-integer) (appendFlag :boolean) (buffer :pointer) (bufferSize :signed-long) (textScrap (:pointer :stscrprec)) (startNewScript :boolean) (script :signed-integer))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 12 16) 4730) window segmentType appendFlag buffer bufferSize textScrap startNewScript script)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPReadContent" ("AOCELib"))         ((window (:pointer :grafport)) (segmentTypeMask :signed-integer) (buffer :pointer) (bufferSize :signed-long) (dataSize (:pointer :signed-long)) (textScrap (:pointer :stscrprec)) (script (:pointer :signed-integer)) (segmentType (:pointer :signed-integer)) (endOfScript (:pointer :boolean)) (endOfSegment (:pointer :boolean)) (endOfContent (:pointer :boolean)) (segmentLength (:pointer :signed-long)) (segmentID (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 25 16) 4731) window segmentTypeMask buffer bufferSize dataSize textScrap script segmentType endOfScript endOfSegment endOfContent segmentLength segmentID)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetFontNameFromLetter" ("AOCELib"))         ((window (:pointer :grafport)) (fontNum :signed-integer) (fontName (:pointer (:string 255))) (doneWithFontTable :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 6 16) 4732) window fontNum fontName doneWithFontTable)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAddBlock" ("AOCELib"))         ((window (:pointer :grafport)) (blockType (:pointer :ocecreatortype)) (append :boolean) (buffer :pointer) (bufferSize :signed-long) (mode :signed-integer) (offset :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 12 16) 4735) window blockType append buffer bufferSize mode offset)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPReadBlock" ("AOCELib"))         ((window (:pointer :grafport)) (blockType (:pointer :ocecreatortype)) (blockIndex :signed-integer) (buffer :pointer) (bufferSize :signed-long) (dataOffset :signed-long) (dataSize (:pointer :signed-long)) (endOfBlock (:pointer :boolean)) (remaining (:pointer :signed-long)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 17 16) 4736) window blockType blockIndex buffer bufferSize dataOffset dataSize endOfBlock remaining)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPEnumerateBlocks" ("AOCELib"))         ((window (:pointer :grafport)) (startIndex :signed-integer) (buffer :pointer) (bufferSize :signed-long) (dataSize (:pointer :signed-long)) (nextIndex (:pointer :signed-integer)) (more (:pointer :boolean)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 13 16) 4737) window startIndex buffer bufferSize dataSize nextIndex more)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPDrawMailer" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4713) window)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPSetSubject" ("AOCELib"))         ((window (:pointer :grafport)) (text (:pointer :rstring)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4715) window text)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPSetFromIdentity" ("AOCELib"))         ((window (:pointer :grafport)) (from :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4716) window from)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAddAddress" ("AOCELib"))         ((window (:pointer :grafport)) (addrType :signed-integer) (address (:pointer :ocepackedrecipient)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 5 16) 4717) window addrType address)); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAddAttachment" ("AOCELib"))         ((window (:pointer :grafport)) (attachment (:pointer :fsspec)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4718) window attachment)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPAttachDialog" ("AOCELib"))         ((window (:pointer :grafport)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 2 16) 4726) window)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPExpandOrContract" ("AOCELib"))         ((window (:pointer :grafport)) (expand :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 3 16) 4722) window expand)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPMoveMailer" ("AOCELib"))         ((window (:pointer :grafport)) (dh :signed-integer) (dv :signed-integer))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4714) window dh dv)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPBecomeTarget" ("AOCELib"))         ((window (:pointer :grafport)) (becomeTarget :boolean) (whichField :signed-long))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 5 16) 4723) window becomeTarget whichField)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetComponentSize" ("AOCELib"))         ((window (:pointer :grafport)) (whichMailer :signed-integer) (whichField :signed-long) (size (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 7 16) 4727) window whichMailer whichField size)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetComponentInfo" ("AOCELib"))         ((window (:pointer :grafport)) (whichMailer :signed-integer) (whichField :signed-long) (buffer :pointer))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 7 16) 4728) window whichMailer whichField buffer)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetListItemInfo" ("AOCELib"))         ((window (:pointer :grafport)) (whichMailer :signed-integer) (whichField :signed-long) (buffer :pointer) (bufferLength :signed-long) (startItem :signed-integer) (itemCount (:pointer :signed-integer)) (nextItem (:pointer :signed-integer)) (more (:pointer :boolean)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 16 16) 4729) window whichMailer whichField buffer bufferLength startItem itemCount nextItem more)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPImage" ("AOCELib"))         ((window (:pointer :grafport)) (drawImageProc :pointer) (imageRefCon :signed-long) (supportsColor :boolean))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 7 16) 4738) window drawImageProc imageRefCon supportsColor)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetNextLetter" ("AOCELib"))         ((typesList (:pointer :ostype)) (numTypes :signed-integer) (adjacentLetter (:pointer :letterdescriptor)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 5 16) 4742) typesList numTypes adjacentLetter)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-longword-in-d0(deftrap ("_SMPGetLetterInfo" ("AOCELib"))         ((mailboxSpec (:pointer :letterspec)) (info (:pointer :smpletterinfo)))   (:stack :signed-integer)   (:stack-trap #xAA5D :d0 (+ (ash 4 16) 4746) mailboxSpec info)); $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := OCEStandardMailIncludes; $ENDC                                         ; __OCESTANDARDMAIL__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'OCEStandardMail)