(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:GXLayout.p"; at Tuesday June 6,1995 2:11:23 pm.; ;  	File:		GXLayout.p;  ;  	Contains:	QuickDraw GX layout routine interfaces.;  ;  	Version:	Technology:	Quickdraw GX 1.1;  				Package:	Universal Interfaces 2.1§1 in ÒMPW PrereleaseÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Modification History;;;;;; 04/17/97 bill  patches from Peter Bengston;;;#|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __GXLAYOUT__; $SETC __GXLAYOUT__ := 1; $I+; $SETC GXLayoutIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __CONDITIONALMACROS__|#(require-interface 'ConditionalMacros)#|                                              ; $I ConditionalMacros.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __GXTYPES__|#(require-interface 'GXTypes)#|                                              ; $I GXTypes.p |#                                             ; $ENDC; 	Types.p														; 	MixedMode.p													; 	GXMath.p													; 		FixMath.p												; $PUSH; $ALIGN MAC68K; $LibExport+; $SETC layoutRoutinesIncludes := 1(deftrap-inline ("_GXNewLayout" ("QuickDrawGXLib"))  ((textruncount :signed-long)   (textrunlengths (:pointer :signed-integer)) (text :pointer)   (styleruncount :signed-long)   (stylerunlengths (:pointer :signed-integer)) (styles :pointer)   (levelruncount :signed-long)   (levelrunlengths (:pointer :signed-integer))   (levels (:pointer :signed-integer))   (layoutoptions (:pointer :gxlayoutoptions))   (position (:pointer :gxpoint)))  :pointer  (:c #x303C #x0 #xA832))(deftrap-inline ("_GXGetLayout" ("QuickDrawGXLib"))  ((layout :pointer) (text :pointer)   (styleruncount (:pointer :signed-long))   (stylerunlengths (:pointer :signed-integer)) (styles :pointer)   (levelruncount (:pointer :signed-long))   (levelrunlengths (:pointer :signed-integer))   (levels (:pointer :signed-integer))   (layoutoptions (:pointer :gxlayoutoptions))   (position (:pointer :gxpoint)))  :signed-long  (:c #x303C #x1 #xA832))(deftrap-inline ("_GXSetLayout" ("QuickDrawGXLib"))  ((layout :pointer) (textruncount :signed-long)   (textrunlengths (:pointer :signed-integer)) (text :pointer)   (styleruncount :signed-long)   (stylerunlengths (:pointer :signed-integer)) (styles :pointer)   (levelruncount :signed-long)   (levelrunlengths (:pointer :signed-integer))   (levels (:pointer :signed-integer))   (layoutoptions (:pointer :gxlayoutoptions))   (position (:pointer :gxpoint)))  nil  (:c #x303C #x2 #xA832))(deftrap-inline ("_GXDrawLayout" ("QuickDrawGXLib"))  ((textruncount :signed-long)   (textrunlengths :signed-integer) (text :pointer)   (styleruncount :signed-long)   (stylerunlengths :signed-integer) (styles :pointer)   (levelruncount :signed-long)   (levelrunlengths :signed-integer)   (levels :signed-integer)   (layoutoptions (:pointer :gxlayoutoptions))   (position (:pointer :gxpoint)))  nil  (:c #x303C #x3 #xA832))(deftrap-inline ("_GXSetLayoutParts" ("QuickDrawGXLib"))  ((layout :pointer) (oldstartoffset :signed-long)   (oldendoffset :signed-long)   (newtextruncount :signed-long)   (newtextrunlengths (:pointer :signed-integer))   (newtext :pointer)   (newstyleruncount :signed-long)   (newstylerunlengths (:pointer :signed-integer))   (newstyles :pointer)    (newlevelruncount :signed-long)   (newlevelrunlengths (:pointer :signed-integer))   (newlevels (:pointer :signed-integer)))  nil  (:c #x303C #x4 #xA832))(deftrap-inline ("_GXSetLayoutShapeParts" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (endoffset :signed-long) (insert :pointer))  nil  (:c #x303C #x5 #xA832))(deftrap-inline ("_GXGetLayoutParts" ("QuickDrawGXLib"))  ((layout :pointer)    (startoffset :signed-long)   (endoffset :signed-long)    (text :pointer)   (styleruncount (:pointer :signed-long))   (stylerunlengths (:pointer :signed-integer))    (styles :pointer)   (levelruncount (:pointer :signed-long))   (levelrunlengths (:pointer :signed-integer))   (levels (:pointer :signed-integer)))  :signed-long  (:c #x303C #x6 #xA832))(deftrap-inline ("_GXGetLayoutShapeParts" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (endoffset :signed-long) (dest :pointer))  :pointer  (:c #x303C #x7 #xA832))(deftrap-inline ("_GXGetLayoutGlyphs" ("QuickDrawGXLib"))  ((layout :pointer) (glyphs (:pointer :signed-integer))   (positions (:pointer :gxpoint)) (advance :signed-long)   (tangents (:pointer :gxpoint))   (runcount (:pointer :signed-long))   (styleruns :signed-integer) (glyphstyles :pointer))  :signed-long  (:c #x303C #x8 #xA832));; patch arg 3 :gxpoint -> (:pointer :gxpoint);; patch arg 5 :gxpoint -> (:pointer :gxpoint)(deftrap-inline ("_GXHitTestLayout" ("QuickDrawGXLib"))  ((layout :pointer) (hitdown (:pointer :gxpoint))   (highlighttype :signed-long)   (hitinfo (:pointer :gxlayouthitinfo))   (hittrackingarea :pointer))  :signed-long  (:c #x303C #x9 #xA832))(deftrap-inline ("_GXGetLayoutHighlight" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (endoffset :signed-long) (highlighttype :signed-long)   (highlight :pointer))  :pointer  (:c #x303C #xA #xA832))(deftrap-inline ("_GXGetLayoutVisualHighlight" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (startleadingedge :signed-long) (endoffset :signed-long)   (endleadingedge :signed-long)   (highlighttype :signed-long) (highlight :pointer))  :pointer  (:c #x303C #xB #xA832))(deftrap-inline ("_GXGetLayoutCaret" ("QuickDrawGXLib"))  ((layout :pointer) (offset :signed-long)   (highlighttype :signed-long) (carettype :signed-long)   (caret :pointer))  :pointer  (:c #x303C #xC #xA832))(deftrap-inline ("_GXGetLayoutBreakOffset" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (linewidth :signed-long) (hyphenationcount :signed-long)   (hyphenationpoints :pointer)   (startisstaked (:pointer :boolean))   (priorstake (:pointer :signed-long))   (nextstake (:pointer :signed-long)))  :signed-long  (:c #x303C #xD #xA832))(deftrap-inline ("_GXGetLayoutRangeWidth" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (endoffset :signed-long) (supplementarytext :pointer))  :signed-long  (:c #x303C #xE #xA832))(deftrap-inline ("_GXNewLayoutFromRange" ("QuickDrawGXLib"))  ((layout :pointer) (startoffset :signed-long)   (endoffset :signed-long)   (layoutoptions (:pointer :gxlayoutoptions))   (supplementarytext :pointer))  :pointer  (:c #x303C #xF #xA832))(deftrap-inline ("_GXGetCaretAngleArea" ("QuickDrawGXLib"))  ((layout :pointer) (hitpoint (:pointer :gxpoint))   (highlighttype :signed-long) (caretarea :pointer)   (returnedrise (:pointer :signed-integer))   (returnedrun (:pointer :signed-integer)))  :pointer  (:c #x303C #x10 #xA832))(deftrap-inline ("_GXGetStyleBaselineDeltas" ("QuickDrawGXLib"))  ((basestyle :pointer) (basetype :signed-long)   (returneddeltas (:pointer :gxbaselinedeltas)))  nil  (:c #x303C #x11 #xA832))(deftrap-inline ("_GXGetRightVisualOffset" ("QuickDrawGXLib"))  ((layout :pointer) (currentoffset :signed-long))  :signed-long  (:c #x303C #x12 #xA832))(deftrap-inline ("_GXGetLeftVisualOffset" ("QuickDrawGXLib"))  ((layout :pointer) (currentoffset :signed-long))  :signed-long  (:c #x303C #x13 #xA832))(deftrap-inline ("_GXGetCompoundCharacterLimits" ("QuickDrawGXLib"))  ((layout :pointer) (trial :signed-long)   (minoffset (:pointer :signed-long))   (maxoffset (:pointer :signed-long))   (onboundary (:pointer :boolean)))  nil  (:c #x303C #x14 #xA832))(deftrap-inline ("_GXGetOffsetGlyphs" ("QuickDrawGXLib"))  ((layout :pointer) (trial :signed-long)   (leadingedge :signed-long)   (offsetstate (:pointer :signed-integer))   (firstglyph (:pointer :signed-integer))   (secondglyph (:pointer :signed-integer)))  nil  (:c #x303C #x15 #xA832))(deftrap-inline ("_GXGetGlyphOffset" ("QuickDrawGXLib"))  ((layout :pointer) (trial :signed-long)   (onlefttop :signed-long)   (offset (:pointer :signed-long))   (leadingedge (:pointer :boolean))   (wasrealcharacter (:pointer :boolean)))  nil  (:c #x303C #x16 #xA832))(deftrap-inline ("_GXGetLayoutSpan" ("QuickDrawGXLib"))  ((layout :pointer) (lineascent (:pointer :signed-long))   (linedescent (:pointer :signed-long)))  nil  (:c #x303C #x17 #xA832))(deftrap-inline ("_GXSetLayoutSpan" ("QuickDrawGXLib"))  ((layout :pointer) (lineascent :signed-long)   (linedescent :signed-long))  nil  (:c #x303C #x18 #xA832))(deftrap-inline ("_GXGetLayoutJustificationGap" ("QuickDrawGXLib"))  ((layout :pointer))  :signed-long  (:c #x303C #x279 #xA832))(deftrap-inline ("_GXSetStyleRunControls" ("QuickDrawGXLib"))  ((target :pointer)   (runcontrols (:pointer :gxruncontrols)))  nil  (:c #x303C #x19 #xA832))(deftrap-inline ("_GXSetStyleRunPriorityJustOverride" ("QuickDrawGXLib"))  ((target :pointer)   (priorityjustificationoverride    (:pointer :gxpriorityjustificationoverride)))  nil  (:c #x303C #x1A #xA832))(deftrap-inline ("_GXSetStyleRunGlyphJustOverrides" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (glyphjustificationoverrides    (:pointer :gxglyphjustificationoverride)))  nil  (:c #x303C #x1B #xA832));; patch arg 3 :gxglyphjustificationoverride -> (:pointer :gxglyphjustificationoverride)(deftrap-inline ("_GXSetStyleRunGlyphSubstitutions" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (glyphsubstitutions :gxglyphsubstitution))  nil  (:c #x303C #x1C #xA832))(deftrap-inline ("_GXSetStyleRunFeatures" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (runfeatures (:pointer :gxrunfeature)))  nil  (:c #x303C #x1D #xA832));; patch arg 2 :gxrunfeature -> (:pointer :gxrunfeature);; -- JT(deftrap-inline ("_GXSetStyleRunKerningAdjustments" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (kerningadjustments (:pointer :gxkerningadjustment)))  nil  (:c #x303C #x1E #xA832));; patch arg 3 :gxkerningadjustment -> (:pointer :gxkerningadjustment)(deftrap-inline ("_GXSetShapeRunControls" ("QuickDrawGXLib"))  ((target :pointer)   (runcontrols (:pointer :gxruncontrols)))  nil  (:c #x303C #x1F #xA832))(deftrap-inline ("_GXSetShapeRunPriorityJustOverride" ("QuickDrawGXLib"))  ((target :pointer)   (priorityjustificationoverride    (:pointer :gxpriorityjustificationoverride)))  nil  (:c #x303C #x20 #xA832))(deftrap-inline ("_GXSetShapeRunGlyphJustOverrides" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (glyphjustificationoverrides    (:pointer :gxglyphjustificationoverride)))  nil  (:c #x303C #x21 #xA832));; patch arg 3 :gxglyphjustificationoverride -> (:pointer :gxglyphjustificationoverride)(deftrap-inline ("_GXSetShapeRunGlyphSubstitutions" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (glyphsubstitutions :gxglyphsubstitution))  nil  (:c #x303C #x22 #xA832))(deftrap-inline ("_GXSetShapeRunFeatures" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (runfeatures :gxrunfeature))  nil  (:c #x303C #x23 #xA832))(deftrap-inline ("_GXSetShapeRunKerningAdjustments" ("QuickDrawGXLib"))  ((target :pointer) (count :signed-long)   (kerningadjustments (:pointer :gxkerningadjustment)))  nil  (:c #x303C #x24 #xA832));; patch arg 3 :gxkerningadjustment -> (:pointer :gxkerningadjustment)(deftrap-inline ("_GXGetStyleRunControls" ("QuickDrawGXLib"))  ((source :pointer)   (runcontrols (:pointer :gxruncontrols)))  :signed-long  (:c #x303C #x25 #xA832))(deftrap-inline ("_GXGetStyleRunPriorityJustOverride" ("QuickDrawGXLib"))  ((source :pointer)   (priorityjustificationoverride    (:pointer :gxpriorityjustificationoverride)))  :signed-long  (:c #x303C #x26 #xA832))(deftrap-inline ("_GXGetStyleRunGlyphJustOverrides" ("QuickDrawGXLib"))  ((source :pointer)   (glyphjustificationoverrides    (:pointer :gxglyphjustificationoverride)))  :signed-long  (:c #x303C #x27 #xA832));; patch arg 2 :gxglyphjustificationoverride -> (:pointer :gxglyphjustificationoverride)(deftrap-inline ("_GXGetStyleRunGlyphSubstitutions" ("QuickDrawGXLib"))  ((source :pointer)   (glyphsubstitutions :gxglyphsubstitution))  :signed-long  (:c #x303C #x28 #xA832))(deftrap-inline ("_GXGetStyleRunFeatures" ("QuickDrawGXLib"))  ((source :pointer) (runfeatures (:pointer :gxrunfeature)))  :signed-long  (:c #x303C #x29 #xA832));; patch arg 2 :gxrunfeature -> (:pointer :gxrunfeature);; -- JT(deftrap-inline ("_GXGetStyleRunKerningAdjustments" ("QuickDrawGXLib"))  ((source :pointer)   (kerningadjustments (:pointer :gxkerningadjustment)))  :signed-long  (:c #x303C #x2A #xA832));; patch arg 2 :gxkerningadjustment -> (:pointer :gxkerningadjustment)(deftrap-inline ("_GXGetShapeRunControls" ("QuickDrawGXLib"))  ((source :pointer)   (runcontrols (:pointer :gxruncontrols)))  :signed-long  (:c #x303C #x2B #xA832))(deftrap-inline ("_GXGetShapeRunPriorityJustOverride" ("QuickDrawGXLib"))  ((source :pointer)   (priorityjustificationoverride    (:pointer :gxpriorityjustificationoverride)))  :signed-long  (:c #x303C #x2C #xA832))(deftrap-inline ("_GXGetShapeRunGlyphJustOverrides" ("QuickDrawGXLib"))  ((source :pointer)   (glyphjustificationoverrides    (:pointer :gxglyphjustificationoverride)))  :signed-long  (:c #x303C #x2D #xA832));; patch arg 2 :gxglyphjustificationoverride -> (:pointer :gxglyphjustificationoverride)(deftrap-inline ("_GXGetShapeRunGlyphSubstitutions" ("QuickDrawGXLib"))  ((source :pointer)   (glyphsubstitutions :gxglyphsubstitution))  :signed-long  (:c #x303C #x2E #xA832))(deftrap-inline ("_GXGetShapeRunFeatures" ("QuickDrawGXLib"))  ((source :pointer) (runfeatures :gxrunfeature))  :signed-long  (:c #x303C #x2F #xA832))(deftrap-inline ("_GXGetShapeRunKerningAdjustments" ("QuickDrawGXLib"))  ((source :pointer)   (kerningadjustments (:pointer :gxkerningadjustment)))  :signed-long  (:c #x303C #x30 #xA832));; patch arg 2 :gxkerningadjustment -> (:pointer :gxkerningadjustment)(provide-interface 'gxlayout)