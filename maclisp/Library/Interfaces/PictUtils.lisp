(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:PictUtils.p"; at Tuesday June 6,1995 2:16:38 pm.; ;  	File:		PictUtils.p;  ;  	Contains:	Picture Utilities Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __PICTUTILS__; $SETC __PICTUTILS__ := 1; $I+; $SETC PictUtilsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __WINDOWS__|#(require-interface 'Windows)#|                                              ; $I Windows.p |#                                             ; $ENDC; 	Memory.p													; 		MixedMode.p												; 	Quickdraw.p													; 		QuickdrawText.p											; 	Events.p													; 		OSUtils.p												; 	Controls.p													; 		Menus.p													#|                                              ; $IFC UNDEFINED __PALETTES__|#(require-interface 'Palettes)#|                                              ; $I Palettes.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $returnColorTable #x1)(defconstant $returnPalette #x2)(defconstant $recordComments #x4)(defconstant $recordFontInfo #x8)(defconstant $suppressBlackAndWhite #x10);  color pick methods (defconstant $systemMethod 0)                   ;  system color pick method (defconstant $popularMethod 1)                  ;  method that chooses the most popular set of colors (defconstant $medianMethod 2)                   ;  method that chooses a good average mix of colors ;  color bank types (defconstant $ColorBankIsCustom -1)(defconstant $ColorBankIsExactAnd555 0)(defconstant $ColorBankIs555 1)(def-mactype :pictinfoid (find-mactype ':signed-long))(defrecord CommentSpec    (count :signed-integer)                      ;  number of occurrances of this comment ID    (ID :signed-integer)                         ;  ID for the comment in the picture    )(def-mactype :commentspecptr (find-mactype '(:pointer :commentspec)))(def-mactype :commentspechandle (find-mactype '(:handle :commentspec)))(defrecord FontSpec    (pictFontID :signed-integer)                 ;  ID of the font in the picture    (sysFontID :signed-integer)                  ;  ID of the same font in the current system file    (size (:array :signed-long 4))               ;  bit array of all the sizes found (1..127) (bit 0 means > 127)    (style :signed-integer)                      ;  combined style of all occurrances of the font    (nameOffset :signed-long)                    ;  offset into the fontNamesHdl handle for the font’s name    )(def-mactype :fontspecptr (find-mactype '(:pointer :fontspec)))(def-mactype :fontspechandle (find-mactype '(:handle :fontspec)))(defrecord PictInfo    (version :signed-integer)                    ;  this is always zero, for now    (uniqueColors :signed-long)                  ;  the number of actual colors in the picture(s)/pixmap(s)    (thePalette (:handle :palette))              ;  handle to the palette information    (theColorTable (:handle :colortable))        ;  handle to the color table    (hRes :signed-long)                          ;  maximum horizontal resolution for all the pixmaps    (vRes :signed-long)                          ;  maximum vertical resolution for all the pixmaps    (depth :signed-integer)                      ;  maximum depth for all the pixmaps (in the picture)    (sourceRect :rect)                           ;  the picture frame rectangle (this contains the entire picture)    (textCount :signed-long)                     ;  total number of text strings in the picture    (lineCount :signed-long)                     ;  total number of lines in the picture    (rectCount :signed-long)                     ;  total number of rectangles in the picture    (rRectCount :signed-long)                    ;  total number of round rectangles in the picture    (ovalCount :signed-long)                     ;  total number of ovals in the picture    (arcCount :signed-long)                      ;  total number of arcs in the picture    (polyCount :signed-long)                     ;  total number of polygons in the picture    (regionCount :signed-long)                   ;  total number of regions in the picture    (bitMapCount :signed-long)                   ;  total number of bitmaps in the picture    (pixMapCount :signed-long)                   ;  total number of pixmaps in the picture    (commentCount :signed-long)                  ;  total number of comments in the picture    (uniqueComments :signed-long)                ;  the number of unique comments in the picture    (commentHandle (:handle :commentspec))       ;  handle to all the comment information    (uniqueFonts :signed-long)                   ;  the number of unique fonts in the picture    (fontHandle (:handle :fontspec))             ;  handle to the FontSpec information    (fontNamesHandle :handle)                    ;  handle to the font names    (reserved1 :signed-long)   (reserved2 :signed-long)   )(def-mactype :pictinfoptr (find-mactype '(:pointer :pictinfo)))(def-mactype :pictinfohandle (find-mactype '(:handle :pictinfo))); $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_GetPictInfo" ((thePictHandle (:handle :picture)) (thePictInfo (:pointer :pictinfo)) (verb :signed-integer) (colorsRequested :signed-integer) (colorPickMethod :signed-integer) (version :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 2048 thePictHandle thePictInfo verb colorsRequested colorPickMethod version)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_GetPixMapInfo" ((thePixMapHandle (:handle :pixmap)) (thePictInfo (:pointer :pictinfo)) (verb :signed-integer) (colorsRequested :signed-integer) (colorPickMethod :signed-integer) (version :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 2049 thePixMapHandle thePictInfo verb colorsRequested colorPickMethod version)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_NewPictInfo" ((thePictInfoID (:pointer :signed-long)) (verb :signed-integer) (colorsRequested :signed-integer) (colorPickMethod :signed-integer) (version :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 1538 thePictInfoID verb colorsRequested colorPickMethod version)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_RecordPictInfo" ((thePictInfoID :signed-long) (thePictHandle (:handle :picture)))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 1027 thePictInfoID thePictHandle)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_RecordPixMapInfo" ((thePictInfoID :signed-long) (thePixMapHandle (:handle :pixmap)))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 1028 thePictInfoID thePixMapHandle)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_RetrievePictInfo" ((thePictInfoID :signed-long) (thePictInfo (:pointer :pictinfo)) (colorsRequested :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 1285 thePictInfoID thePictInfo colorsRequested)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_DisposePictInfo" ((thePictInfoID :signed-long))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 518 thePictInfoID)); $ENDC; $IFC OLDROUTINENAMES ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap ("_DisposPictInfo" "DisposePictInfo")         ((thePictInfoID :signed-long))   (:stack :signed-integer)   (:stack-trap #xA831 :d0 518 thePictInfoID)); $ENDC; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := PictUtilsIncludes; $ENDC                                         ; __PICTUTILS__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'PictUtils)