(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Serial.p"; at Tuesday June 6,1995 2:20:31 pm.; ;  	File:		Serial.p;  ;  	Contains:	Serial port Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __SERIAL__; $SETC __SERIAL__ := 1; $I+; $SETC SerialIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $baud300 380)(defconstant $baud600 189)(defconstant $baud1200 94)(defconstant $baud1800 62)(defconstant $baud2400 46)(defconstant $baud3600 30)(defconstant $baud4800 22)(defconstant $baud7200 14)(defconstant $baud9600 10)(defconstant $baud19200 4)(defconstant $baud38400 1)(defconstant $baud57600 0)(defconstant $stop10 16384)(defconstant $stop15 -32768)(defconstant $stop20 -16384)(defconstant $noParity 0)(defconstant $oddParity 4096)(defconstant $evenParity 12288)(defconstant $data5 0)(defconstant $data6 2048)(defconstant $data7 1024)(defconstant $data8 3072)(defconstant $ctsEvent 32)(defconstant $breakEvent 128)(defconstant $xOffWasSent 128)(defconstant $dtrNegated 64)(defconstant $ainRefNum -6)                     ; serial port A input(defconstant $aoutRefNum -7)                    ; serial port A output(defconstant $binRefNum -8)                     ; serial port B input(defconstant $boutRefNum -9)                    ; serial port B output(defconstant $swOverrunErr 1)                   ; serial driver error masks(defconstant $breakErr 8)                       ; serial driver error masks(defconstant $parityErr 16)                     ; serial driver error masks(defconstant $hwOverrunErr 32)                  ; serial driver error masks(defconstant $framingErr 64)                    ; serial driver error masks(defconstant $serdOptionClockExternal #x40)     ; option bit used with Control code 16(defconstant $serdOptionPreserveDTR #x80)       ; option bit used with Control code 16(defconstant $sPortA 0)(defconstant $sPortB 1)(def-mactype :sportsel (find-mactype ':signed-byte));  csCodes for serial driver Control routines (defconstant $serdReset 8)(defconstant $serdSetBuf 9)(defconstant $serdHShake 10)(defconstant $serdClrBrk 11)(defconstant $serdSetBrk 12)(defconstant $serdSetBaud 13)(defconstant $serdHShakeDTR 14)(defconstant $serdSetMIDI 15)(defconstant $serdSetMisc 16)(defconstant $serdSetDTR 17)(defconstant $serdClrDTR 18)(defconstant $serdSetPEChar 19)(defconstant $serdSetPECharAlternate 20)(defconstant $serdSetXOff 21)(defconstant $serdClrXOff 22)(defconstant $serdSendXOnConditional 23)(defconstant $serdSendXOn 24)(defconstant $serdSendXOffConditional 25)(defconstant $serdSendXOff 26)(defconstant $serdChannelReset 27)(defconstant $serdSet230KBaud "JF")             ;  set 230K baud data rate (defconstant $serdSetPollWrite "jf")            ;  disable interrupt-driven transmit (defconstant $serdSetFlushCount "FC");  csCodes for serial driver Status routines (defconstant $serdGetBuf 2)(defconstant $serdStatus 8)(defconstant $serdGetVers 9)(defconstant $serdGetVersSys #x8000)(defrecord SerShk    (fXOn :unsigned-byte)                        ; XOn flow control enabled flag   (fCTS :unsigned-byte)                        ; CTS flow control enabled flag   (xOn :character)                             ; XOn character   (xOff :character)                            ; XOff character   (errs :unsigned-byte)                        ; errors mask bits   (evts :unsigned-byte)                        ; event enable mask bits   (fInX :unsigned-byte)                        ; Input flow control enabled flag   (fDTR :unsigned-byte)                        ; DTR input flow control flag   )(defrecord SerStaRec    (cumErrs :unsigned-byte)   (xOffSent :unsigned-byte)   (rdPend :unsigned-byte)   (wrPend :unsigned-byte)   (ctsHold :unsigned-byte)   (xOffHold :unsigned-byte)   );; Warning: No calling method defined for this trap(deftrap-inline "_SerReset" ((refNum :signed-integer) (serConfig :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_SerSetBuf" ((refNum :signed-integer) (serBPtr :pointer) (serBLen :signed-integer))   :signed-integer   () )                                         ; CONST;; Warning: No calling method defined for this trap(deftrap-inline "_SerHShake" ((refNum :signed-integer) (flags (:pointer :sershk)))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_SerSetBrk" ((refNum :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_SerClrBrk" ((refNum :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline "_SerGetBuf" ((refNum :signed-integer) (count (:pointer :signed-long)))   :signed-integer   () )                                         ; $ALIGN RESET; $POP; $SETC UsingIncludes := SerialIncludes; $ENDC; __SERIAL__; $IFC NOT UsingIncludes;; Warning: No calling method defined for this trap(deftrap-inline "_SerStatus" ((refNum :signed-integer) (serSta (:pointer :serstarec)))   :signed-integer   () ); $ENDC(provide-interface 'Serial)