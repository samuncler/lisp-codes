(in-package :TRAPS); Generated from #P"Cohones:Lisp:Projects:PInterface Translator:Source interfaces:Quicktime 2.5 PInterfaces:Components.p"; at Thursday May 23,1996 2:20:06 pm.; ;  	File:		Components.p;  ;  	Contains:	QuickTime interfaces;  ;  	Version:	Technology:	;  				Release:	QuickTime 2.5 interfaces to use with ETO #20;  ;  	Copyright:	© 1984-1996 by Apple Computer, Inc.  All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, send the file and version;  				information (from above) and the problem description to:;  ;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED __COMPONENTS__; $SETC __COMPONENTS__ := 1; $I+; $SETC ComponentsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __ERRORS__|#(require-interface 'Errors)#|                                              ; $I Errors.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MEMORY__|#(require-interface 'Memory)#|                                              ; $I Memory.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MIXEDMODE__|#(require-interface 'MixedMode)#|                                              ; $I MixedMode.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $kAppleManufacturer :|appl|)       ;   Apple supplied components  (defconstant $kComponentResourceType :|thng|)   ;   a components resource type  (defconstant $kAnyComponentType 0)(defconstant $kAnyComponentSubType 0)(defconstant $kAnyComponentManufacturer 0)(defconstant $kAnyComponentFlagsMask 0)(defconstant $cmpWantsRegisterMessage #x80000000)(defconstant $kComponentOpenSelect -1)          ;   ComponentInstance for this open  (defconstant $kComponentCloseSelect -2)         ;   ComponentInstance for this close  (defconstant $kComponentCanDoSelect -3)         ;   selector # being queried  (defconstant $kComponentVersionSelect -4)       ;   no params  (defconstant $kComponentRegisterSelect -5)      ;   no params  (defconstant $kComponentTargetSelect -6)        ;   ComponentInstance for top of call chain  (defconstant $kComponentUnregisterSelect -7)    ;   no params  (defconstant $kComponentGetMPWorkFunctionSelect -8);   some params  ;   Component Resource Extension flags  (defconstant $componentDoAutoVersion #x1)(defconstant $componentWantsUnregister #x2)(defconstant $componentAutoVersionIncludeFlags #x4)(defconstant $componentHasMultiplePlatforms #x8);   Set Default Component flags  (defconstant $defaultComponentIdentical 0)(defconstant $defaultComponentAnyFlags 1)(defconstant $defaultComponentAnyManufacturer 2)(defconstant $defaultComponentAnySubType 4)(defconstant $defaultComponentAnyFlagsAnyManufacturer 3)(defconstant $defaultComponentAnyFlagsAnyManufacturerAnySubType 7);   RegisterComponentResource flags  (defconstant $registerComponentGlobal 1)(defconstant $registerComponentNoDuplicates 2)(defconstant $registerComponentAfterExisting 4)(def-mactype :componentdescriptionptr (find-mactype '(:pointer :componentdescription)))(defrecord ComponentDescription    (componentType :ostype)                      ;   A unique 4-byte code indentifying the command set     (componentSubType :ostype)                   ;   Particular flavor of this instance     (componentManufacturer :ostype)              ;   Vendor indentification     ;;Changing field componentflags from signed-long to unsigned-long to match C header (pretty-sure)   (componentFlags :unsigned-long)              ;   8 each for Component,Type,SubType,Manuf/revision     ;;Changing field componentflagsmask from signed-long to unsigned-long to match C header (pretty-sure)   (componentFlagsMask :unsigned-long)          ;   Mask for specifying which flags to consider in search, zero during registration     )(def-mactype :resourcespecptr (find-mactype '(:pointer :resourcespec)))(defrecord ResourceSpec    (resType :ostype)                            ;   4-byte code 	    (resID :signed-integer)                      ;    			    )(def-mactype :componentresourceptr (find-mactype '(:pointer :componentresource)))(defrecord (ComponentResource :handle)    (cd :componentdescription)                   ;   Registration parameters     (component :resourcespec)                    ;   resource where Component code is found     (componentName :resourcespec)                ;   name string resource     (componentInfo :resourcespec)                ;   info string resource     (componentIcon :resourcespec)                ;   icon resource     )(def-mactype :componentresourcehandle (find-mactype '(:handle :componentresource)))(def-mactype :componentplatforminfoptr (find-mactype '(:pointer :componentplatforminfo)))(defrecord ComponentPlatformInfo    ;;Changing field componentflags from signed-long to unsigned-long to match C header (pretty-sure)   (componentFlags :unsigned-long)              ;   flags of Component     (component :resourcespec)                    ;   resource where Component code is found     (platformType :signed-integer)               ;   gestaltSysArchitecture result     )(def-mactype :componentresourceextensionptr (find-mactype '(:pointer :componentresourceextension)))(defrecord ComponentResourceExtension    (componentVersion :signed-long)              ;   version of Component     (componentRegisterFlags :signed-long)        ;   flags for registration     (componentIconFamily :signed-integer)        ;   resource id of Icon Family     )(def-mactype :componentplatforminfoarrayptr (find-mactype '(:pointer :componentplatforminfoarray)))(defrecord ComponentPlatformInfoArray    (count :signed-long)   (platformArray (:array :componentplatforminfo 1))   )(def-mactype :extcomponentresourceptr (find-mactype '(:pointer :extcomponentresource)))(defrecord ExtComponentResource    (cd :componentdescription)                   ;   registration parameters     (component :resourcespec)                    ;   resource where Component code is found     (componentName :resourcespec)                ;   name string resource     (componentInfo :resourcespec)                ;   info string resource     (componentIcon :resourcespec)                ;   icon resource     (componentVersion :signed-long)              ;   version of Component     (componentRegisterFlags :signed-long)        ;   flags for registration     (componentIconFamily :signed-integer)        ;   resource id of Icon Family     (count :signed-long)                         ;   elements in platformArray     (platformArray (:array :componentplatforminfo 1))   );    Structure received by Component:		 (def-mactype :componentparametersptr (find-mactype '(:pointer :componentparameters)))(defrecord ComponentParameters    (flags :unsigned-byte)                       ;   call modifiers: sync/async, deferred, immed, etc     (paramSize :unsigned-byte)                   ;   size in bytes of actual parameters passed to this call     (what :signed-integer)                       ;   routine selector, negative for Component management calls     (params (:array :signed-long 1))             ;   actual parameters for the indicated routine     )(def-mactype :componentrecordptr (find-mactype '(:pointer :componentrecord)))(defrecord ComponentRecord    (data (:array :signed-long 1))   )(def-mactype :component (find-mactype '(:pointer :componentrecord)))(def-mactype :componentinstancerecordptr (find-mactype '(:pointer :componentinstancerecord)))(defrecord ComponentInstanceRecord    (data (:array :signed-long 1))   )(def-mactype :componentinstance (find-mactype '(:pointer :componentinstancerecord)))(def-mactype :registeredcomponentrecordptr (find-mactype '(:pointer :registeredcomponentrecord)))(defrecord RegisteredComponentRecord    (data (:array :signed-long 1))   )(def-mactype :registeredcomponentptr (find-mactype '(:pointer :registeredcomponentrecord)))(def-mactype :registeredcomponentinstancerecordptr (find-mactype '(:pointer :registeredcomponentinstancerecord)))(defrecord RegisteredComponentInstanceRecord    (data (:array :signed-long 1))   )(def-mactype :registeredcomponentinstanceptr (find-mactype '(:pointer :registeredcomponentinstancerecord)))(def-mactype :componentresult (find-mactype ':signed-long))(defconstant $mpWorkFlagDoWork #x1)(defconstant $mpWorkFlagDoCompletion #x2)(defconstant $mpWorkFlagCopyWorkBlock #x4)(defconstant $mpWorkFlagDontBlock #x8)(defconstant $mpWorkFlagGetProcessorCount #x10)(defconstant $mpWorkFlagGetIsRunning #x40)(def-mactype :componentmpworkfunctionheaderrecordptr (find-mactype '(:pointer :componentmpworkfunctionheaderrecord)))(defrecord ComponentMPWorkFunctionHeaderRecord    (headerSize :unsigned-long)   (recordSize :unsigned-long)   (workFlags :unsigned-long)   (processorCount :unsigned-integer)   (unused :signed-byte)   (isRunning :signed-byte)   )(def-mactype :componentmpworkfunctionprocptr (find-mactype ':pointer));  FUNCTION ComponentMPWorkFunction(globalRefCon: UNIV Ptr; header: ComponentMPWorkFunctionHeaderRecordPtr): ComponentResult; (def-mactype :componentroutineprocptr (find-mactype ':pointer));  FUNCTION ComponentRoutine(VAR cp: ComponentParameters; componentStorage: Handle): ComponentResult; (def-mactype :componentmpworkfunctionupp (find-mactype ':pointer))(def-mactype :componentroutineupp (find-mactype ':pointer)); ; 	The parameter list for each ComponentFunction is unique. It is ; 	therefore up to users to create the appropriate procInfo for their ; 	own ComponentFunctions where necessary.; (def-mactype :componentfunctionupp (find-mactype ':pointer)); ; *******************************************************; *														*; *  				APPLICATION LEVEL CALLS					*; *														*; *******************************************************; ; ; *******************************************************; * Component Database Add, Delete, and Query Routines ; *******************************************************; ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_RegisterComponent" ((cd (:pointer :componentdescription)) (componentEntryPoint :pointer) (global :signed-integer) (componentName :handle) (componentInfo :handle) (componentIcon :handle))   (:stack (:pointer :componentrecord))   (:stack-trap #xA82A :d0 1 cd componentEntryPoint global componentName componentInfo componentIcon)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_RegisterComponentResource" ((cr (:handle :componentresource)) (global :signed-integer))   (:stack (:pointer :componentrecord))   (:stack-trap #xA82A :d0 18 cr global)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_UnregisterComponent" ((aComponent (:pointer :componentrecord)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 2 aComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_FindNextComponent" ((aComponent (:pointer :componentrecord)) (looking (:pointer :componentdescription)))   (:stack (:pointer :componentrecord))   (:stack-trap #xA82A :d0 4 aComponent looking)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CountComponents" ((looking (:pointer :componentdescription)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 3 looking)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentInfo" ((aComponent (:pointer :componentrecord)) (cd (:pointer :componentdescription)) (componentName :handle) (componentInfo :handle) (componentIcon :handle))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 5 aComponent cd componentName componentInfo componentIcon)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentListModSeed" ()   (:stack :signed-long)   (:stack-trap #xA82A :d0 6)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentTypeModSeed" ((componentType :ostype))   (:stack :signed-long)   (:stack-trap #xA82A :d0 44 componentType)); $ENDC; ; *******************************************************; * Component Instance Allocation and dispatch routines ; *******************************************************; ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenAComponent" ((aComponent (:pointer :componentrecord)) (ci (:pointer (:pointer :componentinstancerecord))))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 45 aComponent ci)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenComponent" ((aComponent (:pointer :componentrecord)))   (:stack (:pointer :componentinstancerecord))   (:stack-trap #xA82A :d0 7 aComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CloseComponent" ((aComponentInstance (:pointer :componentinstancerecord)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 8 aComponentInstance)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentInstanceError" ((aComponentInstance (:pointer :componentinstancerecord)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 10 aComponentInstance)); $ENDC; ; *******************************************************; *														*; *  					CALLS MADE BY COMPONENTS	  		*; *														*; *******************************************************; ; ; *******************************************************; * Component Management routines; *******************************************************; ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetComponentInstanceError" ((aComponentInstance (:pointer :componentinstancerecord)) (theError :signed-integer))   nil   (:stack-trap #xA82A :d0 11 aComponentInstance theError)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentRefcon" ((aComponent (:pointer :componentrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 16 aComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetComponentRefcon" ((aComponent (:pointer :componentrecord)) (theRefcon :signed-long))   nil   (:stack-trap #xA82A :d0 17 aComponent theRefcon)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenComponentResFile" ((aComponent (:pointer :componentrecord)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 21 aComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenAComponentResFile" ((aComponent (:pointer :componentrecord)) (resRef (:pointer :signed-integer)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 47 aComponent resRef)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CloseComponentResFile" ((refnum :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 24 refnum)); $ENDC; ; *******************************************************; * Component Instance Management routines; *******************************************************; ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentInstanceStorage" ((aComponentInstance (:pointer :componentinstancerecord)))   (:stack :handle)   (:stack-trap #xA82A :d0 12 aComponentInstance)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetComponentInstanceStorage" ((aComponentInstance (:pointer :componentinstancerecord)) (theStorage :handle))   nil   (:stack-trap #xA82A :d0 13 aComponentInstance theStorage)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentInstanceA5" ((aComponentInstance (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 14 aComponentInstance)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetComponentInstanceA5" ((aComponentInstance (:pointer :componentinstancerecord)) (theA5 :signed-long))   nil   (:stack-trap #xA82A :d0 15 aComponentInstance theA5)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CountComponentInstances" ((aComponent (:pointer :componentrecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 19 aComponent)); $ENDC;   useful helper routines for convenient method dispatching  ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CallComponentFunction" ((params (:pointer :componentparameters)) (func :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 255 params func)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CallComponentFunctionWithStorage" ((storage :handle) (params (:pointer :componentparameters)) (func :pointer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 255 storage params func)); $ENDC#|                                              ; $IFC GENERATINGPOWERPC  |#                                             ; $ELSEC; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallComponentFunctionWithStorageProcInfo" ((storage :handle) (params (:pointer :componentparameters)) (func :pointer) (funcProcInfo :signed-long))   :signed-long   () )                                         ; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_DelegateComponentCall" ((originalParams (:pointer :componentparameters)) (ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 36 originalParams ci)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_SetDefaultComponent" ((aComponent (:pointer :componentrecord)) (flags :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 30 aComponent flags)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenDefaultComponent" ((componentType :ostype) (componentSubType :ostype))   (:stack (:pointer :componentinstancerecord))   (:stack-trap #xA82A :d0 33 componentType componentSubType)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_OpenADefaultComponent" ((componentType :ostype) (componentSubType :ostype) (ci (:pointer (:pointer :componentinstancerecord))))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 46 componentType componentSubType ci)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_CaptureComponent" ((capturedComponent (:pointer :componentrecord)) (capturingComponent (:pointer :componentrecord)))   (:stack (:pointer :componentrecord))   (:stack-trap #xA82A :d0 28 capturedComponent capturingComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_UncaptureComponent" ((aComponent (:pointer :componentrecord)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 29 aComponent)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_RegisterComponentResourceFile" ((resRefNum :signed-integer) (global :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 20 resRefNum global)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator moveq-word-to-d0(deftrap "_GetComponentIconSuite" ((aComponent (:pointer :componentrecord)) (iconSuite (:pointer :handle)))   (:stack :signed-integer)   (:stack-trap #xA82A :d0 41 aComponent iconSuite)); $ENDC; ; *******************************************************; *														*; *  			Direct calls to the Components				*; *														*; *******************************************************; ;   Old style names ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ComponentFunctionImplemented" ((ci (:pointer :componentinstancerecord)) (ftnNumber :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ftnNumber ((+ (ash 2 16) 65533) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_GetComponentVersion" ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 65532) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ComponentSetTarget" ((ci (:pointer :componentinstancerecord)) (target (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci target ((+ (ash 4 16) 65530) :signed-longint))); $ENDC;   New style names ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentOpen" ((ci (:pointer :componentinstancerecord)) (self (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci self ((+ (ash 4 16) 65535) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentClose" ((ci (:pointer :componentinstancerecord)) (self (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci self ((+ (ash 4 16) 65534) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentCanDo" ((ci (:pointer :componentinstancerecord)) (ftnNumber :signed-integer))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ftnNumber ((+ (ash 2 16) 65533) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentVersion" ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 65532) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentRegister" ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 65531) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentTarget" ((ci (:pointer :componentinstancerecord)) (target (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci target ((+ (ash 4 16) 65530) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentUnregister" ((ci (:pointer :componentinstancerecord)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci ((+ (ash 0 16) 65529) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_CallComponentGetMPWorkFunction" ((ci (:pointer :componentinstancerecord)) (workFunction (:pointer :pointer)) (refCon (:pointer :pointer)))   (:stack :signed-long)   (:stack-trap #xA82A :d0 0 ci workFunction refCon ((+ (ash 8 16) 65528) :signed-longint))); $ENDC;   UPP call backs  (defconstant $uppComponentMPWorkFunctionProcInfo #x3F0)(defconstant $uppComponentRoutineProcInfo #x3F0); $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewComponentMPWorkFunctionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewComponentRoutineProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallComponentMPWorkFunctionProc" ((globalRefCon :pointer) (header (:pointer :componentmpworkfunctionheaderrecord)) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallComponentRoutineProc" ((cp (:pointer :componentparameters)) (componentStorage :handle) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC;   ProcInfos  ; $ALIGN RESET; $POP; $SETC UsingIncludes := ComponentsIncludes; $ENDC                                         ; __COMPONENTS__#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC(provide-interface 'Components)