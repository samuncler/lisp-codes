(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:GestaltEqu.p"; at Tuesday June 6,1995 2:09:50 pm.; ;  	File:		GestaltEqu.p;  ;  	Contains:	Gestalt Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17; 				(H.T.);  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __GESTALTEQU__; $SETC __GESTALTEQU__ := 1; $I+; $SETC GestaltEquIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __MIXEDMODE__|#(require-interface 'MixedMode)#|                                              ; $I MixedMode.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $gestaltAddressingModeAttr :|addr|);  addressing mode attributes (defconstant $gestalt32BitAddressing 0)         ;  using 32-bit addressing mode (defconstant $gestalt32BitSysZone 1)            ;  32-bit compatible system zone (defconstant $gestalt32BitCapable 2)            ;  Machine is 32-bit capable (defconstant $gestaltAliasMgrAttr :|alis|)      ;  Alias Mgr Attributes (defconstant $gestaltAliasMgrPresent 0)         ;  True if the Alias Mgr is present (defconstant $gestaltAliasMgrSupportsRemoteAppletalk 1);  True if the Alias Mgr knows about Remote Appletalk (defconstant $gestaltAppleTalkVersion :|atlk|)(defconstant $gestaltAUXVersion :|a/ux|)(defconstant $gestaltCloseViewAttr :|BSDa|)     ;  CloseView attributes (defconstant $gestaltCloseViewEnabled 0)        ;  Closeview enabled (dynamic bit - returns current state) (defconstant $gestaltCloseViewDisplayMgrFriendly 1);  Closeview compatible with Display Manager (FUTURE) (defconstant $gestaltCFMAttr :|cfrg|)           ;  returns information about the Code Fragment Manager (defconstant $gestaltCFMPresent 0)              ;  true if the Code Fragment Manager is present (defconstant $gestaltColorMatchingAttr :|cmta|) ;  ColorSync attributes (defconstant $gestaltHighLevelMatching 0)(defconstant $gestaltColorMatchingLibLoaded 1)(defconstant $gestaltColorMatchingVersion :|cmtc|)(defconstant $gestaltColorSync10 #x100)         ;  0x0100 & 0x0110 _Gestalt versions for 1.0-1.0.3 product (defconstant $gestaltColorSync11 #x110)         ;    0x0100 == low-level matching only (defconstant $gestaltColorSync104 #x104)        ;  Real version, by popular demand (defconstant $gestaltColorSync105 #x105)(defconstant $gestaltConnMgrAttr :|conn|)       ;  connection mgr attributes    (defconstant $gestaltConnMgrPresent 0)(defconstant $gestaltConnMgrCMSearchFix 1)      ;  Fix to CMAddSearch?     (defconstant $gestaltConnMgrErrorString 2)      ;  has CMGetErrorString() (defconstant $gestaltConnMgrMultiAsyncIO 3)     ;  CMNewIOPB, CMDisposeIOPB, CMPBRead, CMPBWrite, CMPBIOKill (defconstant $gestaltComponentMgr :|cpnt|)(defconstant $gestaltColorPickerVersion :|cpkr|);  returns version of ColorPicker (defconstant $gestaltColorPicker :|cpkr|)(defconstant $gestaltNativeCPUtype :|cput|)     ;  Native CPU type 									  (defconstant $gestaltCPU68000 1)                ;  Various 68k CPUs... 	(defconstant $gestaltCPU68010 2)(defconstant $gestaltCPU68020 3)(defconstant $gestaltCPU68030 4)(defconstant $gestaltCPU68040 5)(defconstant $gestaltCPU601 #x101)              ;  IBM 601 												(defconstant $gestaltCPU603 #x103)(defconstant $gestaltCPU604 #x104)(defconstant $gestaltCRMAttr :|crm |)           ;  comm resource mgr attributes (defconstant $gestaltCRMPresent 0)(defconstant $gestaltCRMPersistentFix 1)        ;  fix for persistent tools (defconstant $gestaltCRMToolRsrcCalls 2)        ;  has CRMGetToolResource/ReleaseToolResource (defconstant $gestaltControlStripVersion :|csvr|)(defconstant $gestaltCTBVersion :|ctbv|)(defconstant $gestaltDBAccessMgrAttr :|dbac|)   ;  Database Access Mgr attributes (defconstant $gestaltDBAccessMgrPresent 0)      ;  True if Database Access Mgr present (defconstant $gestaltDictionaryMgrAttr :|dict|) ;  Dictionary Manager attributes (defconstant $gestaltDictionaryMgrPresent 0)    ;  Dictionary Manager attributes (defconstant $gestaltDITLExtAttr :|ditl|)       ;  AppenDITL, etc. calls from CTB (defconstant $gestaltDITLExtPresent 0)          ;  True if calls are present (defconstant $gestaltDisplayMgrAttr :|dply|)    ;  Display Manager attributes (defconstant $gestaltDisplayMgrPresent 0)       ;  True if Display Mgr is present (defconstant $gestaltDisplayMgrCanSwitchMirrored 2);  True if Display Mgr can switch modes on mirrored displays (defconstant $gestaltDisplayMgrSetDepthNotifies 3);  True SetDepth generates displays mgr notification (defconstant $gestaltDisplayMgrVers :|dplv|)(defconstant $gestaltDragMgrAttr :|drag|)       ;  Drag Manager attributes (defconstant $gestaltDragMgrPresent 0)          ;  Drag Manager is present (defconstant $gestaltDragMgrFloatingWind 1)     ;  Drag Manager supports floating windows (defconstant $gestaltPPCDragLibPresent 2)       ;  Drag Manager PPC DragLib is present (defconstant $gestaltEasyAccessAttr :|easy|)    ;  Easy Access attributes (defconstant $gestaltEasyAccessOff 0)           ;  if Easy Access present, but off (no icon) (defconstant $gestaltEasyAccessOn 1)            ;  if Easy Access "On" (defconstant $gestaltEasyAccessSticky 2)        ;  if Easy Access "Sticky" (defconstant $gestaltEasyAccessLocked 3)        ;  if Easy Access "Locked" (defconstant $gestaltEditionMgrAttr :|edtn|)    ;  Edition Mgr attributes (defconstant $gestaltEditionMgrPresent 0)       ;  True if Edition Mgr present (defconstant $gestaltEditionMgrTranslationAware 1);  True if edition manager is translation manager aware (defconstant $gestaltAppleEventsAttr :|evnt|)   ;  Apple Events attributes (defconstant $gestaltAppleEventsPresent 0)      ;  True if Apple Events present (defconstant $gestaltScriptingSupport 1)(defconstant $gestaltOSLInSystem 2)             ;  OSL is in system so don’t use the one linked in to app (defconstant $gestaltFinderAttr :|fndr|)        ;  Finder attributes (defconstant $gestaltFinderDropEvent 0)         ;  Finder recognizes drop event (defconstant $gestaltFinderMagicPlacement 1)    ;  Finder supports magic icon placement (defconstant $gestaltFinderCallsAEProcess 2)    ;  Finder calls AEProcessAppleEvent (defconstant $gestaltOSLCompliantFinder 3)      ;  Finder is scriptable and recordable (defconstant $gestaltFinderSupports4GBVolumes 4);  Finder correctly handles 4GB volumes (defconstant $gestaltFinderHasClippings 6)      ;  Finder supports Drag Manager clipping files (defconstant $gestaltFindFolderAttr :|fold|)    ;  Folder Mgr attributes (defconstant $gestaltFindFolderPresent 0)       ;  True if Folder Mgr present (defconstant $gestaltFontMgrAttr :|font|)       ;  Font Mgr attributes (defconstant $gestaltOutlineFonts 0)            ;  True if Outline Fonts supported (defconstant $gestaltFPUType :|fpu |)           ;  fpu type (defconstant $gestaltNoFPU 0)                   ;  no FPU (defconstant $gestalt68881 1)                   ;  68881 FPU (defconstant $gestalt68882 2)                   ;  68882 FPU (defconstant $gestalt68040FPU 3)                ;  68040 built-in FPU (defconstant $gestaltFSAttr :|fs  |)            ;  file system attributes (defconstant $gestaltFullExtFSDispatching 0)    ;  has really cool new HFSDispatch dispatcher (defconstant $gestaltHasFSSpecCalls 1)          ;  has FSSpec calls (defconstant $gestaltHasFileSystemManager 2)    ;  has a file system manager (defconstant $gestaltFSMDoesDynamicLoad 3)      ;  file system manager supports dynamic loading (defconstant $gestaltFSSupports4GBVols 4)       ;  file system supports 4 gigabyte volumes (defconstant $gestaltFSSupports2TBVols 5)       ;  file system supports 2 terabyte volumes (defconstant $gestaltHasExtendedDiskInit 6)     ;  has extended Disk Initialization calls (defconstant $gestaltFXfrMgrAttr :|fxfr|)       ;  file transfer manager attributes (defconstant $gestaltFXfrMgrPresent 0)(defconstant $gestaltFXfrMgrMultiFile 1)        ;  supports FTSend and FTReceive (defconstant $gestaltFXfrMgrErrorString 2)      ;  supports FTGetErrorString (defconstant $gestaltGraphicsAttr :|gfxa|)      ;  Quickdraw GX attributes selector (defconstant $gestaltGraphicsIsDebugging #x1)(defconstant $gestaltGraphicsIsLoaded #x2)(defconstant $gestaltGraphicsIsPowerPC #x4)(defconstant $gestaltGraphicsVersion :|grfx|)   ;  Quickdraw GX version selector (defconstant $gestaltCurrentGraphicsVersion #x10000);  the version described in this set of headers (defconstant $gestaltHardwareAttr :|hdwr|)      ;  hardware attributes (defconstant $gestaltHasVIA1 0)                 ;  VIA1 exists (defconstant $gestaltHasVIA2 1)                 ;  VIA2 exists (defconstant $gestaltHasASC 3)                  ;  Apple Sound Chip exists (defconstant $gestaltHasSCC 4)                  ;  SCC exists (defconstant $gestaltHasSCSI 7)                 ;  SCSI exists (defconstant $gestaltHasSoftPowerOff 19)        ;  Capable of software power off (defconstant $gestaltHasSCSI961 21)             ;  53C96 SCSI controller on internal bus (defconstant $gestaltHasSCSI962 22)             ;  53C96 SCSI controller on external bus (defconstant $gestaltHasUniversalROM 24)        ;  Do we have a Universal ROM? (defconstant $gestaltHasEnhancedLtalk 30)       ;  Do we have Enhanced LocalTalk? (defconstant $gestaltHelpMgrAttr :|help|)       ;  Help Mgr Attributes (defconstant $gestaltHelpMgrPresent 0)          ;  true if help mgr is present (defconstant $gestaltHelpMgrExtensions 1)       ;  true if help mgr extensions are installed (defconstant $gestaltCompressionMgr :|icmp|)(defconstant $gestaltIconUtilitiesAttr :|icon|) ;  Icon Utilities attributes  (Note: available in System 7.0, despite gestalt) (defconstant $gestaltIconUtilitiesPresent 0)    ;  true if icon utilities are present (defconstant $gestaltKeyboardType :|kbd |)      ;  keyboard type (defconstant $gestaltMacKbd 1)(defconstant $gestaltMacAndPad 2)(defconstant $gestaltMacPlusKbd 3)(defconstant $gestaltExtADBKbd 4)(defconstant $gestaltStdADBKbd 5)(defconstant $gestaltPrtblADBKbd 6)(defconstant $gestaltPrtblISOKbd 7)(defconstant $gestaltStdISOADBKbd 8)(defconstant $gestaltExtISOADBKbd 9)(defconstant $gestaltADBKbdII 10)(defconstant $gestaltADBISOKbdII 11)(defconstant $gestaltPwrBookADBKbd 12)(defconstant $gestaltPwrBookISOADBKbd 13)(defconstant $gestaltAppleAdjustKeypad 14)(defconstant $gestaltAppleAdjustADBKbd 15)(defconstant $gestaltAppleAdjustISOKbd 16)(defconstant $gestaltJapanAdjustADBKbd 17)      ;  Japan Adjustable Keyboard (defconstant $gestaltPwrBkExtISOKbd 20)         ;  PowerBook Extended International Keyboard with function keys (defconstant $gestaltPwrBkExtJISKbd 21)         ;  PowerBook Extended Japanese Keyboard with function keys 		(defconstant $gestaltPwrBkExtADBKbd 24)         ;  PowerBook Extended Domestic Keyboard with function keys 		(defconstant $gestaltLowMemorySize :|lmem|)(defconstant $gestaltLogicalRAMSize :|lram|)(defconstant $gestaltMachineType :|mach|)       ;  machine type (defconstant $gestaltClassic 1)(defconstant $gestaltMacXL 2)(defconstant $gestaltMac512KE 3)(defconstant $gestaltMacPlus 4)(defconstant $gestaltMacSE 5)(defconstant $gestaltMacII 6)(defconstant $gestaltMacIIx 7)(defconstant $gestaltMacIIcx 8)(defconstant $gestaltMacSE030 9)(defconstant $gestaltPortable 10)(defconstant $gestaltMacIIci 11)(defconstant $gestaltMacIIfx 13)(defconstant $gestaltMacClassic 17)(defconstant $gestaltMacIIsi 18)(defconstant $gestaltMacLC 19)(defconstant $gestaltQuadra900 20)(defconstant $gestaltPowerBook170 21)(defconstant $gestaltQuadra700 22)(defconstant $gestaltClassicII 23)(defconstant $gestaltPowerBook100 24)(defconstant $gestaltPowerBook140 25)(defconstant $gestaltQuadra950 26)(defconstant $gestaltMacLCIII 27)(defconstant $gestaltPerforma450 #$gestaltMacLCIII)(defconstant $gestaltPowerBookDuo210 29)(defconstant $gestaltMacCentris650 30)(defconstant $gestaltPowerBookDuo230 32)(defconstant $gestaltPowerBook180 33)(defconstant $gestaltPowerBook160 34)(defconstant $gestaltMacQuadra800 35)(defconstant $gestaltMacQuadra650 36)(defconstant $gestaltMacLCII 37)(defconstant $gestaltPowerBookDuo250 38)(defconstant $gestaltAWS9150_80 39)(defconstant $gestaltPowerMac8100_110 40)(defconstant $gestaltAWS8150_110 #$gestaltPowerMac8100_110)(defconstant $gestaltMacIIvi 44)(defconstant $gestaltMacIIvm 45)(defconstant $gestaltPerforma600 #$gestaltMacIIvm)(defconstant $gestaltPowerMac7100_80 47)(defconstant $gestaltMacIIvx 48)(defconstant $gestaltMacColorClassic 49)(defconstant $gestaltPerforma250 #$gestaltMacColorClassic)(defconstant $gestaltPowerBook165c 50)(defconstant $gestaltMacCentris610 52)(defconstant $gestaltMacQuadra610 53)(defconstant $gestaltPowerBook145 54)(defconstant $gestaltPowerMac8100_100 55)(defconstant $gestaltMacLC520 56)(defconstant $gestaltAWS9150_120 57)(defconstant $gestaltMacCentris660AV 60)(defconstant $gestaltPerforma46x 62)(defconstant $gestaltPowerMac8100_80 65)(defconstant $gestaltAWS8150_80 #$gestaltPowerMac8100_80)(defconstant $gestaltPowerBook180c 71)(defconstant $gestaltPowerMac6100_60 75)(defconstant $gestaltAWS6150_60 #$gestaltPowerMac6100_60)(defconstant $gestaltPowerBookDuo270c 77)(defconstant $gestaltMacQuadra840AV 78)(defconstant $gestaltPerforma550 80)(defconstant $gestaltPowerBook165 84)(defconstant $gestaltMacTV 88)(defconstant $gestaltMacLC475 89)(defconstant $gestaltPerforma47x #$gestaltMacLC475)(defconstant $gestaltMacLC575 92)(defconstant $gestaltMacQuadra605 94)(defconstant $gestaltQuadra630 98)(defconstant $gestaltPowerMac6100_66 100)(defconstant $gestaltAWS6150_66 #$gestaltPowerMac6100_66)(defconstant $gestaltPowerBookDuo280 102)(defconstant $gestaltPowerBookDuo280c 103)(defconstant $gestaltPowerMac7100_66 112)       ;  Power Macintosh 7100/66 (defconstant $gestaltPowerBook150 115)(defconstant $kMachineNameStrID -16395)(defconstant $gestaltMachineIcon :|micn|)(defconstant $gestaltMiscAttr :|misc|)          ;  miscellaneous attributes (defconstant $gestaltScrollingThrottle 0)       ;  true if scrolling throttle on (defconstant $gestaltSquareMenuBar 2)           ;  true if menu bar is square ; ; 	The name gestaltMixedModeVersion for the 'mixd' selector is semantically incorrect.; 	The same selector has been renamed gestaltMixedModeAttr to properly reflect the ; 	Inside Mac: PowerPC System Software documentation.  The gestaltMixedModeVersion; 	symbol has been preserved only for backwards compatibility.; 	; 	Developers are forewarned that gestaltMixedModeVersion has a limited lifespan and ; 	will be removed in a future release of the Interfaces.; ; 	For the first version of Mixed Mode, both meanings of the 'mixd' selector are; 	functionally identical.  They both return 0x00000001.  In subsequent versions; 	of Mixed Mode, however, the 'mixd' selector will not respond with an increasing; 	version number, but rather, with 32 attribute bits with various meanings.; (defconstant $gestaltMixedModeVersion :|mixd|)(defconstant $gestaltMixedModeAttr :|mixd|)     ;  returns Mixed Mode attributes (defconstant $gestaltPowerPCAware 0)            ;  true if Mixed Mode Manager supports PowerPC (defconstant $gestaltMMUType :|mmu |)           ;  mmu type (defconstant $gestaltNoMMU 0)                   ;  no MMU (defconstant $gestaltAMU 1)                     ;  address management unit (defconstant $gestalt68851 2)                   ;  68851 PMMU (defconstant $gestalt68030MMU 3)                ;  68030 built-in MMU (defconstant $gestalt68040MMU 4)                ;  68040 built-in MMU (defconstant $gestaltEMMU1 5)                   ;  Emulated MMU type 1  (defconstant $gestaltStdNBPAttr :|nlup|)        ;  standard nbp attributes (defconstant $gestaltStdNBPPresent 0)(defconstant $gestaltNotificationMgrAttr :|nmgr|);  notification manager attributes (defconstant $gestaltNotificationPresent 0)     ;  notification manager exists (defconstant $gestaltNameRegistryVersion :|nreg|)(defconstant $gestaltNuBusSlotCount :|nubs|)(defconstant $gestaltOpenFirmwareInfo :|opfw|)(defconstant $gestaltOSAttr :|os  |)            ;  o/s attributes (defconstant $gestaltSysZoneGrowable 0)         ;  system heap is growable (defconstant $gestaltLaunchCanReturn 1)         ;  can return from launch (defconstant $gestaltLaunchFullFileSpec 2)      ;  can launch from full file spec (defconstant $gestaltLaunchControl 3)           ;  launch control support available (defconstant $gestaltTempMemSupport 4)          ;  temp memory support (defconstant $gestaltRealTempMemory 5)          ;  temp memory handles are real (defconstant $gestaltTempMemTracked 6)          ;  temporary memory handles are tracked (defconstant $gestaltIPCSupport 7)              ;  IPC support is present (defconstant $gestaltSysDebuggerSupport 8)      ;  system debugger support is present (defconstant $gestaltOSTable :|ostt|)(defconstant $gestaltPCXAttr :|pcxg|)           ;  PC Exchange attributes (defconstant $gestaltPCXHas8and16BitFAT 0)      ;  PC Exchange supports both 8 and 16 bit FATs (defconstant $gestaltPCXHasProDOS 1)            ;  PC Exchange supports ProDOS (defconstant $gestaltLogicalPageSize :|pgsz|)(defconstant $gestaltPopupAttr :|pop!|)         ;  popup cdef attributes (defconstant $gestaltPopupPresent 0)(defconstant $gestaltPowerMgrAttr :|powr|)      ;  power manager attributes (defconstant $gestaltPMgrExists 0)(defconstant $gestaltPMgrCPUIdle 1)(defconstant $gestaltPMgrSCC 2)(defconstant $gestaltPMgrSound 3)(defconstant $gestaltPMgrDispatchExists 4); ;  * PPC will return the combination of following bit fields.;  * e.g. gestaltPPCSupportsRealTime +gestaltPPCSupportsIncoming + gestaltPPCSupportsOutGoing;  * indicates PPC is cuurently is only supports real time delivery;  * and both incoming and outgoing network sessions are allowed.;  * By default local real time delivery is supported as long as PPCInit has been called.(defconstant $gestaltPPCToolboxAttr :|ppc |)    ;  PPC toolbox attributes (defconstant $gestaltPPCToolboxPresent #x0)     ;  PPC Toolbox is present  Requires PPCInit to be called (defconstant $gestaltPPCSupportsRealTime #x1000);  PPC Supports real-time delivery (defconstant $gestaltPPCSupportsIncoming #x1)   ;  PPC will deny incoming network requests (defconstant $gestaltPPCSupportsOutGoing #x2)   ;  PPC will deny outgoing network requests (defconstant $gestaltProcessorType :|proc|)     ;  processor type (defconstant $gestalt68000 1)(defconstant $gestalt68010 2)(defconstant $gestalt68020 3)(defconstant $gestalt68030 4)(defconstant $gestalt68040 5)(defconstant $gestaltParityAttr :|prty|)        ;  parity attributes (defconstant $gestaltHasParityCapability 0)     ;  has ability to check parity (defconstant $gestaltParityEnabled 1)           ;  parity checking enabled (defconstant $gestaltQuickdrawVersion :|qd  |)  ;  quickdraw version (defconstant $gestaltOriginalQD #x0)            ;  original 1-bit QD (defconstant $gestalt8BitQD #x100)              ;  8-bit color QD (defconstant $gestalt32BitQD #x200)             ;  32-bit color QD (defconstant $gestalt32BitQD11 #x201)           ;  32-bit color QDv1.1 (defconstant $gestalt32BitQD12 #x220)           ;  32-bit color QDv1.2 (defconstant $gestalt32BitQD13 #x230)           ;  32-bit color QDv1.3 (defconstant $gestaltQuickdrawFeatures :|qdrw|) ;  quickdraw features (defconstant $gestaltHasColor 0)                ;  color quickdraw present (defconstant $gestaltHasDeepGWorlds 1)          ;  GWorlds can be deeper than 1-bit (defconstant $gestaltHasDirectPixMaps 2)        ;  PixMaps can be direct (16 or 32 bit) (defconstant $gestaltHasGrayishTextOr 3)        ;  supports text mode grayishTextOr (defconstant $gestaltSupportsMirroring 4)       ;  Supports video mirroring via the Display Manager. (defconstant $gestaltQuickTimeVersion :|qtim|)  ;  returns version of QuickTime (defconstant $gestaltQuickTime :|qtim|)(defconstant $gestaltQuickTimeFeatures :|qtrs|)(defconstant $gestaltPPCQuickTimeLibPresent 0)  ;  PowerPC QuickTime glue library is present (defconstant $gestaltPhysicalRAMSize :|ram |)(defconstant $gestaltRBVAddr :|rbv |)(defconstant $gestaltROMSize :|rom |)(defconstant $gestaltROMVersion :|romv|)(defconstant $gestaltResourceMgrAttr :|rsrc|)   ;  Resource Mgr attributes (defconstant $gestaltPartialRsrcs 0)            ;  True if partial resources exist (defconstant $gestaltRealtimeMgrAttr :|rtmr|)   ;  Realtime manager attributes			(defconstant $gestaltRealtimeMgrPresent 0)      ;  true if the Realtime manager is present 	(defconstant $gestaltSCCReadAddr :|sccr|)(defconstant $gestaltSCCWriteAddr :|sccw|)(defconstant $gestaltScrapMgrAttr :|scra|)      ;  Scrap Manager attributes (defconstant $gestaltScrapMgrTranslationAware 0);  True if scrap manager is translation aware (defconstant $gestaltScriptMgrVersion :|scri|)(defconstant $gestaltScriptCount :|scr#|)(defconstant $gestaltSCSI :|scsi|)              ;  SCSI Manager attributes (defconstant $gestaltAsyncSCSI 0)               ;  Supports Asynchronous SCSI (defconstant $gestaltAsyncSCSIINROM 1)          ;  Async scsi is in ROM (available for booting) (defconstant $gestaltSCSISlotBoot 2)            ;  ROM supports Slot-style PRAM for SCSI boots (PDM and later) (defconstant $gestaltControlStripAttr :|sdev|)  ;  Control Strip attributes (defconstant $gestaltControlStripExists 0)(defconstant $gestaltControlStripVersionFixed 1)(defconstant $gestaltSerialAttr :|ser |)        ;  Serial attributes (defconstant $gestaltHasGPIaToDCDa 0)           ;  GPIa connected to DCDa(defconstant $gestaltHasGPIaToRTxCa 1)          ;  GPIa connected to RTxCa clock input(defconstant $gestaltHasGPIbToDCDb 2)           ;  GPIb connected to DCDb (defconstant $gestaltNuBusConnectors :|sltc|)(defconstant $gestaltSlotAttr :|slot|)          ;  slot attributes  (defconstant $gestaltSlotMgrExists 0)           ;  true is slot mgr exists  (defconstant $gestaltNuBusPresent 1)            ;  NuBus slots are present  (defconstant $gestaltSESlotPresent 2)           ;  SE PDS slot present  (defconstant $gestaltSE30SlotPresent 3)         ;  SE/30 slot present  (defconstant $gestaltPortableSlotPresent 4)     ;  Portable’s slot present  (defconstant $gestaltFirstSlotNumber :|slt1|)(defconstant $gestaltSoundAttr :|snd |)         ;  sound attributes (defconstant $gestaltStereoCapability 0)        ;  sound hardware has stereo capability (defconstant $gestaltStereoMixing 1)            ;  stereo mixing on external speaker (defconstant $gestaltSoundIOMgrPresent 3)       ;  The Sound I/O Manager is present (defconstant $gestaltBuiltInSoundInput 4)       ;  built-in Sound Input hardware is present (defconstant $gestaltHasSoundInputDevice 5)     ;  Sound Input device available (defconstant $gestaltPlayAndRecord 6)           ;  built-in hardware can play and record simultaneously (defconstant $gestalt16BitSoundIO 7)            ;  sound hardware can play and record 16-bit samples (defconstant $gestaltStereoInput 8)             ;  sound hardware can record stereo (defconstant $gestaltLineLevelInput 9)          ;  sound input port requires line level ;  the following bits are not defined prior to Sound Mgr 3.0 (defconstant $gestaltSndPlayDoubleBuffer 10)    ;  SndPlayDoubleBuffer available, set by Sound Mgr 3.0 and later (defconstant $gestaltMultiChannels 11)          ;  multiple channel support, set by Sound Mgr 3.0 and later (defconstant $gestalt16BitAudioSupport 12)      ;  16 bit audio data supported, set by Sound Mgr 3.0 and later (defconstant $gestaltStandardFileAttr :|stdf|)  ;  Standard File attributes (defconstant $gestaltStandardFile58 0)          ;  True if selectors 5-8 (StandardPutFile-CustomGetFile) are supported (defconstant $gestaltStandardFileTranslationAware 1);  True if standard file is translation manager aware (defconstant $gestaltStandardFileHasColorIcons 2);  True if standard file has 16x16 color icons (defconstant $gestaltStandardFileUseGenericIcons 3);  Standard file LDEF to use only the system generic icons if true (defconstant $gestaltStandardFileHasDynamicVolumeAllocation 4);  True if standard file supports more than 20 volumes (defconstant $gestaltSysArchitecture :|sysa|)   ;  Native System Architecture (defconstant $gestalt68k 1)                     ;  Motorola MC68k architecture (defconstant $gestaltPowerPC 2)                 ;  IBM PowerPC architecture (defconstant $gestaltSystemVersion :|sysv|)(defconstant $gestaltTSMgrVersion :|tsmv|)(defconstant $gestaltTSMgrAttr :|tsma|)         ;  Text Services Mgr attributes, if present (defconstant $gestaltTSMDisplayMgrAwareBit 0)   ;  TSM knows about display manager (defconstant $gestaltTextEditVersion :|te  |)   ;  TextEdit version number (defconstant $gestaltTE1 1)                     ;  TextEdit in MacIIci ROM (defconstant $gestaltTE2 2)                     ;  TextEdit with 6.0.4 Script Systems on MacIIci (Script bug fixes for MacIIci) (defconstant $gestaltTE3 3)                     ;  TextEdit with 6.0.4 Script Systems all but MacIIci (defconstant $gestaltTE4 4)                     ;  TextEdit in System 7.0 (defconstant $gestaltTE5 5)                     ;  TextWidthHook available in TextEdit (defconstant $gestaltTEAttr :|teat|)            ;  TextEdit attributes (defconstant $gestaltTEHasGetHiliteRgn 0)       ;  TextEdit has TEGetHiliteRgn (defconstant $gestaltTeleMgrAttr :|tele|)       ;  Telephone manager attributes (defconstant $gestaltTeleMgrPresent 0)(defconstant $gestaltTeleMgrPowerPCSupport 1)(defconstant $gestaltTeleMgrSoundStreams 2)(defconstant $gestaltTeleMgrAutoAnswer 3)(defconstant $gestaltTeleMgrIndHandset 4)(defconstant $gestaltTeleMgrSilenceDetect 5)(defconstant $gestaltTermMgrAttr :|term|)       ;  terminal mgr attributes (defconstant $gestaltTermMgrPresent 0)(defconstant $gestaltTermMgrErrorString 2)(defconstant $gestaltTimeMgrVersion :|tmgr|)    ;  time mgr version (defconstant $gestaltStandardTimeMgr 1)         ;  standard time mgr is present (defconstant $gestaltRevisedTimeMgr 2)          ;  revised time mgr is present (defconstant $gestaltExtendedTimeMgr 3)         ;  extended time mgr is present (defconstant $gestaltSpeechAttr :|ttsc|)        ;  Speech Manager attributes (defconstant $gestaltSpeechMgrPresent 0)        ;  bit set indicates that Speech Manager exists (defconstant $gestaltSpeechHasPPCGlue 1)        ;  bit set indicates that native PPC glue for Speech Manager API exists (defconstant $gestaltToolboxTable :|tbtt|)(defconstant $gestaltThreadMgrAttr :|thds|)     ;  Thread Manager attributes (defconstant $gestaltThreadMgrPresent 0)        ;  bit true if Thread Mgr is present (defconstant $gestaltSpecificMatchSupport 1)    ;  bit true if Thread Mgr supports exact match creation option (defconstant $gestaltThreadsLibraryPresent 2)   ;  bit true if Thread Mgr shared library is present (defconstant $gestaltTVAttr :|tv  |)            ;  TV version										<EX16>	 (defconstant $gestaltHasTVTuner 0)              ;  supports Philips FL1236F video tuner				<EX16>	 (defconstant $gestaltHasSoundFader 1)           ;  supports Philips TEA6330 Sound Fader chip		<EX16>	 (defconstant $gestaltHasHWClosedCaptioning 2)   ;  supports Philips SAA5252 Closed Captioning		<EX16>	 (defconstant $gestaltHasIRRemote 3)             ;  supports CyclopsII Infra Red Remote control		<EX16>	 (defconstant $gestaltHasVidDecoderScaler 4)     ;  supports Philips SAA7194 Video Decoder/Scaler	<EX16>	 (defconstant $gestaltHasStereoDecoder 5)        ;  supports Sony SBX1637A-01 stereo decoder			<EX16>	 (defconstant $gestaltVersion :|vers|)           ;  gestalt version (defconstant $gestaltValueImplementedVers 5)    ;  version of gestalt where gestaltValue is implemented. (defconstant $gestaltVIA1Addr :|via1|)(defconstant $gestaltVIA2Addr :|via2|)(defconstant $gestaltVMAttr :|vm  |)            ;  virtual memory attributes (defconstant $gestaltVMPresent 0)               ;  true if virtual memory is present (defconstant $gestaltTranslationAttr :|xlat|)   ;  Translation Manager attributes (defconstant $gestaltTranslationMgrExists 0)    ;  True if translation manager exists (defconstant $gestaltTranslationMgrHintOrder 1) ;  True if hint order reversal in effect (defconstant $gestaltTranslationPPCAvail 2)(defconstant $gestaltTranslationGetPathAPIAvail 3)(defconstant $gestaltExtToolboxTable :|xttt|)(def-mactype :selectorfunctionprocptr (find-mactype ':pointer));  FUNCTION SelectorFunction(selector: OSType; VAR response: LONGINT): OSErr; (def-mactype :selectorfunctionupp (find-mactype ':pointer))(defconstant $uppSelectorFunctionProcInfo #x3E0);  FUNCTION (4 byte param, 4 byte param): 2 byte result; ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewSelectorFunctionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallSelectorFunctionProc" ((selector :ostype) (response (:pointer :signed-long)) (userRoutine :pointer))   :signed-integer   (#x205F #x4E90) ); $ENDC; $IFC SystemSevenOrLater ; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function;; This form has been patched from HD:CCL3.0d17:Interface Translator:Patches:GestaltEqu.patch#|(deftrap-inline "_Gestalt" ((selector :ostype) (response (:pointer :signed-long)))   :signed-integer   (#x225F #x201F #xA1AD #x2288 #x3E80) )|#;;; for unknown reasons, the automatically generated inline call does not work(deftrap "_Gestalt" ((selector :ostype) (response (:pointer :signed-long)))   (:no-trap :signed-integer)   (:no-trap (CCL::%stack-block ((ret 8))               (CCL::%gen-trap #xA1AD :return-block ret :d0 selector :a0 response '(:d0 :a0))               (%put-ptr response (%get-ptr ret 4))               (%get-signed-word ret 2)))); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_ReplaceGestalt" ((selector :ostype) (gestaltFunction :pointer) (oldGestaltFunction (:pointer :pointer)))  :signed-integer   (#x225F #x205F #x201F #x2F09 #xA5AD #x225F #x2288 #x3E80) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_NewGestalt" ((selector :ostype) (gestaltFunction :pointer))   :signed-integer   (#x205F #x201F #xA3AD #x3E80) ); $ENDC#|                                              ; $ELSEC;; Inline instructions called as foreign function(deftrap-inline "_Gestalt" ((selector :ostype) (response (:pointer :signed-long)))   :signed-integer   (#xA1AD #x2288) );; Generated by translator basic-stack-trap(deftrap "_NewGestalt" ((selector :ostype) (gestaltFunction :pointer))   (:stack :signed-integer)   (:stack-trap #xA3AD)) |#                                             ; $ENDC#|                                              ; $IFC SystemSevenFiveOrLater ;  These functions are built into System 7.5, but not on earlier systems ;; Inline instructions called as foreign function(deftrap-inline "_ReplaceGestalt" ((selector :ostype) (gestaltFunction :pointer) (oldGestaltFunction (:pointer :pointer)))   :signed-integer   (#x2F09 #xA5AD #x225F #x2288) )              ; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_NewGestaltValue" ((selector :ostype) (newValue :signed-long))   (:stack :signed-integer)   (:stack-trap #xABF1 :d0 1025 selector newValue)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_ReplaceGestaltValue" ((selector :ostype) (replacementValue :signed-long))   (:stack :signed-integer)   (:stack-trap #xABF1 :d0 1026 selector replacementValue)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_SetGestaltValue" ((selector :ostype) (newValue :signed-long))   (:stack :signed-integer)   (:stack-trap #xABF1 :d0 1028 selector newValue)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator put-a-constant-word-in-d0(deftrap "_DeleteGestaltValue" ((selector :ostype))   (:stack :signed-integer)   (:stack-trap #xABF1 :d0 515 selector)); $ENDC |#                                             ; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := GestaltEquIncludes; $ENDC                                         ; __GESTALTEQU__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'GestaltEqu)