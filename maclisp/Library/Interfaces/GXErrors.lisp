(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:GXErrors.p"; at Tuesday June 6,1995 2:10:29 pm.; ;  	File:		GXErrors.p;  ;  	Contains:	QuickDraw GX error constants and debugging routines;  ;  	Version:	Technology:	Quickdraw GX 1.1;  				Package:	Universal Interfaces 2.1ß1 in “MPW Prerelease” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __GXERRORS__; $SETC __GXERRORS__ := 1; $I+; $SETC GXErrorsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __CONDITIONALMACROS__|#(require-interface 'ConditionalMacros)#|                                              ; $I ConditionalMacros.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MIXEDMODE__|#(require-interface 'MixedMode)#|                                              ; $I MixedMode.p |#                                             ; $ENDC; 	Types.p														#|                                              ; $IFC UNDEFINED __GXTYPES__|#(require-interface 'GXTypes)#|                                              ; $I GXTypes.p |#                                             ; $ENDC; 	GXMath.p													; 		FixMath.p												; $PUSH; $ALIGN MAC68K; $LibExport+; $SETC graphicsErrorsIncludes := 1(defconstant $gxFirstSystemError -27999)        ;  0xffff92a1 (defconstant $gxFirstFatalError -27999)(defconstant $gxLastFatalError -27951)(defconstant $gxFirstNonfatalError -27950)(defconstant $gxFirstFontScalerError -27900)(defconstant $gxLastFontScalerError -27851)(defconstant $gxFirstParameterError -27850)(defconstant $gxFirstImplementationLimitError -27800)(defconstant $gxFirstSystemDebuggingError -27700)(defconstant $gxLastSystemError -27000)         ;  0xffff9688 (defconstant $gxFirstLibraryError 1048576)      ;  0x00100000 (defconstant $gxLastLibraryError 2097151)       ;  0x001fffff (defconstant $gxFirstAppError 2097152)          ;  0x00200000 (defconstant $gxLastAppError 4194303)           ;  0x003fffff (defconstant $gxFirstSystemWarning -26999)      ;  0xffff9689 (defconstant $gxFirstResultOutOfRangeWarning -26950)(defconstant $gxFirstParameterOutOfRangeWarning -26900)(defconstant $gxFirstFontScalerWarning -26850)(defconstant $gxFirstSystemDebuggingWarning -26700)(defconstant $gxLastSystemWarning -26000)       ;  0xffff9a70 (defconstant $gxFirstLibraryWarning 4194304)    ;  0x00400000 (defconstant $gxLastLibraryWarning 5242879)     ;  0x004fffff (defconstant $gxFirstAppWarning 5242880)        ;  0x00500000 (defconstant $gxLastAppWarning 7340031)         ;  0x006fffff (defconstant $gxFirstSystemNotice -25999)       ;  0xffff9a71 (defconstant $gxLastSystemNotice -25500)        ;  0xffff9c64 (defconstant $gxFirstLibraryNotice 7340032)     ;  0x00700000 (defconstant $gxLastLibraryNotice 7602175)      ;  0x0073ffff (defconstant $gxFirstAppNotice 7602176)         ;  0x00740000 (defconstant $gxLastAppNotice 8388607)          ;  0x007fffff ;  truly fatal errors (defconstant $out_of_memory #$gxFirstFatalError)(defconstant $internal_fatal_error (+ #$gxFirstFatalError 1))(defconstant $no_outline_font_found (+ #$gxFirstFatalError 2))(defconstant $not_enough_memory_for_graphics_client_heap (+ #$gxFirstFatalError 3))(defconstant $could_not_create_backing_store (+ #$gxFirstFatalError 4));  internal errors (defconstant $internal_error #$gxFirstNonfatalError)(defconstant $internal_font_error (+ #$gxFirstNonfatalError 1))(defconstant $internal_layout_error (+ #$gxFirstNonfatalError 2));  recoverable errors (defconstant $could_not_dispose_backing_store (+ #$internal_layout_error 2))(defconstant $unflattening_interrupted_by_client (+ #$internal_layout_error 3));  font manager errors (defconstant $font_cannot_be_changed (+ #$internal_layout_error 4))(defconstant $illegal_font_parameter (+ #$internal_layout_error 5));  gxFont scaler errors (defconstant $null_font_scaler_context #$gxFirstFontScalerError)(defconstant $null_font_scaler_input (+ #$gxFirstFontScalerError 1))(defconstant $invalid_font_scaler_context (+ #$gxFirstFontScalerError 2))(defconstant $invalid_font_scaler_input (+ #$gxFirstFontScalerError 3))(defconstant $invalid_font_scaler_font_data (+ #$gxFirstFontScalerError 4))(defconstant $font_scaler_newblock_failed (+ #$gxFirstFontScalerError 5))(defconstant $font_scaler_getfonttable_failed (+ #$gxFirstFontScalerError 6))(defconstant $font_scaler_bitmap_allocation_failed (+ #$gxFirstFontScalerError 7))(defconstant $font_scaler_outline_allocation_failed (+ #$gxFirstFontScalerError 8))(defconstant $required_font_scaler_table_missing (+ #$gxFirstFontScalerError 9))(defconstant $unsupported_font_scaler_outline_format (+ #$gxFirstFontScalerError 10))(defconstant $unsupported_font_scaler_stream_format (+ #$gxFirstFontScalerError 11))(defconstant $unsupported_font_scaler_font_format (+ #$gxFirstFontScalerError 12))(defconstant $font_scaler_hinting_error (+ #$gxFirstFontScalerError 13))(defconstant $font_scaler_rasterizer_error (+ #$gxFirstFontScalerError 14))(defconstant $font_scaler_internal_error (+ #$gxFirstFontScalerError 15))(defconstant $font_scaler_invalid_matrix (+ #$gxFirstFontScalerError 16))(defconstant $font_scaler_fixed_overflow (+ #$gxFirstFontScalerError 17))(defconstant $font_scaler_api_version_mismatch (+ #$gxFirstFontScalerError 18))(defconstant $font_scaler_streaming_aborted (+ #$gxFirstFontScalerError 19))(defconstant $unknown_font_scaler_error (+ #$gxFirstFontScalerError 20));  bad parameters (defconstant $parameter_is_nil #$gxFirstParameterError)(defconstant $shape_is_nil (+ #$gxFirstParameterError 1))(defconstant $style_is_nil (+ #$gxFirstParameterError 2))(defconstant $transform_is_nil (+ #$gxFirstParameterError 3))(defconstant $ink_is_nil (+ #$gxFirstParameterError 4))(defconstant $transferMode_is_nil (+ #$gxFirstParameterError 5))(defconstant $color_is_nil (+ #$gxFirstParameterError 6))(defconstant $colorProfile_is_nil (+ #$gxFirstParameterError 7))(defconstant $colorSet_is_nil (+ #$gxFirstParameterError 8))(defconstant $spoolProcedure_is_nil (+ #$gxFirstParameterError 9))(defconstant $tag_is_nil (+ #$gxFirstParameterError 10))(defconstant $type_is_nil (+ #$gxFirstParameterError 11))(defconstant $mapping_is_nil (+ #$gxFirstParameterError 12))(defconstant $invalid_viewDevice_reference (+ #$gxFirstParameterError 13))(defconstant $invalid_viewGroup_reference (+ #$gxFirstParameterError 14))(defconstant $invalid_viewPort_reference (+ #$gxFirstParameterError 15));  implementation limits, these should be right before the debugging errors (defconstant $number_of_contours_exceeds_implementation_limit #$gxFirstImplementationLimitError)(defconstant $number_of_points_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 1))(defconstant $size_of_polygon_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 2))(defconstant $size_of_path_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 3))(defconstant $size_of_text_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 4))(defconstant $size_of_bitmap_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 5))(defconstant $number_of_colors_exceeds_implementation_limit (+ #$gxFirstImplementationLimitError 6))(defconstant $procedure_not_reentrant (+ #$gxFirstImplementationLimitError 7));  internal debugging errors (defconstant $functionality_unimplemented #$gxFirstSystemDebuggingError)(defconstant $clip_to_frame_shape_unimplemented (+ #$gxFirstSystemDebuggingError 1));  font parameter debugging errors (defconstant $illegal_font_storage_type (+ #$gxFirstSystemDebuggingError 2))(defconstant $illegal_font_storage_reference (+ #$gxFirstSystemDebuggingError 3))(defconstant $illegal_font_attributes (+ #$gxFirstSystemDebuggingError 4));  parameter debugging errors (defconstant $parameter_out_of_range (+ #$gxFirstSystemDebuggingError 5))(defconstant $inconsistent_parameters (+ #$gxFirstSystemDebuggingError 6))(defconstant $index_is_less_than_zero (+ #$gxFirstSystemDebuggingError 7))(defconstant $index_is_less_than_one (+ #$gxFirstSystemDebuggingError 8))(defconstant $count_is_less_than_zero (+ #$gxFirstSystemDebuggingError 9))(defconstant $count_is_less_than_one (+ #$gxFirstSystemDebuggingError 10))(defconstant $contour_is_less_than_zero (+ #$gxFirstSystemDebuggingError 11))(defconstant $length_is_less_than_zero (+ #$gxFirstSystemDebuggingError 12))(defconstant $invalid_client_reference (+ #$gxFirstSystemDebuggingError 13))(defconstant $invalid_graphics_heap_start_pointer (+ #$gxFirstSystemDebuggingError 14))(defconstant $invalid_nongraphic_globals_pointer (+ #$gxFirstSystemDebuggingError 15))(defconstant $colorSpace_out_of_range (+ #$gxFirstSystemDebuggingError 16))(defconstant $pattern_lattice_out_of_range (+ #$gxFirstSystemDebuggingError 17))(defconstant $frequency_parameter_out_of_range (+ #$gxFirstSystemDebuggingError 18))(defconstant $tinting_parameter_out_of_range (+ #$gxFirstSystemDebuggingError 19))(defconstant $method_parameter_out_of_range (+ #$gxFirstSystemDebuggingError 20))(defconstant $space_may_not_be_indexed (+ #$gxFirstSystemDebuggingError 21))(defconstant $glyph_index_too_small (+ #$gxFirstSystemDebuggingError 22))(defconstant $no_glyphs_added_to_font (+ #$gxFirstSystemDebuggingError 23))(defconstant $glyph_not_added_to_font (+ #$gxFirstSystemDebuggingError 24))(defconstant $point_does_not_intersect_bitmap (+ #$gxFirstSystemDebuggingError 25))(defconstant $required_font_table_not_present (+ #$gxFirstSystemDebuggingError 25))(defconstant $unknown_font_table_format (+ #$gxFirstSystemDebuggingError 26));  the styles encoding is not present in the font (defconstant $shapeFill_not_allowed (+ #$gxFirstSystemDebuggingError 27))(defconstant $inverseFill_face_must_set_clipLayer_flag (+ #$gxFirstSystemDebuggingError 28))(defconstant $invalid_transferMode_colorSpace (+ #$gxFirstSystemDebuggingError 29))(defconstant $colorProfile_must_be_nil (+ #$gxFirstSystemDebuggingError 30))(defconstant $bitmap_pixel_size_must_be_1 (+ #$gxFirstSystemDebuggingError 31))(defconstant $empty_shape_not_allowed (+ #$gxFirstSystemDebuggingError 32))(defconstant $ignorePlatformShape_not_allowed (+ #$gxFirstSystemDebuggingError 33))(defconstant $nil_style_in_glyph_not_allowed (+ #$gxFirstSystemDebuggingError 34))(defconstant $complex_glyph_style_not_allowed (+ #$gxFirstSystemDebuggingError 35))(defconstant $invalid_mapping (+ #$gxFirstSystemDebuggingError 36))(defconstant $cannot_set_item_shapes_to_nil (+ #$gxFirstSystemDebuggingError 37))(defconstant $cannot_use_original_item_shapes_when_growing_picture (+ #$gxFirstSystemDebuggingError 38))(defconstant $cannot_add_unspecified_new_glyphs (+ #$gxFirstSystemDebuggingError 39))(defconstant $cannot_dispose_locked_tag (+ #$gxFirstSystemDebuggingError 40))(defconstant $cannot_dispose_locked_shape (+ #$gxFirstSystemDebuggingError 41));  restricted access (defconstant $shape_access_not_allowed (+ #$gxFirstSystemDebuggingError 42))(defconstant $colorSet_access_restricted (+ #$gxFirstSystemDebuggingError 43))(defconstant $colorProfile_access_restricted (+ #$gxFirstSystemDebuggingError 44))(defconstant $tag_access_restricted (+ #$gxFirstSystemDebuggingError 45))(defconstant $viewDevice_access_restricted (+ #$gxFirstSystemDebuggingError 46))(defconstant $graphic_type_does_not_have_a_structure (+ #$gxFirstSystemDebuggingError 47))(defconstant $style_run_array_does_not_match_number_of_characters (+ #$gxFirstSystemDebuggingError 48))(defconstant $rectangles_cannot_be_inserted_into (+ #$gxFirstSystemDebuggingError 49))(defconstant $unknown_graphics_heap (+ #$gxFirstSystemDebuggingError 50))(defconstant $graphics_routine_selector_is_obsolete (+ #$gxFirstSystemDebuggingError 51))(defconstant $cannot_set_graphics_client_memory_without_setting_size (+ #$gxFirstSystemDebuggingError 52))(defconstant $graphics_client_memory_too_small (+ #$gxFirstSystemDebuggingError 53))(defconstant $graphics_client_memory_is_already_allocated (+ #$gxFirstSystemDebuggingError 54))(defconstant $viewPort_is_a_window (+ #$gxFirstSystemDebuggingError 55));  wrong type/bad reference (defconstant $illegal_type_for_shape (+ #$gxFirstSystemDebuggingError 56))(defconstant $shape_does_not_contain_a_bitmap (+ #$gxFirstSystemDebuggingError 57))(defconstant $shape_does_not_contain_text (+ #$gxFirstSystemDebuggingError 58))(defconstant $picture_expected (+ #$gxFirstSystemDebuggingError 59))(defconstant $bitmap_is_not_resizable (+ #$gxFirstSystemDebuggingError 60))(defconstant $shape_may_not_be_a_bitmap (+ #$gxFirstSystemDebuggingError 61))(defconstant $shape_may_not_be_a_picture (+ #$gxFirstSystemDebuggingError 62))(defconstant $graphic_type_does_not_contain_points (+ #$gxFirstSystemDebuggingError 63))(defconstant $graphic_type_does_not_have_multiple_contours (+ #$gxFirstSystemDebuggingError 64))(defconstant $graphic_type_cannot_be_mapped (+ #$gxFirstSystemDebuggingError 65))(defconstant $graphic_type_cannot_be_moved (+ #$gxFirstSystemDebuggingError 66))(defconstant $graphic_type_cannot_be_scaled (+ #$gxFirstSystemDebuggingError 67))(defconstant $graphic_type_cannot_be_rotated (+ #$gxFirstSystemDebuggingError 68))(defconstant $graphic_type_cannot_be_skewed (+ #$gxFirstSystemDebuggingError 69))(defconstant $graphic_type_cannot_be_reset (+ #$gxFirstSystemDebuggingError 70))(defconstant $graphic_type_cannot_be_dashed (+ #$gxFirstSystemDebuggingError 71))(defconstant $graphic_type_cannot_be_reduced (+ #$gxFirstSystemDebuggingError 72))(defconstant $graphic_type_cannot_be_inset (+ #$gxFirstSystemDebuggingError 73))(defconstant $shape_cannot_be_inverted (+ #$gxFirstSystemDebuggingError 74))(defconstant $shape_does_not_have_area (+ #$gxFirstSystemDebuggingError 75))(defconstant $shape_does_not_have_length (+ #$gxFirstSystemDebuggingError 76))(defconstant $first_glyph_advance_must_be_absolute (+ #$gxFirstSystemDebuggingError 77))(defconstant $picture_cannot_contain_itself (+ #$gxFirstSystemDebuggingError 78))(defconstant $viewPort_cannot_contain_itself (+ #$gxFirstSystemDebuggingError 79))(defconstant $cannot_set_unique_items_attribute_when_picture_contains_items (+ #$gxFirstSystemDebuggingError 80))(defconstant $layer_style_cannot_contain_a_face (+ #$gxFirstSystemDebuggingError 81))(defconstant $layer_glyph_shape_cannot_contain_nil_styles (+ #$gxFirstSystemDebuggingError 82));  validation errors (defconstant $object_wrong_type (+ #$gxFirstSystemDebuggingError 83))(defconstant $shape_wrong_type (+ #$gxFirstSystemDebuggingError 84))(defconstant $style_wrong_type (+ #$gxFirstSystemDebuggingError 85))(defconstant $ink_wrong_type (+ #$gxFirstSystemDebuggingError 86))(defconstant $transform_wrong_type (+ #$gxFirstSystemDebuggingError 87))(defconstant $device_wrong_type (+ #$gxFirstSystemDebuggingError 88))(defconstant $port_wrong_type (+ #$gxFirstSystemDebuggingError 89));  validation cache errors (defconstant $shape_cache_wrong_type (+ #$gxFirstSystemDebuggingError 90))(defconstant $style_cache_wrong_type (+ #$gxFirstSystemDebuggingError 91))(defconstant $ink_cache_wrong_type (+ #$gxFirstSystemDebuggingError 92))(defconstant $transform_cache_wrong_type (+ #$gxFirstSystemDebuggingError 93))(defconstant $port_cache_wrong_type (+ #$gxFirstSystemDebuggingError 94))(defconstant $shape_cache_parent_mismatch (+ #$gxFirstSystemDebuggingError 95))(defconstant $style_cache_parent_mismatch (+ #$gxFirstSystemDebuggingError 96))(defconstant $ink_cache_parent_mismatch (+ #$gxFirstSystemDebuggingError 97))(defconstant $transform_cache_parent_mismatch (+ #$gxFirstSystemDebuggingError 98))(defconstant $port_cache_parent_mismatch (+ #$gxFirstSystemDebuggingError 99))(defconstant $invalid_shape_cache_port (+ #$gxFirstSystemDebuggingError 100))(defconstant $invalid_shape_cache_device (+ #$gxFirstSystemDebuggingError 101))(defconstant $invalid_ink_cache_port (+ #$gxFirstSystemDebuggingError 102))(defconstant $invalid_ink_cache_device (+ #$gxFirstSystemDebuggingError 103))(defconstant $invalid_style_cache_port (+ #$gxFirstSystemDebuggingError 104))(defconstant $invalid_style_cache_device (+ #$gxFirstSystemDebuggingError 105))(defconstant $invalid_transform_cache_port (+ #$gxFirstSystemDebuggingError 106))(defconstant $invalid_transform_cache_device (+ #$gxFirstSystemDebuggingError 107))(defconstant $recursive_caches (+ #$gxFirstSystemDebuggingError 108));  validation shape cache errors (defconstant $invalid_fillShape_ownerCount (+ #$gxFirstSystemDebuggingError 109))(defconstant $recursive_fillShapes (+ #$gxFirstSystemDebuggingError 110));  validation memory block errors (defconstant $indirect_memory_block_too_small (+ #$gxFirstSystemDebuggingError 111))(defconstant $indirect_memory_block_too_large (+ #$gxFirstSystemDebuggingError 112))(defconstant $unexpected_nil_pointer (+ #$gxFirstSystemDebuggingError 113))(defconstant $bad_address (+ #$gxFirstSystemDebuggingError 114));  validation object errors (defconstant $no_owners (+ #$gxFirstSystemDebuggingError 115))(defconstant $invalid_pointer (+ #$gxFirstSystemDebuggingError 116))(defconstant $invalid_seed (+ #$gxFirstSystemDebuggingError 117))(defconstant $invalid_frame_seed (+ #$gxFirstSystemDebuggingError 118))(defconstant $invalid_text_seed (+ #$gxFirstSystemDebuggingError 119))(defconstant $invalid_draw_seed (+ #$gxFirstSystemDebuggingError 120))(defconstant $bad_private_flags (+ #$gxFirstSystemDebuggingError 121));  validation path and polygon errors (defconstant $invalid_vector_count (+ #$gxFirstSystemDebuggingError 122))(defconstant $invalid_contour_count (+ #$gxFirstSystemDebuggingError 123));  validation bitmap errors (defconstant $bitmap_ptr_too_small (+ #$gxFirstSystemDebuggingError 124))(defconstant $bitmap_ptr_not_aligned (+ #$gxFirstSystemDebuggingError 125))(defconstant $bitmap_rowBytes_negative (+ #$gxFirstSystemDebuggingError 126))(defconstant $bitmap_width_negative (+ #$gxFirstSystemDebuggingError 127))(defconstant $bitmap_height_negative (+ #$gxFirstSystemDebuggingError 128))(defconstant $invalid_pixelSize (+ #$gxFirstSystemDebuggingError 129))(defconstant $bitmap_rowBytes_too_small (+ #$gxFirstSystemDebuggingError 130))(defconstant $bitmap_rowBytes_not_aligned (+ #$gxFirstSystemDebuggingError 131))(defconstant $bitmap_rowBytes_must_be_specified_for_user_image_buffer (+ #$gxFirstSystemDebuggingError 132));  validation bitmap image errors (defconstant $invalid_bitImage_fileOffset (+ #$gxFirstSystemDebuggingError 133))(defconstant $invalid_bitImage_owners (+ #$gxFirstSystemDebuggingError 134))(defconstant $invalid_bitImage_rowBytes (+ #$gxFirstSystemDebuggingError 135))(defconstant $invalid_bitImage_internal_flag (+ #$gxFirstSystemDebuggingError 136));  validation text errors (defconstant $text_bounds_cache_wrong_size (+ #$gxFirstSystemDebuggingError 137))(defconstant $text_metrics_cache_wrong_size (+ #$gxFirstSystemDebuggingError 138))(defconstant $text_index_cache_wrong_size (+ #$gxFirstSystemDebuggingError 139));  validation glyph errors (defconstant $glyph_run_count_negative (+ #$gxFirstSystemDebuggingError 140))(defconstant $glyph_run_count_zero (+ #$gxFirstSystemDebuggingError 141))(defconstant $glyph_run_counts_do_not_sum_to_character_count (+ #$gxFirstSystemDebuggingError 142))(defconstant $glyph_first_advance_bit_set_not_allowed (+ #$gxFirstSystemDebuggingError 143))(defconstant $glyph_tangent_vectors_both_zero (+ #$gxFirstSystemDebuggingError 144));  validation layout errors (defconstant $layout_run_length_negative (+ #$gxFirstSystemDebuggingError 145))(defconstant $layout_run_length_zero (+ #$gxFirstSystemDebuggingError 146))(defconstant $layout_run_level_negative (+ #$gxFirstSystemDebuggingError 147))(defconstant $layout_run_lengths_do_not_sum_to_text_length (+ #$gxFirstSystemDebuggingError 148));  validation picture errors (defconstant $bad_shape_in_picture (+ #$gxFirstSystemDebuggingError 149))(defconstant $bad_style_in_picture (+ #$gxFirstSystemDebuggingError 150))(defconstant $bad_ink_in_picture (+ #$gxFirstSystemDebuggingError 151))(defconstant $bad_transform_in_picture (+ #$gxFirstSystemDebuggingError 152))(defconstant $bad_shape_cache_in_picture (+ #$gxFirstSystemDebuggingError 153))(defconstant $bad_seed_in_picture (+ #$gxFirstSystemDebuggingError 154))(defconstant $invalid_picture_count (+ #$gxFirstSystemDebuggingError 155));  validation text face errors (defconstant $bad_textLayer_count (+ #$gxFirstSystemDebuggingError 156))(defconstant $bad_fillType_in_textFace (+ #$gxFirstSystemDebuggingError 157))(defconstant $bad_style_in_textFace (+ #$gxFirstSystemDebuggingError 158))(defconstant $bad_transform_in_textFace (+ #$gxFirstSystemDebuggingError 159));  validation transform errors (defconstant $invalid_matrix_flag (+ #$gxFirstSystemDebuggingError 160))(defconstant $transform_clip_missing (+ #$gxFirstSystemDebuggingError 161));  validation font cache errors (defconstant $metrics_wrong_type (+ #$gxFirstSystemDebuggingError 162))(defconstant $metrics_point_size_probably_bad (+ #$gxFirstSystemDebuggingError 163))(defconstant $scalar_block_wrong_type (+ #$gxFirstSystemDebuggingError 164))(defconstant $scalar_block_parent_mismatch (+ #$gxFirstSystemDebuggingError 165))(defconstant $scalar_block_too_small (+ #$gxFirstSystemDebuggingError 166))(defconstant $scalar_block_too_large (+ #$gxFirstSystemDebuggingError 167))(defconstant $invalid_metrics_range (+ #$gxFirstSystemDebuggingError 168))(defconstant $invalid_metrics_flags (+ #$gxFirstSystemDebuggingError 169))(defconstant $metrics_maxWidth_probably_bad (+ #$gxFirstSystemDebuggingError 170))(defconstant $font_wrong_type (+ #$gxFirstSystemDebuggingError 171))(defconstant $font_wrong_size (+ #$gxFirstSystemDebuggingError 172))(defconstant $invalid_font_platform (+ #$gxFirstSystemDebuggingError 173))(defconstant $invalid_lookup_range (+ #$gxFirstSystemDebuggingError 174))(defconstant $invalid_lookup_platform (+ #$gxFirstSystemDebuggingError 175))(defconstant $font_not_in_font_list (+ #$gxFirstSystemDebuggingError 176))(defconstant $metrics_not_in_metrics_list (+ #$gxFirstSystemDebuggingError 177));  validation view device errors (defconstant $bad_device_private_flags (+ #$gxFirstSystemDebuggingError 178))(defconstant $bad_device_attributes (+ #$gxFirstSystemDebuggingError 179))(defconstant $invalid_device_number (+ #$gxFirstSystemDebuggingError 180))(defconstant $invalid_device_viewGroup (+ #$gxFirstSystemDebuggingError 181))(defconstant $invalid_device_bounds (+ #$gxFirstSystemDebuggingError 182))(defconstant $invalid_bitmap_in_device (+ #$gxFirstSystemDebuggingError 183));  validation color set errors (defconstant $colorSet_wrong_type (+ #$gxFirstSystemDebuggingError 184))(defconstant $invalid_colorSet_viewDevice_owners (+ #$gxFirstSystemDebuggingError 185))(defconstant $invalid_colorSet_colorSpace (+ #$gxFirstSystemDebuggingError 186))(defconstant $invalid_colorSet_count (+ #$gxFirstSystemDebuggingError 187));  validation color profile errors (defconstant $colorProfile_wrong_type (+ #$gxFirstSystemDebuggingError 188))(defconstant $invalid_colorProfile_flags (+ #$gxFirstSystemDebuggingError 189))(defconstant $invalid_colorProfile_response_count (+ #$gxFirstSystemDebuggingError 190));  validation internal backing store errors (defconstant $backing_free_parent_mismatch (+ #$gxFirstSystemDebuggingError 191))(defconstant $backing_store_parent_mismatch (+ #$gxFirstSystemDebuggingError 192));  warnings about warnings (defconstant $warning_stack_underflow #$gxFirstSystemWarning)(defconstant $warning_stack_overflow (+ #$gxFirstSystemWarning 1))(defconstant $notice_stack_underflow (+ #$gxFirstSystemWarning 2))(defconstant $notice_stack_overflow (+ #$gxFirstSystemWarning 3))(defconstant $about_to_grow_heap (+ #$gxFirstSystemWarning 4))(defconstant $about_to_unload_objects (+ #$gxFirstSystemWarning 5));  result went out of range (defconstant $map_shape_out_of_range #$gxFirstResultOutOfRangeWarning)(defconstant $move_shape_out_of_range (+ #$gxFirstResultOutOfRangeWarning 1))(defconstant $scale_shape_out_of_range (+ #$gxFirstResultOutOfRangeWarning 2))(defconstant $rotate_shape_out_of_range (+ #$gxFirstResultOutOfRangeWarning 3))(defconstant $skew_shape_out_of_range (+ #$gxFirstResultOutOfRangeWarning 4))(defconstant $map_transform_out_of_range (+ #$gxFirstResultOutOfRangeWarning 5))(defconstant $move_transform_out_of_range (+ #$gxFirstResultOutOfRangeWarning 6))(defconstant $scale_transform_out_of_range (+ #$gxFirstResultOutOfRangeWarning 7))(defconstant $rotate_transform_out_of_range (+ #$gxFirstResultOutOfRangeWarning 8))(defconstant $skew_transform_out_of_range (+ #$gxFirstResultOutOfRangeWarning 9))(defconstant $map_points_out_of_range (+ #$gxFirstResultOutOfRangeWarning 10));  gave a parameter out of range (defconstant $contour_out_of_range #$gxFirstParameterOutOfRangeWarning)(defconstant $index_out_of_range_in_contour (+ #$gxFirstParameterOutOfRangeWarning 1))(defconstant $picture_index_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 2))(defconstant $color_index_requested_not_found (+ #$gxFirstParameterOutOfRangeWarning 3))(defconstant $colorSet_index_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 4))(defconstant $index_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 5))(defconstant $count_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 6))(defconstant $length_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 7))(defconstant $font_table_index_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 8))(defconstant $font_glyph_index_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 9))(defconstant $point_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 10))(defconstant $profile_response_out_of_range (+ #$gxFirstParameterOutOfRangeWarning 11));  gxFont scaler warnings (defconstant $font_scaler_no_output #$gxFirstFontScalerWarning)(defconstant $font_scaler_fake_metrics (+ #$gxFirstFontScalerWarning 1))(defconstant $font_scaler_fake_linespacing (+ #$gxFirstFontScalerWarning 2))(defconstant $font_scaler_glyph_substitution (+ #$gxFirstFontScalerWarning 3))(defconstant $font_scaler_no_kerning_applied (+ #$gxFirstFontScalerWarning 4));  might not be what you expected (defconstant $character_substitution_took_place (+ #$gxFirstFontScalerWarning 5))(defconstant $unable_to_get_bounds_on_multiple_devices (+ #$gxFirstFontScalerWarning 6))(defconstant $font_language_not_found (+ #$gxFirstFontScalerWarning 7))(defconstant $font_not_found_during_unflattening (+ #$gxFirstFontScalerWarning 8)); storage (defconstant $unrecognized_stream_version (+ #$gxFirstFontScalerWarning 9))(defconstant $bad_data_in_stream (+ #$gxFirstFontScalerWarning 10));  nonsense data (defconstant $new_shape_contains_invalid_data #$gxFirstSystemDebuggingWarning)(defconstant $new_tag_contains_invalid_data (+ #$gxFirstSystemDebuggingWarning 1))(defconstant $extra_data_passed_was_ignored (+ #$gxFirstSystemDebuggingWarning 2))(defconstant $font_table_not_found (+ #$gxFirstSystemDebuggingWarning 3))(defconstant $font_name_not_found (+ #$gxFirstSystemDebuggingWarning 4));  doesn't make sense to do (defconstant $unable_to_traverse_open_contour_that_starts_or_ends_off_the_curve (+ #$gxFirstSystemDebuggingWarning 5))(defconstant $unable_to_draw_open_contour_that_starts_or_ends_off_the_curve (+ #$gxFirstSystemDebuggingWarning 6))(defconstant $cannot_dispose_default_shape (+ #$gxFirstSystemDebuggingWarning 7))(defconstant $cannot_dispose_default_style (+ #$gxFirstSystemDebuggingWarning 8))(defconstant $cannot_dispose_default_ink (+ #$gxFirstSystemDebuggingWarning 9))(defconstant $cannot_dispose_default_transform (+ #$gxFirstSystemDebuggingWarning 10))(defconstant $cannot_dispose_default_colorProfile (+ #$gxFirstSystemDebuggingWarning 11))(defconstant $cannot_dispose_default_colorSet (+ #$gxFirstSystemDebuggingWarning 12))(defconstant $shape_direct_attribute_not_set (+ #$gxFirstSystemDebuggingWarning 13));  couldn't find what you were looking for (defconstant $point_does_not_intersect_port (+ #$gxFirstSystemDebuggingWarning 14))(defconstant $cannot_dispose_non_font (+ #$gxFirstSystemDebuggingWarning 15))(defconstant $face_override_style_font_must_match_style (+ #$gxFirstSystemDebuggingWarning 16))(defconstant $union_of_area_and_length_returns_area_only (+ #$gxFirstSystemDebuggingWarning 17))(defconstant $insufficient_coordinate_space_for_new_device (+ #$gxFirstSystemDebuggingWarning 18));  other (defconstant $shape_passed_has_no_bounds (+ #$gxFirstSystemDebuggingWarning 19))(defconstant $tags_of_type_flst_removed (+ #$gxFirstSystemDebuggingWarning 20))(defconstant $translator_not_installed_on_this_grafport (+ #$gxFirstSystemDebuggingWarning 21))(defconstant $parameters_have_no_effect #$gxFirstSystemNotice)(defconstant $attributes_already_set (+ #$gxFirstSystemNotice 1))(defconstant $caps_already_set (+ #$gxFirstSystemNotice 2))(defconstant $clip_already_set (+ #$gxFirstSystemNotice 3))(defconstant $color_already_set (+ #$gxFirstSystemNotice 4))(defconstant $curve_error_already_set (+ #$gxFirstSystemNotice 5))(defconstant $dash_already_set (+ #$gxFirstSystemNotice 6))(defconstant $default_colorProfile_already_set (+ #$gxFirstSystemNotice 7))(defconstant $default_ink_already_set (+ #$gxFirstSystemNotice 8))(defconstant $default_transform_already_set (+ #$gxFirstSystemNotice 9))(defconstant $default_shape_already_set (+ #$gxFirstSystemNotice 10))(defconstant $default_style_already_set (+ #$gxFirstSystemNotice 11))(defconstant $dither_already_set (+ #$gxFirstSystemNotice 12))(defconstant $encoding_already_set (+ #$gxFirstSystemNotice 13))(defconstant $face_already_set (+ #$gxFirstSystemNotice 14))(defconstant $fill_already_set (+ #$gxFirstSystemNotice 15))(defconstant $font_already_set (+ #$gxFirstSystemNotice 16))(defconstant $font_variations_already_set (+ #$gxFirstSystemNotice 17))(defconstant $glyph_positions_are_already_set (+ #$gxFirstSystemNotice 18))(defconstant $glyph_tangents_are_already_set (+ #$gxFirstSystemNotice 19))(defconstant $halftone_already_set (+ #$gxFirstSystemNotice 20))(defconstant $hit_test_already_set (+ #$gxFirstSystemNotice 21))(defconstant $ink_already_set (+ #$gxFirstSystemNotice 22))(defconstant $join_already_set (+ #$gxFirstSystemNotice 23))(defconstant $justification_already_set (+ #$gxFirstSystemNotice 24))(defconstant $mapping_already_set (+ #$gxFirstSystemNotice 25))(defconstant $pattern_already_set (+ #$gxFirstSystemNotice 26))(defconstant $pen_already_set (+ #$gxFirstSystemNotice 27))(defconstant $style_already_set (+ #$gxFirstSystemNotice 28))(defconstant $tag_already_set (+ #$gxFirstSystemNotice 29))(defconstant $text_attributes_already_set (+ #$gxFirstSystemNotice 30))(defconstant $text_size_already_set (+ #$gxFirstSystemNotice 31))(defconstant $transfer_already_set (+ #$gxFirstSystemNotice 32))(defconstant $translator_already_installed_on_this_grafport (+ #$gxFirstSystemNotice 33))(defconstant $transform_already_set (+ #$gxFirstSystemNotice 34))(defconstant $type_already_set (+ #$gxFirstSystemNotice 35))(defconstant $validation_level_already_set (+ #$gxFirstSystemNotice 36))(defconstant $viewPorts_already_set (+ #$gxFirstSystemNotice 37))(defconstant $viewPort_already_in_viewGroup (+ #$gxFirstSystemNotice 38))(defconstant $viewDevice_already_in_viewGroup (+ #$gxFirstSystemNotice 39))(defconstant $geometry_unaffected (+ #$gxFirstSystemNotice 40))(defconstant $mapping_unaffected (+ #$gxFirstSystemNotice 41))(defconstant $tags_in_shape_ignored (+ #$gxFirstSystemNotice 42))(defconstant $shape_already_in_primitive_form (+ #$gxFirstSystemNotice 43))(defconstant $shape_already_in_simple_form (+ #$gxFirstSystemNotice 44))(defconstant $shape_already_broken (+ #$gxFirstSystemNotice 45))(defconstant $shape_already_joined (+ #$gxFirstSystemNotice 46))(defconstant $cache_already_cleared (+ #$gxFirstSystemNotice 47))(defconstant $shape_not_disposed (+ #$gxFirstSystemNotice 48))(defconstant $style_not_disposed (+ #$gxFirstSystemNotice 49))(defconstant $ink_not_disposed (+ #$gxFirstSystemNotice 50))(defconstant $transform_not_disposed (+ #$gxFirstSystemNotice 51))(defconstant $colorSet_not_disposed (+ #$gxFirstSystemNotice 52))(defconstant $colorProfile_not_disposed (+ #$gxFirstSystemNotice 53))(defconstant $font_not_disposed (+ #$gxFirstSystemNotice 54))(defconstant $glyph_tangents_have_no_effect (+ #$gxFirstSystemNotice 55))(defconstant $glyph_positions_determined_by_advance (+ #$gxFirstSystemNotice 56))(defconstant $transform_viewPorts_already_set (+ #$gxFirstSystemNotice 57))(defconstant $directShape_attribute_set_as_side_effect (+ #$gxFirstSystemNotice 58))(defconstant $lockShape_called_as_side_effect (+ #$gxFirstSystemNotice 59))(defconstant $lockTag_called_as_side_effect (+ #$gxFirstSystemNotice 60))(defconstant $shapes_unlocked_as_side_effect (+ #$gxFirstSystemNotice 61))(defconstant $shape_not_locked (+ #$gxFirstSystemNotice 62))(defconstant $tag_not_locked (+ #$gxFirstSystemNotice 63))(defconstant $disposed_dead_caches (+ #$gxFirstSystemNotice 64))(defconstant $disposed_live_caches (+ #$gxFirstSystemNotice 65))(defconstant $low_on_memory (+ #$gxFirstSystemNotice 66))(defconstant $very_low_on_memory (+ #$gxFirstSystemNotice 67))(defconstant $transform_references_disposed_viewPort (+ #$gxFirstSystemNotice 68))(def-mactype :gxgraphicserror (find-mactype ':signed-long))(def-mactype :gxgraphicswarning (find-mactype ':signed-long))(def-mactype :gxgraphicsnotice (find-mactype ':signed-long))(def-mactype :gxusererrorprocptr (find-mactype ':pointer));  PROCEDURE gxUserError(status: gxGraphicsError; refcon: LONGINT); (def-mactype :gxuserwarningprocptr (find-mactype ':pointer));  PROCEDURE gxUserWarning(status: gxGraphicsWarning; refcon: LONGINT); (def-mactype :gxusernoticeprocptr (find-mactype ':pointer));  PROCEDURE gxUserNotice(status: gxGraphicsNotice; refcon: LONGINT); (def-mactype :gxusererrorupp (find-mactype ':pointer))(def-mactype :gxuserwarningupp (find-mactype ':pointer))(def-mactype :gxusernoticeupp (find-mactype ':pointer))(defconstant $uppgxUserErrorProcInfo #x3C1)     ;  PROCEDURE (4 byte param, 4 byte param); (defconstant $uppgxUserWarningProcInfo #x3C1)   ;  PROCEDURE (4 byte param, 4 byte param); (defconstant $uppgxUserNoticeProcInfo #x3C1)    ;  PROCEDURE (4 byte param, 4 byte param); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxUserErrorProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxUserWarningProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap ("_NewgxUserNoticeProc" ("QuickDrawGXLib"))         ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxUserErrorProc" ("QuickDrawGXLib"))  ((status :signed-long) (refcon :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxUserWarningProc" ("QuickDrawGXLib"))  ((status :signed-long) (refcon :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline ("_CallgxUserNoticeProc" ("QuickDrawGXLib"))  ((status :signed-long) (refcon :signed-long) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC(def-mactype :gxusererrorfunction (find-mactype ':pointer))(def-mactype :gxuserwarningfunction (find-mactype ':pointer))(def-mactype :gxusernoticefunction (find-mactype ':pointer))(defconstant $common_colors_not_initialized #$gxFirstLibraryError)(defconstant $no_open_picture (+ #$gxFirstLibraryError 1))(defconstant $picture_already_open (+ #$gxFirstLibraryError 2))(defconstant $no_open_poly (+ #$gxFirstLibraryError 3))(defconstant $poly_already_open (+ #$gxFirstLibraryError 4))(defconstant $no_open_region (+ #$gxFirstLibraryError 5))(defconstant $region_already_open (+ #$gxFirstLibraryError 6))(defconstant $no_active_picture (+ #$gxFirstLibraryError 7))(defconstant $no_picture_drawn #$gxFirstLibraryWarning)(defconstant $polygons_have_different_size_contours (+ #$gxFirstLibraryWarning 1))(defconstant $graphic_type_cannot_be_specifed_by_four_values (+ #$gxFirstLibraryWarning 2))(defconstant $graphic_type_cannot_be_specifed_by_six_values (+ #$gxFirstLibraryWarning 3))(defconstant $point_expected (+ #$gxFirstLibraryWarning 4))(defconstant $line_or_rectangle_expected (+ #$gxFirstLibraryWarning 5))(defconstant $curve_expected (+ #$gxFirstLibraryWarning 6))(defconstant $graphic_type_does_not_contain_control_bits (+ #$gxFirstLibraryWarning 7))(defconstant $request_exceeds_available_data (+ #$gxFirstLibraryWarning 8))(defconstant $extra_data_unread (+ #$gxFirstLibraryWarning 9))(defconstant $no_variable_length_user_data_saved (+ #$gxFirstLibraryWarning 10))(defconstant $zero_length_string_passed #$gxFirstLibraryNotice); $SETC graphicsDebuggingIncludes := 1;  These levels tell how to validate routines.  Choose one. (defconstant $gxNoValidation #x0)               ;  no validation (defconstant $gxPublicValidation #x1)           ;  check parameters to public routines (defconstant $gxInternalValidation #x2)         ;  check parameters to internal routines ;  These levels tell how to validate types.  Choose one. (defconstant $gxTypeValidation #x0)             ;  check types of objects (defconstant $gxStructureValidation #x10)       ;  check fields of private structures (defconstant $gxAllObjectValidation #x20)       ;  check every object over every call ;  These levels tell how to validate memory manager blocks.  Choose any combination. (defconstant $gxNoMemoryManagerValidation #x0)(defconstant $gxApBlockValidation #x100)        ;  check the relevant block structures after each memory mgr. call (defconstant $gxFontBlockValidation #x200)      ;  check the system gxHeap as well (defconstant $gxApHeapValidation #x400)         ;  check the memory manager’s gxHeap after every mem. call (defconstant $gxFontHeapValidation #x800)       ;  check the system gxHeap as well (defconstant $gxCheckApHeapValidation #x1000)   ;  check the memory manager’s gxHeap if checking routine parameters (defconstant $gxCheckFontHeapValidation #x2000) ;  check the system gxHeap as well (def-mactype :gxvalidationlevel (find-mactype ':signed-long))(defconstant $no_draw_error 0);  gxShape type errors (defconstant $shape_emptyType 1)(defconstant $shape_inverse_fullType 2)(defconstant $rectangle_zero_width 3)(defconstant $rectangle_zero_height 4)(defconstant $polygon_empty 5)(defconstant $path_empty 6)(defconstant $bitmap_zero_width 7)(defconstant $bitmap_zero_height 8)(defconstant $text_empty 9)(defconstant $glyph_empty 10)(defconstant $layout_empty 11)(defconstant $picture_empty 12);  general gxShape errors (defconstant $shape_no_fill 13)(defconstant $shape_no_enclosed_area 14)(defconstant $shape_no_enclosed_pixels 15)(defconstant $shape_very_small 16)(defconstant $shape_very_large 17)(defconstant $shape_contours_cancel 18);  gxStyle errors (defconstant $pen_too_small 19)(defconstant $text_size_too_small 20)(defconstant $dash_empty 21)(defconstant $start_cap_empty 22)(defconstant $pattern_empty 23)(defconstant $textFace_empty 24)(defconstant $shape_primitive_empty 25)(defconstant $shape_primitive_very_small 26);  gxInk errors (defconstant $transfer_equals_noMode 27)(defconstant $transfer_matrix_ignores_source 28)(defconstant $transfer_matrix_ignores_device 29)(defconstant $transfer_source_reject 30)(defconstant $transfer_mode_ineffective 31)(defconstant $colorSet_no_entries 32)(defconstant $bitmap_colorSet_one_entry 33);  gxTransform errors (defconstant $transform_scale_too_small 34)(defconstant $transform_map_too_large 35)(defconstant $transform_move_too_large 36)(defconstant $transform_scale_too_large 37)(defconstant $transform_rotate_too_large 38)(defconstant $transform_perspective_too_large 39)(defconstant $transform_skew_too_large 40)(defconstant $transform_clip_no_intersection 41)(defconstant $transform_clip_empty 42)(defconstant $transform_no_viewPorts 43);  gxViewPort errors (defconstant $viewPort_disposed 44)(defconstant $viewPort_clip_empty 45)(defconstant $viewPort_clip_no_intersection 46)(defconstant $viewPort_scale_too_small 47)(defconstant $viewPort_map_too_large 48)(defconstant $viewPort_move_too_large 49)(defconstant $viewPort_scale_too_large 50)(defconstant $viewPort_rotate_too_large 51)(defconstant $viewPort_perspective_too_large 52)(defconstant $viewPort_skew_too_large 53)(defconstant $viewPort_viewGroup_offscreen 54);  gxViewDevice errors (defconstant $viewDevice_clip_no_intersection 55)(defconstant $viewDevice_scale_too_small 56)(defconstant $viewDevice_map_too_large 57)(defconstant $viewDevice_move_too_large 58)(defconstant $viewDevice_scale_too_large 59)(defconstant $viewDevice_rotate_too_large 60)(defconstant $viewDevice_perspective_too_large 61)(defconstant $viewDevice_skew_too_large 62)(def-mactype :gxdrawerror (find-mactype ':signed-long))(def-mactype :gxuserdebugfunction (find-mactype ':pointer));  FUNCTION (str: ConstCStringPtr; message: LONGINT; reference: LONGINT): BOOLEAN; ;; Inline instructions called as foreign function(deftrap-inline ("_GXGetShapeDrawError" ("QuickDrawGXLib"))  ((source :pointer))   :signed-long   (:c #x303C #x1EE #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateAll" ("QuickDrawGXLib"))  ()   nil   (:c #x303C #x1EF #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateColorSet" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F0 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateColorProfile" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F1 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateGraphicsClient" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F2 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateInk" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F3 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateShape" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F4 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateStyle" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F5 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateTag" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F6 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateTransform" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F7 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateViewDevice" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F8 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateViewPort" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1F9 #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXValidateViewGroup" ("QuickDrawGXLib"))  ((target :pointer))   nil   (:c #x303C #x1FA #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetValidation" ("QuickDrawGXLib"))  ()   :signed-long   (:c #x303C #x1FB #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXSetValidation" ("QuickDrawGXLib"))  ((level :signed-long))   nil   (:c #x303C #x1FC #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetValidationError" ("QuickDrawGXLib"))  ((procedureName :pointer) (argument :pointer) (argumentNumber (:pointer :signed-long)))   :signed-long   (:c #x303C #x1FD #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXGetUserGraphicsDebug" ("QuickDrawGXLib"))  ((reference (:pointer :signed-long)))   :pointer   (:c #x303C #x1FF #xA832) );; Inline instructions called as foreign function(deftrap-inline ("_GXSetUserGraphicsDebug" ("QuickDrawGXLib"))  ((userFunction :pointer) (reference :signed-long))   nil   (:c #x303C #x200 #xA832) ); $ALIGN RESET; $POP; $SETC UsingIncludes := GXErrorsIncludes; $ENDC                                         ; __GXERRORS__; $IFC NOT UsingIncludes; $ENDC(provide-interface 'GXErrors)