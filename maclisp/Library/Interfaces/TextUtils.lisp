(in-package :TRAPS);;;;;;;;;;;;;;;;;;;;;;;;;;; Modification History;;;; 03/28/97 bill merge back in changes that shipped with 4.0;; ------------  4.1b1;; 05/23/96 bill Fix _EqualString;; 03/06/96 bill Map old names to new names;;; Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:TextUtils.p"; at Tuesday June 6,1995 2:22:19 pm.; ;  	File:		TextUtils.p;  ;  	Contains:	Text Utilities Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __TEXTUTILS__; $SETC __TEXTUTILS__ := 1; $I+; $SETC TextUtilsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __SCRIPT__|#(require-interface 'Script)#|                                              ; $I Script.p |#                                             ; $ENDC; 	Quickdraw.p													; 		MixedMode.p												; 		QuickdrawText.p											; 	IntlResources.p												; 	Events.p													; 		OSUtils.p												; 			Memory.p											#|                                              ; $IFC UNDEFINED __OSUTILS__|#(require-interface 'OSUtils)#|                                              ; $I OSUtils.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+; ; ; 	Here are the current routine names and the translations to the older forms.; 	Please use the newer forms in all new code and migrate the older names out of existing; 	code as maintainance permits.; 	; 	New Name					Old Name(s); 	; 	CompareString				IUCompPString IUMagString IUMagPString IUCompString ; 	CompareText; 	DateString					IUDatePString IUDateString ; 	EqualString							; 	ExtendedToString			FormatX2Str; 	FindScriptRun; 	FindWordBreaks				NFindWord FindWord; 	FormatRecToString			Format2Str; 	GetIndString			; 	GetString; 	IdenticalString				IUMagIDString IUMagIDPString IUEqualString IUEqualPString; 	IdenticalText; 	InitDateCache; 	LanguageOrder				IULangOrder; 	LongDateString				IULDateString; 	LongTimeString				IULTimeString; 	LowercaseText				LwrText LowerText; 	Munger; 	NewString				; 	NumToString				; 	RelString				; 	ReplaceText; 	ScriptOrder					IUScriptOrder; 	SetString				; 	StringOrder					IUStringOrder; 	StringToDate				String2Date; 	StringToExtended			FormatStr2X; 	StringToFormatRec			Str2Format; 	StringToNum				; 	StringToTime								; 	StripDiacritics				StripText; 	StyledLineBreak; 	TextOrder; 	TimeString					IUTimeString IUTimePString; 	TruncString; 	TruncText; 	UpperString					UprString; 	UppercaseStripDiacritics	StripUpperText; 	UppercaseText				UprText UprText; ;  New constants for System 7.0: ;  Constants for truncWhere argument in TruncString and TruncText (defconstant $truncEnd 0)                       ;  Truncate at end (defconstant $truncMiddle #x4000)               ;  Truncate in middle (defconstant $smTruncEnd 0)                     ;  Truncate at end - obsolete (defconstant $smTruncMiddle #x4000)             ;  Truncate in middle - obsolete ;  Constants for TruncString and TruncText results (defconstant $notTruncated 0)                   ;  No truncation was necessary (defconstant $truncated 1)                      ;  Truncation performed (defconstant $truncErr -1)                      ;  General error (defconstant $smNotTruncated 0)                 ;  No truncation was necessary - obsolete (defconstant $smTruncated 1)                    ;  Truncation performed	- obsolete (defconstant $smTruncErr -1)                    ;  General error - obsolete (defconstant $fVNumber 0)                       ;  first version of NumFormatString ;  Special language code values for Language Order (defconstant $systemCurLang -2)                 ;  current (itlbLang) lang for system script (defconstant $systemDefLang -3)                 ;  default (table) lang for system script (defconstant $currentCurLang -4)                ;  current (itlbLang) lang for current script (defconstant $currentDefLang -5)                ;  default lang for current script (defconstant $scriptCurLang -6)                 ;  current (itlbLang) lang for specified script (defconstant $scriptDefLang -7)                 ;  default language for a specified script (defconstant $iuSystemCurLang -2)               ;  <obsolete> current (itlbLang) lang for system script (defconstant $iuSystemDefLang -3)               ;  <obsolete> default (table) lang for system script (defconstant $iuCurrentCurLang -4)              ;  <obsolete> current (itlbLang) lang for current script (defconstant $iuCurrentDefLang -5)              ;  <obsolete> default lang for current script (defconstant $iuScriptCurLang -6)               ;  <obsolete> current (itlbLang) lang for specified script ;  <obsolete> default language for a specified script (defconstant $iuScriptDefLang -7)(def-mactype :styledlinebreakcode (find-mactype ':signed-byte))(defconstant $smBreakWord 0)(defconstant $smBreakChar 1)(defconstant $smBreakOverflow 2)(def-mactype :formatclass (find-mactype ':signed-byte))(defconstant $fPositive 0)(defconstant $fNegative 1)(defconstant $fZero 2)(def-mactype :formatresulttype (find-mactype ':signed-byte))(defconstant $fFormatOK 0)(defconstant $fBestGuess 1)(defconstant $fOutOfSynch 2)(defconstant $fSpuriousChars 3)(defconstant $fMissingDelimiter 4)(defconstant $fExtraDecimal 5)(defconstant $fMissingLiteral 6)(defconstant $fExtraExp 7)(defconstant $fFormatOverflow 8)(defconstant $fFormStrIsNAN 9)(defconstant $fBadPartsTable 10)(defconstant $fExtraPercent 11)(defconstant $fExtraSeparator 12)(defconstant $fEmptyFormatString 13)(defrecord NumFormatString    (fLength :unsigned-byte)   (fVersion :unsigned-byte)   (data (:array :character 254 :packed))       ;  private data    )(%define-record :numformatstringrec (find-record-descriptor :numformatstring))(defrecord FVector    (start :signed-integer)   (length :signed-integer)   );  index by [fPositive..fZero] (defrecord TripleInt (array (array :fvector 3)))(defrecord ScriptRunStatus    (script :signed-byte)   (runVariant :signed-byte)   );  New types for System 7.0: ;  Type for truncWhere parameter in new TruncString, TruncText (def-mactype :trunccode (find-mactype ':signed-integer))(defconstant $shortDate 0)(defconstant $longDate 1)(defconstant $abbrevDate 2)(def-mactype :dateform (find-mactype ':signed-byte));  StringToDate status values (defconstant $fatalDateTime #x8000)             ;  StringToDate and String2Time mask to a fatal error (defconstant $longDateFound 1)                  ;  StringToDate mask to long date found (defconstant $leftOverChars 2)                  ;  StringToDate & Time mask to warn of left over characters (defconstant $sepNotIntlSep 4)                  ;  StringToDate & Time mask to warn of non-standard separators (defconstant $fieldOrderNotIntl 8)              ;  StringToDate & Time mask to warn of non-standard field order (defconstant $extraneousStrings 16)             ;  StringToDate & Time mask to warn of unparsable strings in text (defconstant $tooManySeps 32)                   ;  StringToDate & Time mask to warn of too many separators (defconstant $sepNotConsistent 64)              ;  StringToDate & Time mask to warn of inconsistent separators (defconstant $tokenErr #x8100)                  ;  StringToDate & Time mask for 'tokenizer err encountered' (defconstant $cantReadUtilities #x8200)(defconstant $dateTimeNotFound #x8400)(defconstant $dateTimeInvalid #x8800)(def-mactype :stringtodatestatus (find-mactype ':signed-integer))(def-mactype :string2datestatus (find-mactype ':signed-integer))(defrecord DateCacheRecord    (hidden (:array :signed-integer 256))        ;  only for temporary use    )(def-mactype :datecacheptr (find-mactype '(:pointer :datecacherecord)))(defrecord BreakTable    (charTypes (:array :character 256 :packed))   (tripleLength :signed-integer)   (triples (:array :signed-integer 1))   )(def-mactype :breaktableptr (find-mactype '(:pointer :breaktable)));  New NBreakTable for System 7.0: (defrecord NBreakTable    (flags1 :signed-byte)   (flags2 :signed-byte)   (version :signed-integer)   (classTableOff :signed-integer)   (auxCTableOff :signed-integer)   (backwdTableOff :signed-integer)   (forwdTableOff :signed-integer)   (doBackup :signed-integer)   (length :signed-integer)                     ;  length of NBreakTable    (charTypes (:array :character 256 :packed))   (tables (:array :signed-integer 1))   )(def-mactype :nbreaktableptr (find-mactype '(:pointer :nbreaktable))); ; 	The following functions are new names that work on 68k and PowerPC; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_InitDateCache" ((theCache (:pointer :datecacherecord)))   (:stack :signed-integer)   (:stack-trap #xA8B5 theCache ((+ (ash 33284 16) 65528) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Munger" ((h :handle) (offset :signed-long) (ptr1 :pointer) (len1 :signed-long) (ptr2 :pointer) (len2 :signed-long))   (:stack :signed-long)   (:stack-trap #xA9E0)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_NewString" ((theString (:string 255)))   (:stack (:handle (:string 255)))   (:stack-trap #xA906)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetString" ((theString (:handle (:string 255))) (strNew (:string 255)))   nil   (:stack-trap #xA907)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetString" ((stringID :signed-integer))   (:stack (:handle (:string 255)))   (:stack-trap #xA9BA)); $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_GetIndString" ((theString (:pointer (:string 255))) (strListID :signed-integer) (index :signed-integer))   nil   () )                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap "_ScriptOrder" ((script1 :signed-integer) (script2 :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED script1 script2 (30 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_StyledLineBreak" ((textPtr :pointer) (textLen :signed-long) (textStart :signed-long) (textEnd :signed-long) (flags :signed-long) (textWidth (:pointer :signed-long)) (textOffset (:pointer :signed-long)))   (:stack :signed-byte)   (:stack-trap #xA8B5 textPtr textLen textStart textEnd flags textWidth textOffset ((+ (ash 33308 16) 65534) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_TruncString" ((width :signed-integer) (theString (:pointer (:string 255))) (truncWhere :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA8B5 width theString truncWhere ((+ (ash 33288 16) 65504) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_TruncText" ((width :signed-integer) (textPtr :pointer) (length (:pointer :signed-integer)) (truncWhere :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA8B5 width textPtr length truncWhere ((+ (ash 33292 16) 65502) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ReplaceText" ((baseText :handle) (substitutionText :handle) (key (:pointer (:string 15))))   (:stack :signed-integer)   (:stack-trap #xA8B5 baseText substitutionText key ((+ (ash 33292 16) 65500) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_FindWordBreaks" ((textPtr :pointer) (textLength :signed-integer) (offset :signed-integer) (leadingEdge :boolean) (breaks (:pointer :breaktable)) (offsets (:pointer :offsettable)) (script :signed-integer))   nil   (:stack-trap #xA8B5 textPtr textLength offset leadingEdge breaks offsets script ((+ (ash 49170 16) 26) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_LowercaseText" ((textPtr :pointer) (len :signed-integer) (script :signed-integer))   nil   (#x3F3C #x0 #x2F3C #x800A #xFFB6 #xA8B5) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_UppercaseText" ((textPtr :pointer) (len :signed-integer) (script :signed-integer))   nil   (#x3F3C #x400 #x2F3C #x800A #xFFB6 #xA8B5) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_StripDiacritics" ((textPtr :pointer) (len :signed-integer) (script :signed-integer))   nil   (#x3F3C #x200 #x2F3C #x800A #xFFB6 #xA8B5) ); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_UppercaseStripDiacritics" ((textPtr :pointer) (len :signed-integer) (script :signed-integer))   nil   (#x3F3C #x600 #x2F3C #x800A #xFFB6 #xA8B5) ); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_FindScriptRun" ((textPtr :pointer) (textLen :signed-long) (lenUsed (:pointer :signed-long)))   (:stack :scriptrunstatus)   (:stack-trap #xA8B5 textPtr textLen lenUsed ((+ (ash 33292 16) 38) :signed-longint))); $ENDC;; Warning: No calling method defined for this trap;; Using mcl2 version of equalstring because there is no implementation in the new headers(deftrap "_EqualString"         ((str1 (:string 255)) (str2 (:string 255)))         (:d0 :boolean)  (:register-trap 41020 :a0 (%inc-ptr str1) :a1                  (%inc-ptr str2) :d0                  (logior (the fixnum                            (ash (the fixnum (%get-byte str1)) 16))                          (the fixnum (%get-byte str2)))));; Warning: No calling method defined for this trap(deftrap-inline "_UpperString" ((theString (:pointer (:string 255))) (diacSensitive :boolean))   nil   () );; Warning: No calling method defined for this trap;; Using mcl2 version of stringtonum because there is no implementation in the new headers(deftrap "_StringToNum"         ((thestring (:string 255)) (thenum (:pointer :signed-long)))         nil         (:no-trap          (%put-long thenum (%gen-trap 43502 :a0 thestring :word 1 :d0))));; Warning: No calling method defined for this trap;; Using mcl2 version of numtostring because there is no implementation in the new headers(deftrap "_NumToString"         ((thenum :signed-long) (thestring (:pointer (:string 255))))         nil         (:no-trap (%gen-trap 43502 :d0 thenum :a0 thestring :word 0)));; Warning: No calling method defined for this trap;; Using mcl2 version of relstring because there is no implementation in the new headers(deftrap "_RelString"         ((str1 (:string 255)) (str2 (:string 255)))         (:d0 :signed-integer)         (:register-trap 41040 :a0 (%inc-ptr str1) :a1 (%inc-ptr str2) :d0          (+ (ash 16 (%get-unsigned-byte str1)) (%get-unsigned-byte str2)))); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_StringToDate" ((textPtr :pointer) (textLen :signed-long) (theCache (:pointer :datecacherecord)) (lengthUsed (:pointer :signed-long)) (dateTime (:pointer :longdaterec)))   (:stack :signed-integer)   (:stack-trap #xA8B5 textPtr textLen theCache lengthUsed dateTime ((+ (ash 33300 16) 65526) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_StringToTime" ((textPtr :pointer) (textLen :signed-long) (theCache (:pointer :datecacherecord)) (lengthUsed (:pointer :signed-long)) (dateTime (:pointer :longdaterec)))   (:stack :signed-integer)   (:stack-trap #xA8B5 textPtr textLen theCache lengthUsed dateTime ((+ (ash 33300 16) 65524) :signed-longint))); $ENDC; CONST                                         ; CONST; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_ExtendedToString" ((x (:pointer :pointer)) (myCanonical (:pointer :numformatstring)) (partsTable (:pointer :numberparts)) (outString (:pointer (:string 255))))   (:stack :signed-integer)   (:stack-trap #xA8B5 x myCanonical partsTable outString ((+ (ash 33296 16) 65512) :signed-longint))); $ENDC; CONST                                         ; CONST; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_StringToExtended" ((source (:string 255)) (myCanonical (:pointer :numformatstring)) (partsTable (:pointer :numberparts)) (x (:pointer :pointer)))   (:stack :signed-integer)   (:stack-trap #xA8B5 source myCanonical partsTable x ((+ (ash 33296 16) 65510) :signed-longint))); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_StringToFormatRec" ((inString (:string 255)) (partsTable (:pointer :numberparts)) (outString (:pointer :numformatstring)))   (:stack :signed-integer)   (:stack-trap #xA8B5 inString partsTable outString ((+ (ash 33292 16) 65516) :signed-longint))); $ENDC; CONST                                         ; CONST; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_FormatRecToString" ((myCanonical (:pointer :numformatstring)) (partsTable (:pointer :numberparts)) (outString (:pointer (:string 255))) (positions (:pointer :tripleint)))   (:stack :signed-integer)   (:stack-trap #xA8B5 myCanonical partsTable outString positions ((+ (ash 33296 16) 65514) :signed-longint))); $ENDC; ; 	The following functions are old names, but are required for PowerPC builds; 	becuase InterfaceLib exports these names, instead of the new ones.; ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap "_IUMagString" ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen (10 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap "_IUMagIDString" ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen (12 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This should have been renamed to CompareText, but it wasn't(deftrap "_IUMagPString"         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (itl2Handle :handle))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen itl2Handle (26 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to be renamed to "IdenticalText", but it wasn't(deftrap "_IUMagIDPString"         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (itl2Handle :handle))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen itl2Handle (28 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_IUDateString" ((dateTime :signed-long) (longFlag :signed-byte) (result (:pointer (:string 255))))   nil   (#x4267 #xA9ED) ); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap "_IUTimeString" ((dateTime :signed-long) (wantSeconds :boolean) (result (:pointer (:string 255))))   nil   (:stack-trap #xA9ED dateTime wantSeconds result (2 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to be the old name for "DateString", but the library has;; this and not DateString(deftrap "_IUDatePString"         ((dateTime :signed-long) (longFlag :signed-byte) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime longFlag result intlHandle (14 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to have been renamed to "TimeString"(deftrap "_IUTimePString"         ((dateTime :signed-long) (wantSeconds :boolean) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime wantSeconds result intlHandle (16 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to be the old name for "LongDateString", but they're reversed(deftrap "_IULDateString"         ((dateTime (:pointer :wide)) (longFlag :signed-byte) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime longFlag result intlHandle (20 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to be the old name for LongTimeString, but they're reversed(deftrap "_IULTimeString"         ((dateTime (:pointer :wide)) (wantSeconds :boolean) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime wantSeconds result intlHandle (22 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_IUScriptOrder" "ScriptOrder")         ((script1 :signed-integer) (script2 :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED script1 script2 (30 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to have been renamed to "LanguageOrder"(deftrap "_IULangOrder"         ((language1 :signed-integer) (language2 :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED language1 language2 (32 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to have been renamed to "TextOrder"(deftrap "_IUTextOrder"         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (aScript :signed-integer) (bScript :signed-integer) (aLang :signed-integer) (bLang :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen aScript bScript aLang bLang (34 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_FindWord" ((textPtr :pointer) (textLength :signed-integer) (offset :signed-integer) (leadingEdge :boolean) (breaks (:pointer :breaktable)) (offsets (:pointer :offsettable)))   nil   (:stack-trap #xA8B5 textPtr textLength offset leadingEdge breaks offsets ((+ (ash 32786 16) 26) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-longword-on-stack(deftrap "_NFindWord" ((textPtr :pointer) (textLength :signed-integer) (offset :signed-integer) (leadingEdge :boolean) (nbreaks (:pointer :nbreaktable)) (offsets (:pointer :offsettable)))   nil   (:stack-trap #xA8B5 textPtr textLength offset leadingEdge nbreaks offsets ((+ (ash 32786 16) 65506) :signed-longint))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_UprText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA054 :d0 len :a0 textPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_LwrText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA056 :d0 len :a0 textPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_LowerText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA056 :d0 len :a0 textPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_StripText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA256 :d0 len :a0 textPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_UpperText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA456 :d0 len :a0 textPtr)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator register-trap-1-arg-in-d0-1-arg-in-a0(deftrap "_StripUpperText" ((textPtr :pointer) (len :signed-integer))   nil   (:register-trap #xA656 :d0 len :a0 textPtr)); $ENDC;; Warning: No calling method defined for this trap;; Using mcl2 version of iucomppstring because there is no implementation in the new headers;; This is supposed to have been renamed to "CompareString"(deftrap "_IUCompPString"         ((astr (:string 255)) (bstr (:string 255)) (itl2handle :handle))         (:no-trap :signed-integer)         (:no-trap (gopmagp 26 astr bstr itl2handle)));; Warning: No calling method defined for this trap;; Using mcl2 version of iuequalpstring because there is no implementation in the new headers;; This was supposed to have been renamed to "IdenticalString"(deftrap "_IUEqualPString"         ((astr (:string 255)) (bstr (:string 255)) (itl2handle :handle))         (:no-trap :signed-integer)         (:no-trap (gopmagp 28 astr bstr itl2handle)));; Warning: No calling method defined for this trap;; This was supposed to have been renamed to "StringOrder"(deftrap-inline "_IUStringOrder"  ((aStr (:string 255)) (bStr (:string 255)) (aScript :signed-integer) (bScript :signed-integer) (aLang :signed-integer) (bLang :signed-integer))   :signed-integer   () );; Warning: No calling method defined for this trap;; Using mcl2 version of iucompstring because there is no implementation in the new headers(deftrap "_IUCompString"         ((astr (:string 255)) (bstr (:string 255)))         (:no-trap :signed-integer)         (:no-trap (gopmag 10 astr bstr))); ; 	The following provide direct function prototypes for new names for 68k; ;; Warning: No calling method defined for this trap;; Using mcl2 version of iuequalstring because there is no implementation in the new headers(deftrap "_IUEqualString"         ((astr (:string 255)) (bstr (:string 255)))         (:no-trap :signed-integer)         (:no-trap (gopmag 12 astr bstr))); $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; This is supposed to be the new trap name, but InterfaceLib has;; the old entry point.(deftrap ("_DateString" "IUDatePString")         ((dateTime :signed-long) (longFlag :signed-byte) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime longFlag result intlHandle (14 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_TimeString" "IUTimePString")         ((dateTime :signed-long) (wantSeconds :boolean) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime wantSeconds result intlHandle (16 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_LongDateString" "IULDateString") ((dateTime (:pointer :wide)) (longFlag :signed-byte) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime longFlag result intlHandle (20 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_LongTimeString" "IULTimeString")         ((dateTime (:pointer :wide)) (wantSeconds :boolean) (result (:pointer (:string 255))) (intlHandle :handle))   nil   (:stack-trap #xA9ED dateTime wantSeconds result intlHandle (22 :signed-integer))); $ENDC;; Warning: No calling method defined for this trap(deftrap-inline ("_CompareString" "IUCompPString")  ((aStr (:string 255)) (bStr (:string 255)) (itl2Handle :handle))   :signed-integer   () );; Warning: No calling method defined for this trap(deftrap-inline ("_IdenticalString" "IUEqualPString")  ((aStr (:string 255)) (bStr (:string 255)) (itl2Handle :handle))   :signed-integer   () )                                         ; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack;; T(deftrap ("_CompareText" "IUMagPString")         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (itl2Handle :handle))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen itl2Handle (26 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_IdenticalText" "IUMagIDPString")         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (itl2Handle :handle))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen itl2Handle (28 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_LanguageOrder" "IULangOrder")         ((language1 :signed-integer) (language2 :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED language1 language2 (32 :signed-integer))); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator push-a-constant-word-on-stack(deftrap ("_TextOrder" "IUTextOrder")         ((aPtr :pointer) (bPtr :pointer) (aLen :signed-integer) (bLen :signed-integer) (aScript :signed-integer) (bScript :signed-integer) (aLang :signed-integer) (bLang :signed-integer))   (:stack :signed-integer)   (:stack-trap #xA9ED aPtr bPtr aLen bLen aScript bScript aLang bLang (34 :signed-integer))); $ENDC                                              ; $IFC NOT OLDROUTINELOCATIONS ;; No calling method defined for this trap(deftrap-inline ("_StringOrder" "IUStringOrder")  ((aStr (:string 255)) (bStr (:string 255)) (aScript :signed-integer) (bScript :signed-integer) (aLang :signed-integer) (bLang :signed-integer))   :signed-integer   () );; No calling method defined for this trap;; Using mcl2 version of c2pstrproc because there is no implementation in the new headers(deftrap "_C2PStrProc" ((cstring :pointer)) nil (:no-trap (c2pstr cstring)));; No calling method defined for this trap;; Using mcl2 version of c2pstr because there is no implementation in the new headers(deftrap "_C2PStr"         ((cstring :pointer))         (:no-trap (:pointer (:string 255)))         (:no-trap (c2pstr cstring)));; No calling method defined for this trap;; Using mcl2 version of p2cstrproc because there is no implementation in the new headers(deftrap ("_P2CStrProc" "P2CStr")         ((pstring (:pointer (:string 255))))         nil         (:no-trap (p2cstr pstring)))                                             ; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := TextUtilsIncludes; $ENDC; __TEXTUTILS__; $IFC NOT UsingIncludes;; Warning: No calling method defined for this trap;; Using mcl2 version of p2cstr because there is no implementation in the new headers(deftrap "_P2CStr"         ((pstring (:pointer (:string 255))))         (:no-trap (:pointer (:string 255)))         (:no-trap (p2cstr pstring))); $ENDC(provide-interface 'TextUtils)