(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:LowMem.p"; at Tuesday June 6,1995 2:13:11 pm.; ;  	File:		LowMem.p;  ;  	Contains:	Low Memory Accessor Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __LOWMEM__; $SETC __LOWMEM__ := 1; $I+; $SETC LowMemIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __CONTROLS__|#(require-interface 'Controls)#|                                              ; $I Controls.p |#                                             ; $ENDC; 	Quickdraw.p													; 		MixedMode.p												; 		QuickdrawText.p											; 	Menus.p														; 		Memory.p												#|                                              ; $IFC UNDEFINED __EVENTS__|#(require-interface 'Events)#|                                              ; $I Events.p |#                                             ; $ENDC; 	OSUtils.p													#|                                              ; $IFC UNDEFINED __FILES__|#(require-interface 'Files)#|                                              ; $I Files.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __FONTS__|#(require-interface 'Fonts)#|                                              ; $I Fonts.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MEMORY__|#(require-interface 'Memory)#|                                              ; $I Memory.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __MENUS__|#(require-interface 'Menus)#|                                              ; $I Menus.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __OSUTILS__|#(require-interface 'OSUtils)#|                                              ; $I OSUtils.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __QUICKDRAW__|#(require-interface 'Quickdraw)#|                                              ; $I Quickdraw.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __RESOURCES__|#(require-interface 'Resources)#|                                              ; $I Resources.p |#                                             ; $ENDC#|                                              ; $IFC UNDEFINED __WINDOWS__|#(require-interface 'Windows)#|                                              ; $I Windows.p |#                                             ; $ENDC; $PUSH; $ALIGN MAC68K; $LibExport+; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetScrVRes" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 258))));  MOVE.w $0102,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrVRes" ((value :signed-integer))   nil   (#x31DF #x102) )                             ;  MOVE.w (SP)+,$0102 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetScrHRes" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 260))));  MOVE.w $0104,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrHRes" ((value :signed-integer))   nil   (#x31DF #x104) )                             ;  MOVE.w (SP)+,$0104 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMemTop" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 264))))     ;  MOVE.l $0108,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMemTop" ((value :pointer))   nil   (#x21DF #x108) )                             ;  MOVE.l (SP)+,$0108 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetBufPtr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 268))))     ;  MOVE.l $010C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBufPtr" ((value :pointer))   nil   (#x21DF #x10C) )                             ;  MOVE.l (SP)+,$010C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetStackLowPoint" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 272))))     ;  MOVE.l $0110,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetStackLowPoint" ((value :pointer))   nil   (#x21DF #x110) )                             ;  MOVE.l (SP)+,$0110 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetHeapEnd" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 276))))     ;  MOVE.l $0114,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetHeapEnd" ((value :pointer))   nil   (#x21DF #x114) )                             ;  MOVE.l (SP)+,$0114 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTheZone" ()   (:no-trap (:pointer :zone))   (:no-trap (%get-ptr (%int-to-ptr 280))))     ;  MOVE.l $0118,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTheZone" ((value (:pointer :zone)))   nil   (#x21DF #x118) )                             ;  MOVE.l (SP)+,$0118 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetUTableBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 284))))     ;  MOVE.l $011C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetUTableBase" ((value :pointer))   nil   (#x21DF #x11C) )                             ;  MOVE.l (SP)+,$011C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetCPUFlag" ()   :signed-byte   (#x1EB8 #x12F) )                             ;  MOVE.b $012F,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCPUFlag" ((value :signed-byte))   nil   (#x11DF #x12F) )                             ;  MOVE.b (SP)+,$012F ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetApplLimit" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 304))))     ;  MOVE.l $0130,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetApplLimit" ((value :pointer))   nil   (#x21DF #x130) )                             ;  MOVE.l (SP)+,$0130 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSysEvtMask" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 324))));  MOVE.w $0144,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysEvtMask" ((value :signed-integer))   nil   (#x31DF #x144) )                             ;  MOVE.w (SP)+,$0144 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetRndSeed" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 342))));  MOVE.l $0156,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetRndSeed" ((value :signed-long))   nil   (#x21DF #x156) )                             ;  MOVE.l (SP)+,$0156 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSEvtEnb" ()   :signed-byte   (#x1EB8 #x15C) )                             ;  MOVE.b $015C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSEvtEnb" ((value :signed-byte))   nil   (#x11DF #x15C) )                             ;  MOVE.b (SP)+,$015C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTicks" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 362))));  MOVE.l $016A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTicks" ((value :signed-long))   nil   (#x21DF #x16A) )                             ;  MOVE.l (SP)+,$016A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetKeyThresh" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 398))));  MOVE.w $018E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetKeyThresh" ((value :signed-integer))   nil   (#x31DF #x18E) )                             ;  MOVE.w (SP)+,$018E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetKeyRepThresh" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 400))));  MOVE.w $0190,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetKeyRepThresh" ((value :signed-integer))   nil   (#x31DF #x190) )                             ;  MOVE.w (SP)+,$0190 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetUnitTableEntryCount" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 466))));  MOVE.w $01D2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetUnitTableEntryCount" ((value :signed-integer))   nil   (#x31DF #x1D2) )                             ;  MOVE.w (SP)+,$01D2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetVIA" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 468))))     ;  MOVE.l $01D4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetVIA" ((value :pointer))   nil   (#x21DF #x1D4) )                             ;  MOVE.l (SP)+,$01D4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSCCRd" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 472))))     ;  MOVE.l $01D8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSCCRd" ((value :pointer))   nil   (#x21DF #x1D8) )                             ;  MOVE.l (SP)+,$01D8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSCCWr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 476))))     ;  MOVE.l $01DC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSCCWr" ((value :pointer))   nil   (#x21DF #x1DC) )                             ;  MOVE.l (SP)+,$01DC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPValid" ()   :signed-byte   (#x1EB8 #x1F8) )                             ;  MOVE.b $01F8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPValid" ((value :signed-byte))   nil   (#x11DF #x1F8) )                             ;  MOVE.b (SP)+,$01F8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPATalkA" ()   :signed-byte   (#x1EB8 #x1F9) )                             ;  MOVE.b $01F9,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPATalkA" ((value :signed-byte))   nil   (#x11DF #x1F9) )                             ;  MOVE.b (SP)+,$01F9 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPATalkB" ()   :signed-byte   (#x1EB8 #x1FA) )                             ;  MOVE.b $01FA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPATalkB" ((value :signed-byte))   nil   (#x11DF #x1FA) )                             ;  MOVE.b (SP)+,$01FA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPConfig" ()   :signed-byte   (#x1EB8 #x1FB) )                             ;  MOVE.b $01FB,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPConfig" ((value :signed-byte))   nil   (#x11DF #x1FB) )                             ;  MOVE.b (SP)+,$01FB ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSPPortA" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 508))));  MOVE.w $01FC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPPortA" ((value :signed-integer))   nil   (#x31DF #x1FC) )                             ;  MOVE.w (SP)+,$01FC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSPPortB" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 510))));  MOVE.w $01FE,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPPortB" ((value :signed-integer))   nil   (#x31DF #x1FE) )                             ;  MOVE.w (SP)+,$01FE ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSPAlarm" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 512))));  MOVE.l $0200,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPAlarm" ((value :signed-long))   nil   (#x21DF #x200) )                             ;  MOVE.l (SP)+,$0200 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSPFont" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 516))));  MOVE.w $0204,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPFont" ((value :signed-integer))   nil   (#x31DF #x204) )                             ;  MOVE.w (SP)+,$0204 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPKbd" ()   :signed-byte   (#x1EB8 #x206) )                             ;  MOVE.b $0206,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPKbd" ((value :signed-byte))   nil   (#x11DF #x206) )                             ;  MOVE.b (SP)+,$0206 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPPrint" ()   :signed-byte   (#x1EB8 #x207) )                             ;  MOVE.b $0207,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPPrint" ((value :signed-byte))   nil   (#x11DF #x207) )                             ;  MOVE.b (SP)+,$0207 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPVolCtl" ()   :signed-byte   (#x1EB8 #x208) )                             ;  MOVE.b $0208,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPVolCtl" ((value :signed-byte))   nil   (#x11DF #x208) )                             ;  MOVE.b (SP)+,$0208 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPClikCaret" ()   :signed-byte   (#x1EB8 #x209) )                             ;  MOVE.b $0209,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPClikCaret" ((value :signed-byte))   nil   (#x11DF #x209) )                             ;  MOVE.b (SP)+,$0209 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSPMisc2" ()   :signed-byte   (#x1EB8 #x20B) )                             ;  MOVE.b $020B,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSPMisc2" ((value :signed-byte))   nil   (#x11DF #x20B) )                             ;  MOVE.b (SP)+,$020B ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTime" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 524))));  MOVE.l $020C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTime" ((value :signed-long))   nil   (#x21DF #x20C) )                             ;  MOVE.l (SP)+,$020C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetBootDrive" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 528))));  MOVE.w $0210,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBootDrive" ((value :signed-integer))   nil   (#x31DF #x210) )                             ;  MOVE.w (SP)+,$0210 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSFSaveDisk" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 532))));  MOVE.w $0214,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSFSaveDisk" ((value :signed-integer))   nil   (#x31DF #x214) )                             ;  MOVE.w (SP)+,$0214 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetKbdLast" ()   :signed-byte   (#x1EB8 #x218) )                             ;  MOVE.b $0218,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetKbdLast" ((value :signed-byte))   nil   (#x11DF #x218) )                             ;  MOVE.b (SP)+,$0218 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetKbdType" ()   :signed-byte   (#x1EB8 #x21E) )                             ;  MOVE.b $021E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetKbdType" ((value :signed-byte))   nil   (#x11DF #x21E) )                             ;  MOVE.b (SP)+,$021E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetMemErr" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 544))));  MOVE.w $0220,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMemErr" ((value :signed-integer))   nil   (#x31DF #x220) )                             ;  MOVE.w (SP)+,$0220 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSdVolume" ()   :signed-byte   (#x1EB8 #x260) )                             ;  MOVE.b $0260,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSdVolume" ((value :signed-byte))   nil   (#x11DF #x260) )                             ;  MOVE.b (SP)+,$0260 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSoundPtr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 610))))     ;  MOVE.l $0262,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSoundPtr" ((value :pointer))   nil   (#x21DF #x262) )                             ;  MOVE.l (SP)+,$0262 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSoundBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 614))))     ;  MOVE.l $0266,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSoundBase" ((value :pointer))   nil   (#x21DF #x266) )                             ;  MOVE.l (SP)+,$0266 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetSoundLevel" ()   :signed-byte   (#x1EB8 #x27F) )                             ;  MOVE.b $027F,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSoundLevel" ((value :signed-byte))   nil   (#x11DF #x27F) )                             ;  MOVE.b (SP)+,$027F ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCurPitch" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 640))));  MOVE.w $0280,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurPitch" ((value :signed-integer))   nil   (#x31DF #x280) )                             ;  MOVE.w (SP)+,$0280 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetROM85" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 654))));  MOVE.w $028E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetROM85" ((value :signed-integer))   nil   (#x31DF #x28E) )                             ;  MOVE.w (SP)+,$028E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetPortBUse" ()   :signed-byte   (#x1EB8 #x291) )                             ;  MOVE.b $0291,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetPortBUse" ((value :signed-byte))   nil   (#x11DF #x291) )                             ;  MOVE.b (SP)+,$0291 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetGNEFilter" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 666))))     ;  MOVE.l $029A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetGNEFilter" ((value :pointer))   nil   (#x21DF #x29A) )                             ;  MOVE.l (SP)+,$029A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSysZone" ()   (:no-trap (:pointer :zone))   (:no-trap (%get-ptr (%int-to-ptr 678))))     ;  MOVE.l $02A6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysZone" ((value (:pointer :zone)))   nil   (#x21DF #x2A6) )                             ;  MOVE.l (SP)+,$02A6 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetApplZone" ()   (:no-trap (:pointer :zone))   (:no-trap (%get-ptr (%int-to-ptr 682))))     ;  MOVE.l $02AA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetApplZone" ((value (:pointer :zone)))   nil   (#x21DF #x2AA) )                             ;  MOVE.l (SP)+,$02AA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetROMBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 686))))     ;  MOVE.l $02AE,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetROMBase" ((value :pointer))   nil   (#x21DF #x2AE) )                             ;  MOVE.l (SP)+,$02AE ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetRAMBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 690))))     ;  MOVE.l $02B2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetRAMBase" ((value :pointer))   nil   (#x21DF #x2B2) )                             ;  MOVE.l (SP)+,$02B2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDSAlertTab" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 698))))     ;  MOVE.l $02BA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDSAlertTab" ((value :pointer))   nil   (#x21DF #x2BA) )                             ;  MOVE.l (SP)+,$02BA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDoubleTime" ()   (:no-trap :unsigned-long)   (:no-trap (%get-unsigned-long (%int-to-ptr 752))));  MOVE.l $02F0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDoubleTime" ((value :unsigned-long))   nil   (#x21DF #x2F0) )                             ;  MOVE.l (SP)+,$02F0 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCaretTime" ()   (:no-trap :unsigned-long)   (:no-trap (%get-unsigned-long (%int-to-ptr 756))));  MOVE.l $02F4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCaretTime" ((value :unsigned-long))   nil   (#x21DF #x2F4) )                             ;  MOVE.l (SP)+,$02F4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetScrDmpEnb" ()   :signed-byte   (#x1EB8 #x2F8) )                             ;  MOVE.b $02F8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrDmpEnb" ((value :signed-byte))   nil   (#x11DF #x2F8) )                             ;  MOVE.b (SP)+,$02F8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetBufTgFNum" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 764))));  MOVE.l $02FC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBufTgFNum" ((value :signed-long))   nil   (#x21DF #x2FC) )                             ;  MOVE.l (SP)+,$02FC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetBufTgFFlg" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 768))));  MOVE.w $0300,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBufTgFFlg" ((value :signed-integer))   nil   (#x31DF #x300) )                             ;  MOVE.w (SP)+,$0300 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetBufTgFBkNum" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 770))));  MOVE.w $0302,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBufTgFBkNum" ((value :signed-integer))   nil   (#x31DF #x302) )                             ;  MOVE.w (SP)+,$0302 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetBufTgDate" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 772))));  MOVE.l $0304,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetBufTgDate" ((value :signed-long))   nil   (#x21DF #x304) )                             ;  MOVE.l (SP)+,$0304 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetLo3Bytes" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 794))));  MOVE.l $031A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetLo3Bytes" ((value :signed-long))   nil   (#x21DF #x31A) )                             ;  MOVE.l (SP)+,$031A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMinStack" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 798))));  MOVE.l $031E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMinStack" ((value :signed-long))   nil   (#x21DF #x31E) )                             ;  MOVE.l (SP)+,$031E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDefltStack" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 802))));  MOVE.l $0322,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDefltStack" ((value :signed-long))   nil   (#x21DF #x322) )                             ;  MOVE.l (SP)+,$0322 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetGZRootHnd" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 808))))     ;  MOVE.l $0328,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetGZRootHnd" ((value :handle))   nil   (#x21DF #x328) )                             ;  MOVE.l (SP)+,$0328 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetGZMoveHnd" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 816))))     ;  MOVE.l $0330,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetGZMoveHnd" ((value :handle))   nil   (#x21DF #x330) )                             ;  MOVE.l (SP)+,$0330 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetFCBSPtr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 846))))     ;  MOVE.l $034E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetFCBSPtr" ((value :pointer))   nil   (#x21DF #x34E) )                             ;  MOVE.l (SP)+,$034E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDefVCBPtr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 850))))     ;  MOVE.l $0352,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDefVCBPtr" ((value :pointer))   nil   (#x21DF #x352) )                             ;  MOVE.l (SP)+,$0352 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCurDirStore" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 920))));  MOVE.l $0398,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurDirStore" ((value :signed-long))   nil   (#x21DF #x398) )                             ;  MOVE.l (SP)+,$0398 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetToExtFS" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 1010))))    ;  MOVE.l $03F2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetToExtFS" ((value :pointer))   nil   (#x21DF #x3F2) )                             ;  MOVE.l (SP)+,$03F2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetFSFCBLen" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 1014))));  MOVE.w $03F6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetFSFCBLen" ((value :signed-integer))   nil   (#x31DF #x3F6) )                             ;  MOVE.w (SP)+,$03F6 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetScrnBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2084))))    ;  MOVE.l $0824,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrnBase" ((value :pointer))   nil   (#x21DF #x824) )                             ;  MOVE.l (SP)+,$0824 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMainDevice" ()   (:no-trap (:handle :gdevice))   (:no-trap (%get-ptr (%int-to-ptr 2212))))    ;  MOVE.l $08A4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMainDevice" ((value (:handle :gdevice)))   nil   (#x21DF #x8A4) )                             ;  MOVE.l (SP)+,$08A4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDeviceList" ()   (:no-trap (:handle :gdevice))   (:no-trap (%get-ptr (%int-to-ptr 2216))))    ;  MOVE.l $08A8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDeviceList" ((value (:handle :gdevice)))   nil   (#x21DF #x8A8) )                             ;  MOVE.l (SP)+,$08A8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetQDColors" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2224))))    ;  MOVE.l $08B0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetQDColors" ((value :handle))   nil   (#x21DF #x8B0) )                             ;  MOVE.l (SP)+,$08B0 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetCrsrBusy" ()   :signed-byte   (#x1EB8 #x8CD) )                             ;  MOVE.b $08CD,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCrsrBusy" ((value :signed-byte))   nil   (#x11DF #x8CD) )                             ;  MOVE.b (SP)+,$08CD ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetWidthListHand" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2276))))    ;  MOVE.l $08E4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWidthListHand" ((value :handle))   nil   (#x21DF #x8E4) )                             ;  MOVE.l (SP)+,$08E4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetJournalRef" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2280))));  MOVE.w $08E8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJournalRef" ((value :signed-integer))   nil   (#x31DF #x8E8) )                             ;  MOVE.w (SP)+,$08E8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCrsrThresh" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2284))));  MOVE.w $08EC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCrsrThresh" ((value :signed-integer))   nil   (#x31DF #x8EC) )                             ;  MOVE.w (SP)+,$08EC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetJFetch" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2292))))    ;  MOVE.l $08F4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJFetch" ((value :pointer))   nil   (#x21DF #x8F4) )                             ;  MOVE.l (SP)+,$08F4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetJStash" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2296))))    ;  MOVE.l $08F8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJStash" ((value :pointer))   nil   (#x21DF #x8F8) )                             ;  MOVE.l (SP)+,$08F8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetJIODone" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2300))))    ;  MOVE.l $08FC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJIODone" ((value :pointer))   nil   (#x21DF #x8FC) )                             ;  MOVE.l (SP)+,$08FC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCurApRefNum" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2304))));  MOVE.w $0900,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurApRefNum" ((value :signed-integer))   nil   (#x31DF #x900) )                             ;  MOVE.w (SP)+,$0900 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCurrentA5" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2308))))    ;  MOVE.l $0904,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurrentA5" ((value :pointer))   nil   (#x21DF #x904) )                             ;  MOVE.l (SP)+,$0904 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCurStackBase" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2312))))    ;  MOVE.l $0908,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurStackBase" ((value :pointer))   nil   (#x21DF #x908) )                             ;  MOVE.l (SP)+,$0908 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCurJTOffset" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2356))));  MOVE.w $0934,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurJTOffset" ((value :signed-integer))   nil   (#x31DF #x934) )                             ;  MOVE.w (SP)+,$0934 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCurPageOption" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2358))));  MOVE.w $0936,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurPageOption" ((value :signed-integer))   nil   (#x31DF #x936) )                             ;  MOVE.w (SP)+,$0936 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetHiliteMode" ()   :signed-byte   (#x1EB8 #x938) )                             ;  MOVE.b $0938,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetHiliteMode" ((value :signed-byte))   nil   (#x11DF #x938) )                             ;  MOVE.b (SP)+,$0938 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetPrintErr" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2372))));  MOVE.w $0944,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetPrintErr" ((value :signed-integer))   nil   (#x31DF #x944) )                             ;  MOVE.w (SP)+,$0944 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetScrapSize" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 2400))));  MOVE.l $0960,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrapSize" ((value :signed-long))   nil   (#x21DF #x960) )                             ;  MOVE.l (SP)+,$0960 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetScrapHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2404))))    ;  MOVE.l $0964,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrapHandle" ((value :handle))   nil   (#x21DF #x964) )                             ;  MOVE.l (SP)+,$0964 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetScrapCount" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2408))));  MOVE.w $0968,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrapCount" ((value :signed-integer))   nil   (#x31DF #x968) )                             ;  MOVE.w (SP)+,$0968 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetScrapState" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2410))));  MOVE.w $096A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrapState" ((value :signed-integer))   nil   (#x31DF #x96A) )                             ;  MOVE.w (SP)+,$096A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetScrapName" ()   (:no-trap (:pointer (:string 255)))   (:no-trap (%get-ptr (%int-to-ptr 2412))))    ;  MOVE.l $096C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetScrapName" ((value (:pointer (:string 255))))   nil   (#x21DF #x96C) )                             ;  MOVE.l (SP)+,$096C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetROMFont0" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2432))))    ;  MOVE.l $0980,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetROMFont0" ((value :handle))   nil   (#x21DF #x980) )                             ;  MOVE.l (SP)+,$0980 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetApFontID" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2436))));  MOVE.w $0984,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetApFontID" ((value :signed-integer))   nil   (#x31DF #x984) )                             ;  MOVE.w (SP)+,$0984 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetWindowList" ()   (:no-trap (:pointer :windowrecord))   (:no-trap (%get-ptr (%int-to-ptr 2518))))    ;  MOVE.l $09D6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSaveUpdate" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2522))));  MOVE.w $09DA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSaveUpdate" ((value :signed-integer))   nil   (#x31DF #x9DA) )                             ;  MOVE.w (SP)+,$09DA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetPaintWhite" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2524))));  MOVE.w $09DC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetPaintWhite" ((value :signed-integer))   nil   (#x31DF #x9DC) )                             ;  MOVE.w (SP)+,$09DC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetWMgrPort" ()   (:no-trap (:pointer :grafport))   (:no-trap (%get-ptr (%int-to-ptr 2526))))    ;  MOVE.l $09DE,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWMgrPort" ((value (:pointer :grafport)))   nil   (#x21DF #x9DE) )                             ;  MOVE.l (SP)+,$09DE ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetGrayRgn" ()   (:no-trap (:handle :region))   (:no-trap (%get-ptr (%int-to-ptr 2542))))    ;  MOVE.l $09EE,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDragHook" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2550))))    ;  MOVE.l $09F6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDragHook" ((value :pointer))   nil   (#x21DF #x9F6) )                             ;  MOVE.l (SP)+,$09F6 ; $ENDC; ;  To best work with future versions of the window manager,;  avoid using anything not defined with STRICT_WINDOWS;  set to true.  Most, if not all of these will still;  be supported in the next major version of the window manager;  but will trigger non-optimal compatibility code paths that;  should be avoided if possible.; ; $IFC NOT STRICT_WINDOWS ; ;  There is no reason to set the window list directly.;  Use BringToFront and SendBehind.; ;  If you need to do floating windows, avoid using GhostWindow ;  and especially avoid patching the window manager.; ;  See Dean Yu's article in Develop 15 about how to implement floating;  windows using low-level window manager calls.  The next generation;  Macintosh Window Manager will have built-in support for floating;  and modal windows.; ; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWindowList" ((value (:pointer :windowrecord)))   nil   (#x21DF #x9D6) )                             ;  MOVE.l (SP)+,$09D6 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetGhostWindow" ()   (:no-trap (:pointer :windowrecord))   (:no-trap (%get-ptr (%int-to-ptr 2692))))    ;  MOVE.l $0A84,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetGhostWindow" ((value (:pointer :windowrecord)))   nil   (#x21DF #xA84) )                             ;  MOVE.l (SP)+,$0A84 ; $ENDC; ;  The auxiliary window record list will be empty in future;  versions of the window manager.  There is no reason to ;  walk it or change it. ; ; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetAuxWinHead" ()   (:no-trap (:handle :auxwinrec))   (:no-trap (%get-ptr (%int-to-ptr 3280))))    ;  MOVE.l $0CD0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetAuxWinHead" ((value (:handle :auxwinrec)))   nil   (#x21DF #xCD0) )                             ;  MOVE.l (SP)+,$0CD0 ; $ENDC; ;  Please rely on the event manager to deliver activate and ;  deactivate events and on the window manager to generate them.; ;  The next generation window manager will queue these events;  rather than just slamming these lowmems with the latest;  generated event, so it pays to rely on the event manager.; ; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCurActivate" ()   (:no-trap (:pointer :windowrecord))   (:no-trap (%get-ptr (%int-to-ptr 2660))))    ;  MOVE.l $0A64,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurActivate" ((value (:pointer :windowrecord)))   nil   (#x21DF #xA64) )                             ;  MOVE.l (SP)+,$0A64 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetCurDeactive" ()   (:no-trap (:pointer :windowrecord))   (:no-trap (%get-ptr (%int-to-ptr 2664))))    ;  MOVE.l $0A68,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurDeactive" ((value (:pointer :windowrecord)))   nil   (#x21DF #xA68) )                             ;  MOVE.l (SP)+,$0A68 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetOldStructure" ()   (:no-trap (:handle :region))   (:no-trap (%get-ptr (%int-to-ptr 2534))))    ;  MOVE.l $09E6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetOldStructure" ((value (:handle :region)))   nil   (#x21DF #x9E6) )                             ;  MOVE.l (SP)+,$09E6 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetOldContent" ()   (:no-trap (:handle :region))   (:no-trap (%get-ptr (%int-to-ptr 2538))))    ;  MOVE.l $09EA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetOldContent" ((value (:handle :region)))   nil   (#x21DF #x9EA) )                             ;  MOVE.l (SP)+,$09EA ; $ENDC; ;  Please don't mess with the gray region.  There has;  to be a better way.  If not, please manipulate the;  existing region, don't change the value of the lowmem.; ; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetGrayRgn" ((value (:handle :region)))   nil   (#x21DF #x9EE) )                             ;  MOVE.l (SP)+,$09EE ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSaveVisRgn" ()   (:no-trap (:handle :region))   (:no-trap (%get-ptr (%int-to-ptr 2546))))    ;  MOVE.l $09F2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSaveVisRgn" ((value (:handle :region)))   nil   (#x21DF #x9F2) )                             ;  MOVE.l (SP)+,$09F2 ; $ENDC; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetOneOne" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 2562))));  MOVE.l $0A02,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetOneOne" ((value :signed-long))   nil   (#x21DF #xA02) )                             ;  MOVE.l (SP)+,$0A02 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMinusOne" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 2566))));  MOVE.l $0A06,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMinusOne" ((value :signed-long))   nil   (#x21DF #xA06) )                             ;  MOVE.l (SP)+,$0A06 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTopMenuItem" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2570))));  MOVE.w $0A0A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTopMenuItem" ((value :signed-integer))   nil   (#x31DF #xA0A) )                             ;  MOVE.w (SP)+,$0A0A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetAtMenuBottom" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2572))));  MOVE.w $0A0C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetAtMenuBottom" ((value :signed-integer))   nil   (#x31DF #xA0C) )                             ;  MOVE.w (SP)+,$0A0C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMenuList" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2588))))    ;  MOVE.l $0A1C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMenuList" ((value :handle))   nil   (#x21DF #xA1C) )                             ;  MOVE.l (SP)+,$0A1C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetMBarEnable" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2592))));  MOVE.w $0A20,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMBarEnable" ((value :signed-integer))   nil   (#x31DF #xA20) )                             ;  MOVE.w (SP)+,$0A20 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetMenuFlash" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2596))));  MOVE.w $0A24,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMenuFlash" ((value :signed-integer))   nil   (#x31DF #xA24) )                             ;  MOVE.w (SP)+,$0A24 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTheMenu" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2598))));  MOVE.w $0A26,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTheMenu" ((value :signed-integer))   nil   (#x31DF #xA26) )                             ;  MOVE.w (SP)+,$0A26 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMBarHook" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2604))))    ;  MOVE.l $0A2C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMBarHook" ((value :pointer))   nil   (#x21DF #xA2C) )                             ;  MOVE.l (SP)+,$0A2C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMenuHook" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2608))))    ;  MOVE.l $0A30,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMenuHook" ((value :pointer))   nil   (#x21DF #xA30) )                             ;  MOVE.l (SP)+,$0A30 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTopMapHndl" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2640))))    ;  MOVE.l $0A50,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTopMapHndl" ((value :handle))   nil   (#x21DF #xA50) )                             ;  MOVE.l (SP)+,$0A50 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSysMapHndl" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2644))))    ;  MOVE.l $0A54,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysMapHndl" ((value :handle))   nil   (#x21DF #xA54) )                             ;  MOVE.l (SP)+,$0A54 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSysMap" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2648))));  MOVE.w $0A58,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysMap" ((value :signed-integer))   nil   (#x31DF #xA58) )                             ;  MOVE.w (SP)+,$0A58 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetCurMap" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2650))));  MOVE.w $0A5A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetCurMap" ((value :signed-integer))   nil   (#x31DF #xA5A) )                             ;  MOVE.w (SP)+,$0A5A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetResLoad" ()   :signed-byte   (#x1EB8 #xA5E) )                             ;  MOVE.b $0A5E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetResLoad" ((value :signed-byte))   nil   (#x11DF #xA5E) )                             ;  MOVE.b (SP)+,$0A5E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetResErr" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2656))));  MOVE.w $0A60,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetResErr" ((value :signed-integer))   nil   (#x31DF #xA60) )                             ;  MOVE.w (SP)+,$0A60 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetFScaleDisable" ()   :signed-byte   (#x1EB8 #xA63) )                             ;  MOVE.b $0A63,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetFScaleDisable" ((value :signed-byte))   nil   (#x11DF #xA63) )                             ;  MOVE.b (SP)+,$0A63 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDeskHook" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2668))))    ;  MOVE.l $0A6C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDeskHook" ((value :pointer))   nil   (#x21DF #xA6C) )                             ;  MOVE.l (SP)+,$0A6C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTEDoText" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2672))))    ;  MOVE.l $0A70,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTEDoText" ((value :pointer))   nil   (#x21DF #xA70) )                             ;  MOVE.l (SP)+,$0A70 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTERecal" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2676))))    ;  MOVE.l $0A74,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTERecal" ((value :pointer))   nil   (#x21DF #xA74) )                             ;  MOVE.l (SP)+,$0A74 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetResumeProc" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2700))))    ;  MOVE.l $0A8C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetResumeProc" ((value :pointer))   nil   (#x21DF #xA8C) )                             ;  MOVE.l (SP)+,$0A8C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetANumber" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2712))));  MOVE.w $0A98,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetANumber" ((value :signed-integer))   nil   (#x31DF #xA98) )                             ;  MOVE.w (SP)+,$0A98 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetACount" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2714))));  MOVE.w $0A9A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetACount" ((value :signed-integer))   nil   (#x31DF #xA9A) )                             ;  MOVE.w (SP)+,$0A9A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDABeeper" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2716))))    ;  MOVE.l $0A9C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDABeeper" ((value :pointer))   nil   (#x21DF #xA9C) )                             ;  MOVE.l (SP)+,$0A9C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTEScrpLength" ()   (:no-trap :unsigned-integer)   (:no-trap (%get-unsigned-word (%int-to-ptr 2736))));  MOVE.w $0AB0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTEScrpLength" ((value :unsigned-integer))   nil   (#x31DF #xAB0) )                             ;  MOVE.w (SP)+,$0AB0 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTEScrpHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2740))))    ;  MOVE.l $0AB4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTEScrpHandle" ((value :handle))   nil   (#x21DF #xAB4) )                             ;  MOVE.l (SP)+,$0AB4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetAppParmHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2796))))    ;  MOVE.l $0AEC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetAppParmHandle" ((value :handle))   nil   (#x21DF #xAEC) )                             ;  MOVE.l (SP)+,$0AEC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetDSErrCode" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2800))));  MOVE.w $0AF0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDSErrCode" ((value :signed-integer))   nil   (#x31DF #xAF0) )                             ;  MOVE.w (SP)+,$0AF0 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetResErrProc" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2802))))    ;  MOVE.l $0AF2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetResErrProc" ((value :pointer))   nil   (#x21DF #xAF2) )                             ;  MOVE.l (SP)+,$0AF2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetDlgFont" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2810))));  MOVE.w $0AFA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDlgFont" ((value :signed-integer))   nil   (#x31DF #xAFA) )                             ;  MOVE.w (SP)+,$0AFA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetROMMapHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2822))))    ;  MOVE.l $0B06,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetROMMapHandle" ((value :handle))   nil   (#x21DF #xB06) )                             ;  MOVE.l (SP)+,$0B06 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetWidthPtr" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2832))))    ;  MOVE.l $0B10,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWidthPtr" ((value :pointer))   nil   (#x21DF #xB10) )                             ;  MOVE.l (SP)+,$0B10 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetATalkHk2" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2840))))    ;  MOVE.l $0B18,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetATalkHk2" ((value :pointer))   nil   (#x21DF #xB18) )                             ;  MOVE.l (SP)+,$0B18 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetHWCfgFlags" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2850))));  MOVE.w $0B22,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetHWCfgFlags" ((value :signed-integer))   nil   (#x31DF #xB22) )                             ;  MOVE.w (SP)+,$0B22 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetWidthTabHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 2858))))    ;  MOVE.l $0B2A,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWidthTabHandle" ((value :handle))   nil   (#x21DF #xB2A) )                             ;  MOVE.l (SP)+,$0B2A ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetLastSPExtra" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 2892))));  MOVE.l $0B4C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetLastSPExtra" ((value :signed-long))   nil   (#x21DF #xB4C) )                             ;  MOVE.l (SP)+,$0B4C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMenuDisable" ()   (:no-trap :signed-long)   (:no-trap (%get-signed-long (%int-to-ptr 2900))));  MOVE.l $0B54,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMenuDisable" ((value :signed-long))   nil   (#x21DF #xB54) )                             ;  MOVE.l (SP)+,$0B54 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetROMMapInsert" ()   :signed-byte   (#x1EB8 #xB9E) )                             ;  MOVE.b $0B9E,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetROMMapInsert" ((value :signed-byte))   nil   (#x11DF #xB9E) )                             ;  MOVE.b (SP)+,$0B9E ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetTmpResLoad" ()   :signed-byte   (#x1EB8 #xB9F) )                             ;  MOVE.b $0B9F,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTmpResLoad" ((value :signed-byte))   nil   (#x11DF #xB9F) )                             ;  MOVE.b (SP)+,$0B9F ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetIntlSpec" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2976))))    ;  MOVE.l $0BA0,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetIntlSpec" ((value :pointer))   nil   (#x21DF #xBA0) )                             ;  MOVE.l (SP)+,$0BA0 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetWordRedraw" ()   :signed-byte   (#x1EB8 #xBA5) )                             ;  MOVE.b $0BA5,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetWordRedraw" ((value :signed-byte))   nil   (#x11DF #xBA5) )                             ;  MOVE.b (SP)+,$0BA5 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSysFontFam" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2982))));  MOVE.w $0BA6,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysFontFam" ((value :signed-integer))   nil   (#x31DF #xBA6) )                             ;  MOVE.w (SP)+,$0BA6 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetSysFontSize" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2984))));  MOVE.w $0BA8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSysFontSize" ((value :signed-integer))   nil   (#x31DF #xBA8) )                             ;  MOVE.w (SP)+,$0BA8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetMBarHeight" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2986))));  MOVE.w $0BAA,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMBarHeight" ((value :signed-integer))   nil   (#x31DF #xBAA) )                             ;  MOVE.w (SP)+,$0BAA ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTESysJust" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2988))));  MOVE.w $0BAC,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTESysJust" ((value :signed-integer))   nil   (#x31DF #xBAC) )                             ;  MOVE.w (SP)+,$0BAC ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetHighHeapMark" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 2990))))    ;  MOVE.l $0BAE,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetHighHeapMark" ((value :pointer))   nil   (#x21DF #xBAE) )                             ;  MOVE.l (SP)+,$0BAE ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetLastFOND" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 3010))))    ;  MOVE.l $0BC2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetLastFOND" ((value :handle))   nil   (#x21DF #xBC2) )                             ;  MOVE.l (SP)+,$0BC2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetFractEnable" ()   :signed-byte   (#x1EB8 #xBF4) )                             ;  MOVE.b $0BF4,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetFractEnable" ((value :signed-byte))   nil   (#x11DF #xBF4) )                             ;  MOVE.b (SP)+,$0BF4 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMGetMMU32Bit" ()   :signed-byte   (#x1EB8 #xCB2) )                             ;  MOVE.b $0CB2,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMMU32Bit" ((value :signed-byte))   nil   (#x11DF #xCB2) )                             ;  MOVE.b (SP)+,$0CB2 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetTheGDevice" ()   (:no-trap (:handle :gdevice))   (:no-trap (%get-ptr (%int-to-ptr 3272))))    ;  MOVE.l $0CC8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTheGDevice" ((value (:handle :gdevice)))   nil   (#x21DF #xCC8) )                             ;  MOVE.l (SP)+,$0CC8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetDeskCPat" ()   (:no-trap (:handle :pixpat))   (:no-trap (%get-ptr (%int-to-ptr 3288))))    ;  MOVE.l $0CD8,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetDeskCPat" ((value (:handle :pixpat)))   nil   (#x21DF #xCD8) )                             ;  MOVE.l (SP)+,$0CD8 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTimeDBRA" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 3328))));  MOVE.w $0D00,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTimeDBRA" ((value :signed-integer))   nil   (#x31DF #xD00) )                             ;  MOVE.w (SP)+,$0D00 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTimeSCCDB" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 3330))));  MOVE.w $0D02,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTimeSCCDB" ((value :signed-integer))   nil   (#x31DF #xD02) )                             ;  MOVE.w (SP)+,$0D02 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetJVBLTask" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 3368))))    ;  MOVE.l $0D28,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJVBLTask" ((value :pointer))   nil   (#x21DF #xD28) )                             ;  MOVE.l (SP)+,$0D28 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetSynListHandle" ()   (:no-trap :handle)   (:no-trap (%get-ptr (%int-to-ptr 3378))))    ;  MOVE.l $0D32,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetSynListHandle" ((value :handle))   nil   (#x21DF #xD32) )                             ;  MOVE.l (SP)+,$0D32 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetMenuCInfo" ()   (:no-trap (:handle :mctable))   (:no-trap (%get-ptr (%int-to-ptr 3408))))    ;  MOVE.l $0D50,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetMenuCInfo" ((value (:handle :mctable)))   nil   (#x21DF #xD50) )                             ;  MOVE.l (SP)+,$0D50 ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-long-from-memory(deftrap "_LMGetJDTInstall" ()   (:no-trap :pointer)   (:no-trap (%get-ptr (%int-to-ptr 3484))))    ;  MOVE.l $0D9C,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetJDTInstall" ((value :pointer))   nil   (#x21DF #xD9C) )                             ;  MOVE.l (SP)+,$0D9C ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Generated by translator read-word-from-memory(deftrap "_LMGetTimeSCSIDB" ()   (:no-trap :signed-integer)   (:no-trap (%get-signed-word (%int-to-ptr 2852))));  MOVE.w $0B24,(SP) ; $ENDC; $IFC NOT CFMSYSTEMCALLS;; Inline instructions called as foreign function(deftrap-inline "_LMSetTimeSCSIDB" ((value :signed-integer))   nil   (#x31DF #xB24) )                             ;  MOVE.w (SP)+,$0B24 ; $ENDC; *************************************************************************************; ; 	MORE COMPLEX LOWMEM ACCESSORS; ; *************************************************************************************#|                                              ; $IFC CFMSYSTEMCALLS ;; No calling method defined for this trap(deftrap-inline "_LMGetDSAlertRect" ((dsAlertRectValue (:pointer :rect)))   nil   () )                                         ; CONST;; No calling method defined for this trap(deftrap-inline "_LMSetDSAlertRect" ((dsAlertRectValue (:pointer :rect)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetDragPattern" ((dragPatternValue (:pointer :pattern)))   nil   () )                                         ; CONST;; No calling method defined for this trap(deftrap-inline "_LMSetDragPattern" ((dragPatternValue (:pointer :pattern)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetDeskPattern" ((deskPatternValue (:pointer :pattern)))   nil   () )                                         ; CONST;; No calling method defined for this trap(deftrap-inline "_LMSetDeskPattern" ((deskPatternValue (:pointer :pattern)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetHiliteRGB" ((hiliteRGBValue (:pointer :rgbcolor)))   nil   () )                                         ; CONST;; No calling method defined for this trap(deftrap-inline "_LMSetHiliteRGB" ((hiliteRGBValue (:pointer :rgbcolor)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetEventQueue" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMSetEventQueue" ((eventQueueValue (:pointer :qhdr)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetVBLQueue" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMSetVBLQueue" ((vblQueueValue (:pointer :qhdr)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetDrvQHdr" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMSetDrvQHdr" ((drvQHdrValue (:pointer :qhdr)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetVCBQHdr" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMSetVCBQHdr" ((vcbQHdrValue (:pointer :qhdr)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetDTQueue" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMSetDTQueue" ((dtQueueValue (:pointer :qhdr)))   nil   () )                                         ; *************************************************************************************; 	"BLOCKMOVE ACCESSORS"; 	; 		These lowmem accessors use the BlockMove trap; *************************************************************************************;; No calling method defined for this trap(deftrap-inline "_LMGetFSQHdr" ()   (:pointer :qhdr)   () );; No calling method defined for this trap(deftrap-inline "_LMGetCurApName" ()   (:pointer (:string 255))   () );; No calling method defined for this trap(deftrap-inline "_LMSetCurApName" ((curApNameValue (:string 31)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetSysResName" ()   (:pointer (:string 255))   () );; No calling method defined for this trap(deftrap-inline "_LMSetSysResName" ((sysResNameValue (:string 15)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetFinderName" ()   (:pointer (:string 255))   () );; No calling method defined for this trap(deftrap-inline "_LMSetFinderName" ((finderNameValue (:string 15)))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetABusVars" ()   :pointer   () );; No calling method defined for this trap(deftrap-inline "_LMSetABusVars" ((aBusVarsValue :pointer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetScratch20" ()   :pointer   () );; No calling method defined for this trap(deftrap-inline "_LMSetScratch20" ((scratch20Value :pointer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetToolScratch" ()   :pointer   () );; No calling method defined for this trap(deftrap-inline "_LMSetToolScratch" ((toolScratchValue :pointer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetApplScratch" ()   :pointer   () )                                         ; *************************************************************************************; 	"INDEXED ACCESSORS"; 	; 		These lowmem accessors take an index parameter to get/set an indexed; 		lowmem global.; *************************************************************************************;; No calling method defined for this trap(deftrap-inline "_LMSetApplScratch" ((applScratchValue :pointer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetDAStrings" ((whichString :signed-integer))   (:handle (:string 255))   () );; No calling method defined for this trap(deftrap-inline "_LMSetDAStrings" ((stringsValue (:handle (:string 255))) (whichString :signed-integer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetLvl2DT" ((vectorNumber :signed-integer))   :pointer   () );; No calling method defined for this trap(deftrap-inline "_LMSetLvl2DT" ((Lvl2DTValue :pointer) (vectorNumber :signed-integer))   nil   () );; No calling method defined for this trap(deftrap-inline "_LMGetExtStsDT" ((vectorNumber :signed-integer))   :pointer   () ) |#                                             ; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := LowMemIncludes; $ENDC; __LOWMEM__; $IFC NOT UsingIncludes;; Warning: No calling method defined for this trap(deftrap-inline "_LMSetExtStsDT" ((ExtStsDTValue :pointer) (vectorNumber :signed-integer))   nil   () ); $ENDC(provide-interface 'LowMem)