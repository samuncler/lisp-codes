(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:Controls.p"; at Tuesday June 6,1995 2:05:26 pm.; ;  	File:		Controls.p;  ;  	Contains:	Control Manager interfaces;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in “MPW Latest” on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC; $IFC UNDEFINED __CONTROLS__; $SETC __CONTROLS__ := 1; $I+; $SETC ControlsIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __QUICKDRAW__|#(require-interface 'Quickdraw)#|                                              ; $I Quickdraw.p |#                                             ; $ENDC; 	MixedMode.p													; 	QuickdrawText.p												#|                                              ; $IFC UNDEFINED __MENUS__|#(require-interface 'Menus)#|                                              ; $I Menus.p |#                                             ; $ENDC; 	Memory.p													; $PUSH; $ALIGN MAC68K; $LibExport+; $IFC UNDEFINED STRICT_CONTROLS ; $SETC STRICT_CONTROLS := 0; $ENDC(defconstant $pushButProc 0)(defconstant $checkBoxProc 1)(defconstant $radioButProc 2)(defconstant $scrollBarProc 16)(defconstant $popupMenuProc 1008)(defconstant $kControlUsesOwningWindowsFontVariant 8);  Control uses owning windows font to display text; $IFC OLDROUTINENAMES (defconstant $useWFont 8); $ENDC(def-mactype :controlpartcode (find-mactype ':signed-integer))(defconstant $kControlNoPart 0)(defconstant $kControlLabelPart 1)(defconstant $kControlMenuPart 2)(defconstant $kControlTrianglePart 4)(defconstant $kControlButtonPart 10)(defconstant $kControlCheckBoxPart 11)(defconstant $kControlRadioButtonPart 11)(defconstant $kControlUpButtonPart 20)(defconstant $kControlDownButtonPart 21)(defconstant $kControlPageUpPart 22)(defconstant $kControlPageDownPart 23)(defconstant $kControlIndicatorPart 129)(defconstant $kControlDisabledPart 254)(defconstant $kControlInactivePart 255); $IFC OLDROUTINENAMES (defconstant $inLabel 1)(defconstant $inMenu 2)(defconstant $inTriangle 4)(defconstant $inButton 10)(defconstant $inCheckBox 11)(defconstant $inUpButton 20)(defconstant $inDownButton 21)(defconstant $inPageUp 22)(defconstant $inPageDown 23)(defconstant $inThumb 129); $ENDC(defconstant $kControlCheckboxUncheckedValue 0)(defconstant $kControlCheckboxCheckedValue 1)(defconstant $kControlCheckboxMixedValue 2); _________________________________________________________________________________________________________; ;  • RADIO BUTTON VALUES; ; _________________________________________________________________________________________________________(defconstant $kControlRadioButtonUncheckedValue 0)(defconstant $kControlRadioButtonCheckedValue 1)(defconstant $kControlRadioButtonMixedValue 2)(defconstant $popupFixedWidth 1)(defconstant $popupVariableWidth 2)(defconstant $popupUseAddResMenu 4)(defconstant $popupUseWFont 8); ;  Menu label styles for the System 7 pop-up menu ; (defconstant $popupTitleBold 256)(defconstant $popupTitleItalic 512)(defconstant $popupTitleUnderline 1024)(defconstant $popupTitleOutline 2048)(defconstant $popupTitleShadow 4096)(defconstant $popupTitleCondense 8192)(defconstant $popupTitleExtend 16384)(defconstant $popupTitleNoStyle 32768); ;  Menu label justifications for the System 7 pop-up menu; (defconstant $popupTitleLeftJust #x0)(defconstant $popupTitleCenterJust #x1)(defconstant $popupTitleRightJust #xFF); _________________________________________________________________________________________________________; ;  • CONTROL DRAGGRAYRGN CONSTANTS; (defconstant $noConstraint #$kNoConstraint)(defconstant $hAxisOnly 1)(defconstant $vAxisOnly 2); _________________________________________________________________________________________________________; ;  • CONTROL COLOR TABLE PART CODES; (defconstant $cFrameColor 0)(defconstant $cBodyColor 1)(defconstant $cTextColor 2)(defconstant $cThumbColor 3); _________________________________________________________________________________________________________; ;  • CONTROL TYPE DECLARATIONS; ; _________________________________________________________________________________________________________; ;  Define ControlRef and ControlHandle; #|                                              ; $IFC STRICT_CONTROLS (def-mactype :controlref (find-mactype ':pointer))(def-mactype :controlhandle (find-mactype ':controlref)) |#                                             ; $ELSEC(def-mactype :controlptr (find-mactype '(:pointer :controlrecord)))(def-mactype :controlhandle (find-mactype '(:handle :controlrecord)))(def-mactype :controlref (find-mactype '(:handle :controlrecord))); $ENDC(def-mactype :controlactionprocptr (find-mactype ':pointer));  PROCEDURE ControlAction(theControl: ControlRef; partCode: ControlPartCode); (def-mactype :controlactionupp (find-mactype ':pointer))(defrecord (CtlCTab :handle)    (ccSeed :signed-long)   (ccRider :signed-integer)   (ctSize :signed-integer)   (ctTable (:array :colorspec 4))   )(def-mactype :cctabptr (find-mactype '(:pointer :ctlctab)))(def-mactype :cctabhandle (find-mactype '(:handle :ctlctab))); $IFC NOT STRICT_CONTROLS (defrecord (ControlRecord :handle)    (nextControl (:handle :controlrecord))   (contrlOwner (:pointer :windowrecord))   (contrlRect :rect)   (contrlVis :unsigned-byte)   (contrlHilite :unsigned-byte)   (contrlValue :signed-integer)   (contrlMin :signed-integer)   (contrlMax :signed-integer)   (contrlDefProc :handle)   (contrlData :handle)   (contrlAction :pointer)   (contrlRfCon :signed-long)   (contrlTitle (:string 255))   ); _________________________________________________________________________________________________________; ;  • AUXILLARY CONTROL RECORD STRUCTURE; ; _________________________________________________________________________________________________________(defrecord (AuxCtlRec :handle)    (acNext :handle)   (acOwner (:handle :controlrecord))   (acCTable (:handle :ctlctab))   (acFlags :signed-integer)   (acReserved :signed-long)   (acRefCon :signed-long)   )(def-mactype :auxctlptr (find-mactype '(:pointer :auxctlrec)))(def-mactype :auxctlhandle (find-mactype '(:handle :auxctlrec))); _________________________________________________________________________________________________________; ;  • POP-UP MENU PRIVATE DATA STRUCTURE; ; _________________________________________________________________________________________________________(defrecord PopupPrivateData    (mHandle (:handle :menuinfo))   (mID :signed-integer)   )(def-mactype :popupprivatedataptr (find-mactype '(:pointer :popupprivatedata)))(def-mactype :popupprivatedatahandle (find-mactype '(:handle :popupprivatedata))); $ENDC(defconstant $uppControlActionProcInfo #x2C0)   ;  PROCEDURE (4 byte param, 2 byte param); ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewControlActionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallControlActionProc" ((theControl (:handle :controlrecord)) (partCode :signed-integer) (userRoutine :pointer))   nil   (#x205F #x4E90) ); $ENDC; CONST                                         ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_NewControl" ((theWindow (:pointer :windowrecord)) (boundsRect (:pointer :rect)) (title (:string 255)) (visible :boolean) (value :signed-integer) (min :signed-integer) (max :signed-integer) (procID :signed-integer) (refCon :signed-long))   (:stack (:handle :controlrecord))   (:stack-trap #xA954)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetNewControl" ((controlID :signed-integer) (owner (:pointer :windowrecord)))   (:stack (:handle :controlrecord))   (:stack-trap #xA9BE)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_DisposeControl" ((theControl (:handle :controlrecord)))   nil   (:stack-trap #xA955)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_KillControls" ((theWindow (:pointer :windowrecord)))   nil   (:stack-trap #xA956)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL SHOWING/HIDING API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_ShowControl" ((theControl (:handle :controlrecord)))   nil   (:stack-trap #xA957)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_HideControl" ((theControl (:handle :controlrecord)))   nil   (:stack-trap #xA958)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL DRAWING API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_DrawControls" ((theWindow (:pointer :windowrecord)))   nil   (:stack-trap #xA969)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_Draw1Control" ((theControl (:handle :controlrecord)))   nil   (:stack-trap #xA96D)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_UpdateControls" ((theWindow (:pointer :windowrecord)) (updateRgn (:handle :region)))   nil   (:stack-trap #xA953)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_HiliteControl" ((theControl (:handle :controlrecord)) (hiliteState :signed-integer))   nil   (:stack-trap #xA95D)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_TrackControl" ((theControl (:handle :controlrecord)) (thePoint :point) (actionProc :pointer))   (:stack :signed-integer)   (:stack-trap #xA968)); $ENDC; CONST                                         ; CONST; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_DragControl" ((theControl (:handle :controlrecord)) (startPt :point) (limitRect (:pointer :rect)) (slopRect (:pointer :rect)) (axis :unsigned-integer))   nil   (:stack-trap #xA967)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_TestControl" ((theControl (:handle :controlrecord)) (thePt :point))   (:stack :signed-integer)   (:stack-trap #xA966)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_FindControl" ((thePoint :point) (theWindow (:pointer :windowrecord)) (theControl (:pointer (:handle :controlrecord))))   (:stack :signed-integer)   (:stack-trap #xA96C)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL MOVING/SIZING API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_MoveControl" ((theControl (:handle :controlrecord)) (h :signed-integer) (v :signed-integer))   nil   (:stack-trap #xA959)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SizeControl" ((theControl (:handle :controlrecord)) (w :signed-integer) (h :signed-integer))   nil   (:stack-trap #xA95C)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL TITLE API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlTitle" ((theControl (:handle :controlrecord)) (title (:string 255)))   nil   (:stack-trap #xA95F)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlTitle" ((theControl (:handle :controlrecord)) (title (:pointer (:string 255))))   nil   (:stack-trap #xA95E)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL VALUE, MIMIMUM, AND MAXIMUM API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlValue" ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA960)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlValue" ((theControl (:handle :controlrecord)) (newValue :signed-integer))   nil   (:stack-trap #xA963)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlMinimum" ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA961)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlMinimum" ((theControl (:handle :controlrecord)) (newMinimum :signed-integer))   nil   (:stack-trap #xA964)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlMaximum" ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA962)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlMaximum" ((theControl (:handle :controlrecord)) (newMaximum :signed-integer))   nil   (:stack-trap #xA965)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL VARIANT AND WINDOW INFORMATION API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlVariant" ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA809)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlAction" ((theControl (:handle :controlrecord)) (actionProc :pointer))   nil   (:stack-trap #xA96B)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlAction" ((theControl (:handle :controlrecord)))   (:stack :pointer)   (:stack-trap #xA96A)); $ENDC; _________________________________________________________________________________________________________;     ;  • CONTROL ACCESSOR API'S; ; _________________________________________________________________________________________________________; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlReference" ((theControl (:handle :controlrecord)) (data :signed-long))   nil   (:stack-trap #xA95B)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetControlReference" ((theControl (:handle :controlrecord)))   (:stack :signed-long)   (:stack-trap #xA95A)); $ENDC; $IFC NOT STRICT_CONTROLS ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_GetAuxiliaryControlRecord" ((theControl (:handle :controlrecord)) (acHndl (:pointer (:handle :auxctlrec))))   (:stack :boolean)   (:stack-trap #xAA44)); $ENDC; $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap "_SetControlColor" ((theControl (:handle :controlrecord)) (newColorTable (:handle :ctlctab)))   nil   (:stack-trap #xAA43)); $ENDC(def-mactype :controldefprocmessage (find-mactype ':signed-integer))(defconstant $drawCntl 0)(defconstant $testCntl 1)(defconstant $calcCRgns 2)(defconstant $initCntl 3)(defconstant $dispCntl 4)(defconstant $posCntl 5)(defconstant $thumbCntl 6)(defconstant $dragCntl 7)(defconstant $autoTrack 8)(defconstant $calcCntlRgn 10)(defconstant $calcThumbRgn 11)(defconstant $drawThumbOutline 12); _________________________________________________________________________________________________________;     ;  • MAIN ENTRY POINT FOR 'CDEF'; (def-mactype :controldefprocptr (find-mactype ':pointer));  FUNCTION ControlDef(varCode: SInt16; theControl: ControlRef; message: ControlDefProcMessage; param: SInt32): SInt32; (def-mactype :controldefupp (find-mactype ':pointer))(defconstant $uppControlDefProcInfo #x3BB0)     ;  FUNCTION (2 byte param, 4 byte param, 2 byte param, 4 byte param): 4 byte result; ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewControlDefProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC; $IFC NOT GENERATINGCFM;; Inline instructions called as foreign function(deftrap-inline "_CallControlDefProc" ((varCode :signed-integer) (theControl (:handle :controlrecord)) (message :signed-integer) (param :signed-long) (userRoutine :pointer))   :signed-long   (#x205F #x4E90) ); $ENDC; _________________________________________________________________________________________________________;     ;  • CONSTANTS FOR DRAWCNTL MESSAGE PASSED IN PARAM; ; _________________________________________________________________________________________________________(defconstant $kDrawControlEntireControl 0)(defconstant $kDrawControlIndicatorOnly 129); _________________________________________________________________________________________________________;     ;  • CONSTANTS FOR DRAGCNTL MESSAGE PASSED IN PARAM; ; _________________________________________________________________________________________________________(defconstant $kDragControlEntireControl 0); _________________________________________________________________________________________________________;     ;  • DRAG CONSTRAINT STRUCTURE PASSED IN PARAM FOR THUMBCNTL MESSAGE (IM I-332); ; _________________________________________________________________________________________________________(defrecord IndicatorDragConstraint    (limitRect :rect)   (slopRect :rect)   (axis :unsigned-integer)   )(def-mactype :indicatordragconstraintptr (find-mactype '(:pointer :indicatordragconstraint)))(def-mactype :indicatordragconstrainthandle (find-mactype '(:handle :indicatordragconstraint))); _________________________________________________________________________________________________________; ;  • OLD ROUTINE NAMES; ;    These are provided for compatiblity with older source bases.  It is recommended to not use them since; 	 they may removed from this interface file at any time.; ; _________________________________________________________________________________________________________; $IFC OLDROUTINENAMES (defconstant $kNoHiliteControlPart 0)(defconstant $kInLabelControlPart 1)(defconstant $kInMenuControlPart 2)(defconstant $kInTriangleControlPart 4)(defconstant $kInButtonControlPart 10)(defconstant $kInCheckBoxControlPart 11)(defconstant $kInUpButtonControlPart 20)(defconstant $kInDownButtonControlPart 21)(defconstant $kInPageUpControlPart 22)(defconstant $kInPageDownControlPart 23)(defconstant $kInIndicatorControlPart 129)(defconstant $kReservedControlPart 254)(defconstant $kControlInactiveControlPart 255); $ENDC; $IFC OLDROUTINENAMES ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCTitle" "SetControlTitle")         ((theControl (:handle :controlrecord)) (title (:string 255)))   nil   (:stack-trap #xA95F)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCTitle" "GetControlTitle")         ((theControl (:handle :controlrecord)) (title (:pointer (:string 255))))   nil   (:stack-trap #xA95E)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_UpdtControl" "UpdateControls")         ((theWindow (:pointer :windowrecord)) (updateRgn (:handle :region)))   nil   (:stack-trap #xA953)); $ENDC; $IFC NOT STRICT_CONTROLS ; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCtlValue" "SetControlValue")         ((theControl (:handle :controlrecord)) (theValue :signed-integer))   nil   (:stack-trap #xA963)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCtlValue" "GetControlValue")         ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA960)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCtlMin" "SetControlMinimum")         ((theControl (:handle :controlrecord)) (minValue :signed-integer))   nil   (:stack-trap #xA964)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCtlMin" "GetControlMinimum")         ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA961)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCtlMax" "SetControlMaximum")         ((theControl (:handle :controlrecord)) (maxValue :signed-integer))   nil   (:stack-trap #xA965)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCtlMax" "GetControlMaximum")         ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA962)); $ENDC; $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCRefCon" "SetControlReference")         ((theControl (:handle :controlrecord)) (data :signed-long))   nil   (:stack-trap #xA95B)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCRefCon" "GetControlReference") ((theControl (:handle :controlrecord)))   (:stack :signed-long)   (:stack-trap #xA95A)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCtlAction" "SetControlAction")         ((theControl (:handle :controlrecord)) (actionProc :pointer))   nil   (:stack-trap #xA96B)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCtlAction" "GetControlAction")         ((theControl (:handle :controlrecord)))   (:stack :pointer)   (:stack-trap #xA96A)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_SetCtlColor" "SetControlColor")         ((theControl (:handle :controlrecord)) (newColorTable (:handle :ctlctab)))   nil   (:stack-trap #xAA43)); $ENDC; $IFC NOT GENERATINGCFM;; Generated by translator basic-stack-trap(deftrap ("_GetCVariant" "GetControlVariant")         ((theControl (:handle :controlrecord)))   (:stack :signed-integer)   (:stack-trap #xA809)); $ENDC; $ENDC; $ALIGN RESET; $POP; $SETC UsingIncludes := ControlsIncludes; $ENDC                                         ; __CONTROLS__#|                                              ; $IFC NOT UsingIncludes |#                                             ; $ENDC(provide-interface 'Controls);; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:controls.patch(DEFTRAP ("_GETAUXCTL" "GetAuxiliaryControlRecord")         ((THECONTROL (:HANDLE :CONTROLRECORD))          (ACHNDL (:POINTER (:HANDLE :AUXCTLREC))))         (:STACK :BOOLEAN)         (:STACK-TRAP 43588));; This form has been added from patch file HD:CCL3.0d17:Interface Translator:legacies:controls.patch (defconstant $popupmenucdefproc #$popupmenuproc)