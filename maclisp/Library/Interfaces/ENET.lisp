(in-package :TRAPS); Generated from #P"HD:CCL3.0d17:Interface Translator:Source interfaces:Pascal Interfaces:ENET.p"; at Tuesday June 6,1995 2:08:37 pm.; ;  	File:		ENET.p;  ;  	Contains:	Ethernet Interfaces.;  ;  	Version:	Technology:	System 7.5;  				Package:	Universal Interfaces 2.0 in ÒMPW LatestÓ on ETO #17;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ;  	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter;  				stack.  Include the file and version information (from above);  				in the problem description and send to:;  					Internet:	apple.bugs@applelink.apple.com;  					AppleLink:	APPLE.BUGS;  ; #|                                              ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0 |#                                             ; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __ENET__; $SETC __ENET__ := 1; $I+; $SETC ENETIncludes := UsingIncludes; $SETC UsingIncludes := 1#|                                              ; $IFC UNDEFINED __TYPES__|#(require-interface 'Types)#|                                              ; $I Types.p |#                                             ; $ENDC; 	ConditionalMacros.p											#|                                              ; $IFC UNDEFINED __OSUTILS__|#(require-interface 'OSUtils)#|                                              ; $I OSUtils.p |#                                             ; $ENDC; 	MixedMode.p													; 	Memory.p													; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $ENetSetGeneral 253)               ; Set "general" mode(defconstant $ENetGetInfo 252)                  ; Get info(defconstant $ENetRdCancel 251)                 ; Cancel read(defconstant $ENetRead 250)                     ; Read(defconstant $ENetWrite 249)                    ; Write(defconstant $ENetDetachPH 248)                 ; Detach protocol handler(defconstant $ENetAttachPH 247)                 ; Attach protocol handler(defconstant $ENetAddMulti 246)                 ; Add a multicast address(defconstant $ENetDelMulti 245)                 ; Delete a multicast address(defconstant $EAddrRType :|eadr|)(def-mactype :eparamblkptr (find-mactype '(:pointer :eparamblock))); ; 		ENETCompletionProcPtr uses register based parameters on the 68k and cannot; 		be written in or called from a high-level language without the help of; 		mixed mode or assembly glue.; ; 		In:; 		 => thePBPtr    	A0.L; 	(def-mactype :enetcompletionprocptr (find-mactype ':pointer));  register PROCEDURE ENETCompletion(thePBPtr: EParamBlkPtr); (def-mactype :enetcompletionupp (find-mactype ':pointer))(defrecord EParamBlock    (qLink (:pointer :qelem))                    ; General EParams   (qType :signed-integer)                      ; queue type   (ioTrap :signed-integer)                     ; routine trap   (ioCmdAddr :pointer)                         ; routine address   (ioCompletion :pointer)                      ; completion routine   (ioResult :signed-integer)                   ; result code   (ioNamePtr (:pointer (:string 255)))         ; ->filename   (ioVRefNum :signed-integer)                  ; volume reference or drive number   (ioRefNum :signed-integer)                   ; driver reference number   (csCode :signed-integer)                     ; Call command code   (:variant       (      (eProtType :signed-integer)               ; Ethernet protocol type      (ePointer :pointer)                       ; No support for PowerPC code      (eBuffSize :signed-integer)               ; buffer size      (eDataSize :signed-integer)               ; number of bytes read      )      (      (eMultiAddr (:array :character 6))        ; Multicast Address      )      )   )(defconstant $uppENETCompletionProcInfo #x9802) ;  Register PROCEDURE (4 bytes in A0); ; $IFC NOT GENERATINGCFM                        ; To be implemented:  Glue to move parameters into registers.; $ENDC;; Warning: No calling method defined for this trap(deftrap-inline "_CallENETCompletionProc" ((thePBPtr (:pointer :eparamblock)) (userRoutine :pointer))   nil   () )                                         ; $IFC NOT GENERATINGCFM ;; Generated by translator basic-stack-trap(deftrap "_NewENETCompletionProc" ((userRoutine :pointer))   (:stack :pointer)   (:stack-trap #x2E9F)); $ENDC;; Warning: No calling method defined for this trap;; Using mcl2 version of ewrite because there is no implementation in the new headers(deftrap "_EWrite"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 249) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of eattachph because there is no implementation in the new headers(deftrap "_EAttachPH"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 247) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of edetachph because there is no implementation in the new headers(deftrap "_EDetachPH"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 248) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of eread because there is no implementation in the new headers(deftrap "_ERead"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 250) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of erdcancel because there is no implementation in the new headers(deftrap "_ERdCancel"         ((Pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 251) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of egetinfo because there is no implementation in the new headers(deftrap "_EGetInfo"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 252) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of esetgeneral because there is no implementation in the new headers(deftrap "_ESetGeneral"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 253) pb)));; Warning: No calling method defined for this trap;; Using mcl2 version of eaddmulti because there is no implementation in the new headers(deftrap "_EAddMulti"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 246) pb))); $ALIGN RESET                                  ; $POP; $SETC UsingIncludes := ENETIncludes; $ENDC; __ENET__; $IFC NOT UsingIncludes;; Warning: No calling method defined for this trap;; Using mcl2 version of edelmulti because there is no implementation in the new headers(deftrap "_EDelMulti"         ((pb (:pointer :eparamblock)) (async :boolean))         (:d0 :signed-integer)         (:register-trap 40964 :a0          (progn (setf (rref pb :eparamblock.cscode) 245) pb))); $ENDC(provide-interface 'ENET)