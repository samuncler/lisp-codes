(in-package :TRAPS)             ; ;  	File:		OpenTptSerial.p;  ;  	Contains:	Definitions for Serial Port;  ;  	Copyright:	© 1984-1995 by Apple Computer, Inc.;  				All rights reserved.;  ; ; $IFC UNDEFINED UsingIncludes; $SETC UsingIncludes := 0; $ENDC; $IFC NOT UsingIncludes; $ENDC; $IFC UNDEFINED __OPENTPTSERIAL__; $SETC __OPENTPTSERIAL__ := 1; $I+; $SETC OpenTptSerialIncludes := UsingIncludes; $SETC UsingIncludes := 1; $IFC UNDEFINED __OPENTRANSPORT__; $I OpenTransport.p; $ENDC; 	Types.p														; 		ConditionalMacros.p										; 	MixedMode.p													; 	Strings.p													; $PUSH; $ALIGN MAC68K; $LibExport+(defconstant $COM_SERIAL :|SERL|); ;  Version Number; (defconstant $kSerialABVersion "1.0"); ;  Module Names; (defconstant $kSerialABName "serialAB")(defconstant $kSerialName "serial")(defconstant $kSerialPortAName "serialA")(defconstant $kSerialPortBName "serialB")(defconstant $kSerialABModuleID 7200)(defconstant $kOTSerialFramingAsync #X1);  Support Async serial mode 			(defconstant $kOTSerialFramingHDLC #X2);  Support HDLC synchronous serial mode	(defconstant $kOTSerialFramingSDLC #X4);  Support SDLC synchronous serial mode	(defconstant $kOTSerialFramingAsyncPackets #X8);  Support Async "packet" serial mode	; ******************************************************************************; ** IOCTL Calls for Serial Drivers; *******************************************************************************;  ; 	 * Set DTR (0 = off, 1 = on); 	 (defconstant $I_SetSerialDTR (+ 0 (+ #$MIOC_SRL_HIGH 0)))(defconstant $kOTSerialSetDTROff 0)(defconstant $kOTSerialSetDTROn 1); ; 	 * Send a break on the line - kOTSerialSetBreakOff = off, kOTSerialSetBreakOn = on,; 	 * Any other number is the number of milliseconds to leave break on, then; 	 * auto shutoff; 	 (defconstant $I_SetSerialBreak (+ 0 (+ #$MIOC_SRL_HIGH 1)))(defconstant $kOTSerialSetBreakOn #XFFFFFFFF)(defconstant $kOTSerialSetBreakOff 0); ; 	 * Force XOFF state - 0 = Unconditionally clear XOFF state, 1 = unconditionally set it; 	 (defconstant $I_SetSerialXOffState (+ 0 (+ #$MIOC_SRL_HIGH 2)))(defconstant $kOTSerialForceXOffTrue 1)(defconstant $kOTSerialForceXOffFalse 0); ; 	 * Send an XON character; 	 * 0 = send only if in XOFF state, 1 = send always; 	 (defconstant $I_SetSerialXOn (+ 0 (+ #$MIOC_SRL_HIGH 3)))(defconstant $kOTSerialSendXOnAlways 1)(defconstant $kOTSerialSendXOnIfXOffTrue 0); ; 	 * Send an XOFF character; 	 * 0 = send only if in XON state, 1 = send always; 	 (defconstant $I_SetSerialXOff (+ 0 (+ #$MIOC_SRL_HIGH 4)))(defconstant $kOTSerialSendXOffAlways 1)(defconstant $kOTSerialSendXOffIfXOnTrue 0); ******************************************************************************; ** Option Management for Serial Drivers; *******************************************************************************; ; ** These options are all 4-byte values.; ** BaudRate is the baud rate.; ** DataBits is the number of data bits.; ** StopBits is the number of stop bits times 10.; ** Parity is an enum; (defconstant $SERIAL_OPT_BAUDRATE #X100);  UInt32	(defconstant $SERIAL_OPT_DATABITS #X101);  UInt32	(defconstant $SERIAL_OPT_STOPBITS #X102);  UInt32 10, 15 or 20 for 1, 1.5 or 2	(defconstant $SERIAL_OPT_PARITY #X103);  UInt32	(defconstant $kOTSerialNoParity 0)(defconstant $kOTSerialOddParity 1)(defconstant $kOTSerialEvenParity 2); ;  The "Status" option is a 4-byte value option that is ReadOnly;  It returns a bitmap of the current serial status; (defconstant $SERIAL_OPT_STATUS #X104)(defconstant $kOTSerialSwOverRunErr #X1)(defconstant $kOTSerialBreakOn #X8)(defconstant $kOTSerialParityErr #X10)(defconstant $kOTSerialOverrunErr #X20)(defconstant $kOTSerialFramingErr #X40)(defconstant $kOTSerialXOffSent #X10000)(defconstant $kOTSerialDTRNegated #X20000)(defconstant $kOTSerialCTLHold #X40000)(defconstant $kOTSerialXOffHold #X80000)(defconstant $kOTSerialOutputBreakOn #X1000000); ;  The "Handshake" option defines what kind of handshaking the serial port;  will do for line flow control.  The value is a 32-bit value defined by;  the function or macro SerialHandshakeData below.;  For no handshake, or CTS handshake, the onChar and offChar parameters;  are ignored.; (defconstant $SERIAL_OPT_HANDSHAKE #X105); ;  These are bits to enable specific types of handshaking; (defconstant $kOTSerialXOnOffInputHandshake 1);  Want XOn/XOff handshake for incoming characters	(defconstant $kOTSerialXOnOffOutputHandshake 2);  Want XOn/XOff handshake for outgoing characters	(defconstant $kOTSerialCTSInputHandshake 4);  Want CTS handshake for incoming characters		(defconstant $kOTSerialDTROutputHandshake 8);  Want DTR handshake for outoing characters		(defconstant $SERIAL_OPT_RCVTIMEOUT #X106); ;  This option defines how characters with parity errors are handled.;  A 0 value will disable all replacement.  A single character value in the low;  byte designates the replacement character.  When characters are received with a ;  parity error, they are replaced by this specified character.  If a valid incoming;  character matches the replacement character, then the received character's msb is;  cleared. For this situation, the alternate character is used, if specified in bits;  8 through 15 of the option long, with 0xff being place in bits 16 through 23.;  Whenever a valid character is received that matches the first replacement character,;  it is replaced with this alternate character.; (defconstant $SERIAL_OPT_ERRORCHARACTER #X107)(defconstant $SERIAL_OPT_EXTCLOCK #X108); ;  The "BurstMode" option informs the serial driver that it should continue looping,;  reading incoming characters, rather than waiting for an interrupt for each character.;  This option may not be supported by all Serial driver; (defconstant $SERIAL_OPT_BURSTMODE #X109); ;  Default attributes for the serial ports; (defconstant $kOTSerialDefaultBaudRate 19200)(defconstant $kOTSerialDefaultDataBits 8)(defconstant $kOTSerialDefaultStopBits 10)(defconstant $kOTSerialDefaultParity #$KOTSERIALNOPARITY)(defconstant $kOTSerialDefaultHandshake 0)(defconstant $kOTSerialDefaultOnChar #X11);  Control-Q(defconstant $kOTSerialDefaultOffChar #X13);  Control-S(defconstant $kOTSerialDefaultSndBufSize 128)(defconstant $kOTSerialDefaultRcvBufSize 128)(defconstant $kOTSerialDefaultSndLoWat 96)(defconstant $kOTSerialDefaultRcvLoWat 1)(defconstant $kOTSerialDefaultRcvTimeout 4); $ALIGN RESET; $POP; $SETC UsingIncludes := OpenTptSerialIncludes; $ENDC                         ; __OPENTPTSERIAL__; $IFC NOT UsingIncludes; $ENDC(export '($KOTSERIALDEFAULTRCVTIMEOUT $KOTSERIALDEFAULTRCVLOWAT          $KOTSERIALDEFAULTSNDLOWAT $KOTSERIALDEFAULTRCVBUFSIZE          $KOTSERIALDEFAULTSNDBUFSIZE $KOTSERIALDEFAULTOFFCHAR          $KOTSERIALDEFAULTONCHAR $KOTSERIALDEFAULTHANDSHAKE          $KOTSERIALDEFAULTPARITY $KOTSERIALDEFAULTSTOPBITS          $KOTSERIALDEFAULTDATABITS $KOTSERIALDEFAULTBAUDRATE          $SERIAL_OPT_BURSTMODE $SERIAL_OPT_EXTCLOCK $SERIAL_OPT_ERRORCHARACTER          $SERIAL_OPT_RCVTIMEOUT $KOTSERIALDTROUTPUTHANDSHAKE          $KOTSERIALCTSINPUTHANDSHAKE $KOTSERIALXONOFFOUTPUTHANDSHAKE          $KOTSERIALXONOFFINPUTHANDSHAKE $SERIAL_OPT_HANDSHAKE          $KOTSERIALOUTPUTBREAKON $KOTSERIALXOFFHOLD $KOTSERIALCTLHOLD          $KOTSERIALDTRNEGATED $KOTSERIALXOFFSENT $KOTSERIALFRAMINGERR          $KOTSERIALOVERRUNERR $KOTSERIALPARITYERR $KOTSERIALBREAKON          $KOTSERIALSWOVERRUNERR $SERIAL_OPT_STATUS $KOTSERIALEVENPARITY          $KOTSERIALODDPARITY $KOTSERIALNOPARITY $SERIAL_OPT_PARITY          $SERIAL_OPT_STOPBITS $SERIAL_OPT_DATABITS $SERIAL_OPT_BAUDRATE          $KOTSERIALSENDXOFFIFXONTRUE $KOTSERIALSENDXOFFALWAYS $I_SETSERIALXOFF          $KOTSERIALSENDXONIFXOFFTRUE $KOTSERIALSENDXONALWAYS $I_SETSERIALXON          $KOTSERIALFORCEXOFFFALSE $KOTSERIALFORCEXOFFTRUE          $I_SETSERIALXOFFSTATE $KOTSERIALSETBREAKOFF $KOTSERIALSETBREAKON          $I_SETSERIALBREAK $KOTSERIALSETDTRON $KOTSERIALSETDTROFF          $I_SETSERIALDTR $KOTSERIALFRAMINGASYNCPACKETS $KOTSERIALFRAMINGSDLC          $KOTSERIALFRAMINGHDLC $KOTSERIALFRAMINGASYNC $KSERIALABMODULEID          $KSERIALPORTBNAME $KSERIALPORTANAME $KSERIALNAME $KSERIALABNAME          $KSERIALABVERSION $COM_SERIAL))(provide-interface 'opentptserial)