@Chapter{From linguistic data to Word Manager entities}@Label{ "Help-1" }When an adjective is derived from a noun by suffixing, a noun stem ofany regular inflection class (= an Inflection Formative) is combinedwith a suffix (= a Wordformation Formative) to a new, complexadjective stem. The adjective stem has to be inserted into either the(RIRule o/a/i/e) or the (RIRule e/e/i/i). The choice of the target rule depends on the suffix. Since suffixes,being specified as WFFormatives, are not related to an InflectionRule, it is not possible to formulate an IRule  Propagation. Therefore, you have to formulate two different Wordformation Rules: one with the target IRule (RIRule o/a/i/e) and one with the target IRule (RIRule e/e/i/i). Only in this manner it is possible to specify the target IRule unambiguously. Each of this WFRules should match with suffixes forming adjectivesof the corresponding class, only. Consequently, the set of suffixesmust be subdiveded into two groups: one group of suffixes formingderivatives of the o/a/i/e-class and one group forming derivatives ofthe e/e/i/i-class. @Chapter{Specification of WFFormatives and WFRules}@Label{ "Help-2" }@Section{Specification of New Nodes}@Label{ "Help-2.1." }We need two new WFRules for the derivation of adjectives from nounsby suffixing. In the already existing wordformation tree of"Italian-Work", you stay in the subtree "WCFat Derivation". If thesubtree is not fully extended, select the bold nodes and choose the'Expand/Collapse' command in the Edit menu. The trees are fullyextended, when there are no bold nodes left. Then, we have to specify a new brother of (WFCat Adj-To-Adj). Wecall it (WFCat N-To-Adj). To distinguish the suffixing from possibleother derivational mechanism, we introduce a new son called (WFCatSuffixing). The two WFRules and the WFFormative node can bespecified as sons of the subtree (WFCat Suffixing). See Fig. below. @Figure{ "Wordformation Tree" | "128" | 283 | 318 } As always: other structures and other node names are possible.Remember:@ItemTo add new nodes, select a node in the wordformation tree and add ason or a brother node by using the 'New Son' or the 'New Brother'command in the @Application-Link{ "Edit-Menu" | "Client-Edit-Menu" }.@End-Item@ItemErroneously added nodes can be deleted or moved using the 'Cut,Copy and Paste Subtree' commands in the @Application-Link{"Edit-Menu" | "Client-Edit-Menu" }. @End-Item@ItemNode names must be features, i.e. a bracketed attribute-value pair,where attribute and value are separated by a white space.Wordformation Rule nodes must obligatorily have the attribute"RWFRule", wordformation formative nodes the attribute"WFFormatives". Make sure to meet these restrictionswhen you type the node names into the dialogue box@End-Item@ItemErrors in node names can be corrected using the 'Edit Node Name'command in the @Application-Link{ "Edit-Menu" |"Client-Edit-Menu" }. @End-Item @ItemThe mentioned commands in the Edit menu are only available when anode is selected in the Wordformation window. @End-Item @Section{Specification of the WFFormatives}@Label{ "Help-2.2." }The suffixes are specified as WFFormatives in the node window(WFCat Suffix). As we have said @Link{ "above" | "Help-1" }, the set of suffixes mustbe subdivided into two classes. We do so be qualifying them with twonew features (WFCat Target_o/a/i/e) and (WFCat Target_e/e/i/i).There are several possibilities to introduce this subdivision. We havechosen for one, where all suffixes are specified in the same nodewindow (WFCat Suffix). Instead of specifying them like this...@Figure{ "Specification of WFFormatives" | "129" | 520 | 263 }...we have formulated two WFFormative Groups. The common feature isspecifed on a new line. Underneath it, the features are specified aftera tab:@Figure{ "Specification of WFFormative Groups" | "130" | 517 | 266 }@Section{Specification of RWFRules}@Label{ "Help-2.3." }A WFRule consists of three parts: the source specialization, the targetspecialization and at least ond source-constraint.The specification starts with the keyword "source". The first sourceelement is a noun stem out of any regular noun class. Therefore, wespecify the parent node of all regular nominal inflection rules as thesource IRule: (RIRule N-Regular). The element taken from the source IRule is thenoun stem (ICat N-Stem). The second source element is a suffix, a WFFormative with the corrsponding qualifyingfeatures. Here, the suffixes with the feature Target_o/a/i/e):@Figure{ "Source Specialization of (RWFRule Target_o/a/i/e)" | "132"| 419 | 178 } In this example rule, the target IRule is the (RIRule o/a/i/e). The source elements stem("1") and suffix ("2") are put together to form the new adjective stem (ICatA-Stem.o/a/i/e). A possible target specialization looks like this:@Figure{ "Target Specalization of (RWFRule Target_o/a/i/e)" | "133" |418 | 178 } The specification of the source constraint isa copy of the source specialization in which all the elements are unambiguouslyspecified. For the example entry, we chose the stem "dolor" of the noun "dolore" out ofthe (RIRule e/i) and the suffix "os" from the suffixes with the feature  (WFCatTarget-o/a/i/e). Together they form together the new adjective stem "doloros":@Figure{ "Source-Constraint in (RWFRule Target_o/a/i/e)" | "134" |430 | 276 } The specification of the (RWFRule Target_e/e/i/i) is very similar. A noun stem of aregular noun is combined with a suffix qualified by the feature (WCat Target_e/e/i/i).Together, they form a adjective stem the is inserted into the target rule (RIRulee/e/i/i). For the source-constraint, we have chosen the noun stem "strad" out of the(RIRule a/e) and the suffix "al". Together, they form the stem "stradal" of the newadjective "stradale":@Figure{ "(RWFRule (Target_e/e/i/i)" | "135" | 427 | 258 }@Chapter{Syntax Check and Compilation}@Label{ "Help-3" }The syntax-check detects syntax errors and helps you to add thenewly introduced features to Feature Domains. After you have donethat, the database can be compiled. For this purpose, use thecommands 'Check Syntax' and 'Run Compiler' in the @Application-Link{"WordManager menu" | "Client-WM-Menu" }. If you do not remember how to use these commands, see section@Document-Link{ "Compilation" | "GoMan Texts:Tutorial;Tutorial" | "Compilation"}in which the commands are explained for the window Inflection. They workexactly the same for Wordformation. Note, that 'Compile All' initiates acompilation of the whole database, whereas with 'Run Compiler' only themodified subtrees are recompiled. Their handling, however, is exactly the same. If you do not succeed in detecting the syntax or other errors the system wantsyou to correct during the Syntax Check or the Compilation, you can try the following:Delete everything you specified yourself (WFSRules for noun-to-adjective derivation,WFFormative window; WFSRules, new hard-coded entries etc). Then, retry thespecification. If that doesnÕt work either, close the database Italian-Work('Close' in the File menu) WITHOUT!! saving it an restart at thebeginning of the section of the Tutorial you are presently working in. As a last resort, you can open our version of WF-Italian in which we formalizedthe noun-to-adjective suffixing as presented here. Try to detect the problemsby comparing your solutions to ours. Note, that it is possibleto copy the contents of node windows (with thecommon 'Copy/Paste' commands) as well as trees nodes and subtrees (with the 'Copy Subtree' and the 'Past Subtree as' commands in the Edit menu). @Application-Link{ "Open WF-Italian.4" | "WF-Italian.4" }.@Chapter{Lexeme Browser}How to handle the lexeme browser, cf. @Link{ "lexemebrowser" | "Lexeme Browser" }. @Chapter{Specification of WFSRules}@Label{ "Help-5" }A noun stem of the a/e or the o/i-class ending in "c" or "g" has an"h"inserted after it, when it is combined with a suffix starting with"e" or "i":@Verbatim 	amic-o		amich-evole	bosc-o		bosch-ivo@End-Verbatim The example show, that this holds for both types of noun stems, i.e.the noun stems which take an "h" in the plural and the noun stems thatremain unaltered in the plural. @Verbatim bosc-o - bosch-i	vs	amic-o - amic-i@End-Verbatim (cf. @Document-Link{ "Inflection Spelling Rules Italian Nouns" | "GoManTexts:Tutorial;Tutorial" | "ISRules-Data" })Stems of the first group are written with the lexical character "c"and "g"; stems of the second group are written with the speciallexical characters "C" and "G" (cf.@Document-Link{ "Introduction of speciallexical characters" | "GoMan Texts:Tutorial;Tutorial" |"Special-Lexical-Characters" }).These data can be expressed in a spelling rule (spelling rule syntax seeHelp Glossary): A noun stem of the a/e or the o/i-class ending in "c" or "g"...@Verbatim ".*[cgCG]" (ICat N-Stem.a/e)|(ICat N-Stem.o/i)@End-Verbatim ...has an "h" inserted after it (= is replaced by the same stringplus "h")... @Verbatim "(.*[cgCG])/\1h" (ICat N-Stem.a/e)|(ICat N-Stem.o/i)@End-Verbatim ...when it is combined with a suffix starting with "e" or "i"@Verbatim "(.*[cgCG])/\1h" (ICat N-Stem.a/e)|(ICat N-Stem.o/i)	>>			"[ei].*"  (WFCat Suffix)@End-Verbatim(">>"  and newline stand for a tab)This WFSRule is specified in the Spelling Rule Window with thename (WFSRule Suffixing_[cg]+[ei]/[cg]h+[ei]):@Figure{ "Wordformation Spelling Rule" | "136" | 522 | 325 }@Chapter{Specification of New Complex Entries}@Label{ "Help-6"}The derivation "bosco > boschivo" must be specified as source-constraint in the(RWFRule Target_o/a/i/e). The specification could look like this:@Figure{ "Source-Constraint Òbosco > boschivoÓ" | "137" | 494 | 332 }The derivation "amico > amichevole" must be specified as source-constraint inthe (RWFRule Target_e/e/i/i):@Figure{ "Source-Constraint Òamico > amichevoleÓ | "138" | 411 | 328} Note, that the output of a WFSRule is the lexical string of the new entry. Thelexical string of the stem of "boschivo" is "boschiv", not "bosciv". Furthermore,you must not forget that with the creation of "amichevole", the formative "amiC"has a new surface form: "amich". This new surface string must be specified withthe formative: "amiC" is introduced as the stem of the noun "amico" in the(RIRule o/i). You must specify the new surface string there:@Figure{ "New Surface String in (RIRule N-Regular.o/i)" | "139" | 431 |91 } 