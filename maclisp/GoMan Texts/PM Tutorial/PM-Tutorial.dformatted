          1. Introduction      This tutorial is an introduction to the work with Phrase Manager.      It should make you familiar with the tools, functions, commands,      etc. you can dispose of in the Phrase Manager interface.      Phrase Manager (PM) offers a formalism for the specification of      so-called multi-word units, from periphrastic inflectional forms      like "have learned " and "will learn " up to idiomatic phrases like      the famous "kick the bucket ".      The knowledge specification in PM relies on the morphological      knowledge defined in Word Manager (WM). Though WM and PM are      conceptually divided into two separate modules, they are      strongly interconnected through a well-defined interface.      Therefore, familiarity with the WM formalism is imperative for      a good understanding of PM and this tutorial!!      The WM-Formalism will not be explained here. However, you can      consult the WM-Glossary whenever it is necessary (choose      'Glossary' in the 'Help' menu when you want to consult it).      Furthermore, references are made to the Phrase Manager Book        and to several WM-PM databases. The references are marked in      the text by italics. Whenever you wish or are invited to read one      of the items reference is made to, just click the text in italics.      2. What’s in PM      In a first step, you are going to see what kind of phenomena can      be modelled by using PM:      Open German-PM        The Document Window   of the tutorial database “German-PM” is      now on your screen. Open the PM test window. You can do so by      clicking the button PM test   in the document window.      In the window, there are three lines of text.         •  Select the first line with the mouse (a triple click on             the line selects the whole line)         •  choose “Recognize” in the Phrase Manager Menu   or type             CTRL+K (this command is only available when a test             window is selected)      If you have carried out the two steps correctly, this should be      displayed on your screen:      Figure 2.1 Retrieval Dialog: “in das gras beissen”     The first text field   , underneath the title retrieved forms,      shows a modified version of the sentence that you have selected      in the PM-Test window.      The second text field   shows, as its title indicates, the      so-called minimal form of the retrieved sentence.      "ins gras beissen " (literally: 'to bite into the grass') is a German      equivalent of the English expression "to kick the bucket ",      meaning - in the same “distinguished” style - "to die ".      "er hat ins gras gebissen " ('he has bitten into the grass') is a      manifestation of the same sentence with the verb in the 3rd      person singular of the German perfect tense and the personal      pronoun of the 3rd person masculine singular "er ". The English      translation is "he has kicked the bucket ".      What other kinds of information contains this Retrieval Dialog?      2.1. Idiomatic Expressions      The sentence "er hat ins gras gebissen " has been retrieved as an      utterance of the expression "ins gras beissen " (more precisely:      "in das gras beissen ", but we will see this later). This is shown      in the second text field   .      "ins gras beissen " is the so-called minimal form. A minimal      form (also called "headphrase " or "canonical form ") is the form      of an idiom where no syntactic transformation has been applied      and where all words that do not contribute to the idiomatic      meaning of the expression are removed.      Compare the sentence "er hat in das gras gebissen " with the      minimal form: the verbform is in the infinitive and the personal      pronoun "er ", that does not contribute to the idiomatic meaning      of the expression, is not comprised in the minimal form.         •  Go back to the Retrieval Dialog   of "er hat ins gras             gebissen ".         •  Next to the title 'Minimal forms' there is a pull-down             menu called 'Action'. Go into it and choose             'Specification'      A window showing the specification of the expression "in das      gras beissen " is opened:         •  HEADPHRASE: specification of the minimal form of the             expression. The headphrase can contain the             specification of different possible inflectional             modifications. Here, the pointed brackets ( "<...> ")             indicate, that the word "beissen " can be inflected.         •  RESTRICTIONS: morphological restrictions. All words             occurring in the headphrase are specified with             morphological restrictions.             Some words cannot inflect, others inflect freely and             others undergo just a limited set of inflections. These             inflectional degrees are specified by means of the             wordform features defined in WM.             "in ", "das " and "gras " do not inflect in this expression,             therefore they are specified with a feature set that             defines them as one particular wordform.             On the other hand, "beissen " does inflect in all but the             wordforms of the passive. Therefore it is specified             with the feature (Cat V), common to all the wordforms             of a verb. Only the wordforms of the passive are             excluded: 	^(Form Passive)        •  MODIFICATIONS: Under modifications, you specify how             the phrase can be modified by “external” words.             External words are words that can be added within the             phrase without damaging its idiosyncratic meaning (=             discontinuity). Each word of the phrase can be             associated with modifications indicating that it can be             associated with external words on its right-hand "< " or             its left-hand "> " side.             The verb "beissen " can be associated with external             words on its right-hand side. E.g.:             		er beisst HEUTE NOCH ins gras		(he’ll kick the bucket this very day)                        Try it out: Type the above German sentence into the             PM-Test   window (use lowercase characters only),             select it with a triple click and choose 'Recognize' in             the Phrase Manager Menu   (the command is only             available when the PM-Test window is selected).             If you have done everything correctly (e.g. no typing             errors), a new retrieval dialog should be opened.             Although the analysed sentence is interrupted by the             “external” words "heute " and "noch ", the system has             recognized the minimal form "in das gras beissen ". This             thanks to the modification specifying that "beissen "             can have external words on its right-hand side.             Other "interruptions " of the phrase are not allowed. Try             to have analysed the sentence "er beisst ins grüne gras "             which has only the literal meaning "he bites into the             green grass ". Since neither "in " nor "gras " are allowed             to have external words on any side, the system,             correctly, won’t find a minimal form.      Before you go on reading, close the Retrieval Dialogs of 		er beisst heute noch in das gras	er beisst in das grüne gras     and select the window entitled "in das gras beissen " (tip: to      select a window that is hidden behind other windows, you can      use the menu Windows   .         •  CLASS: indicates which class the phrase belongs to. A             class describes and defines a certain morphosyntactic             type of idiomatic expressions. Our example belongs to a             type with the following syntactical structure:             Figure 2.2 Syntax tree of “ins gras beissen”                 Other idiomatic expressions belonging to the same class are      	auf der hand liegen		to be lying on the hand = to be obvious	aus dem ärmel schütteln		to shake out of the sleeve = to produce just like that 	auf dem hohen ross sitzen		to be sitting on the high horse = to be on one’s high horse           You can see another representation of this syntax tree in the      Retrieval Dialog   of "er hat in das gras gebissen ":         •  Select the Retrieval Dialog         •  Go to the pull-down menu 'Selection' next to the title             "Retrieved forms "         •  Choose 'Syntax Tree'.      The syntax tree of the idiomatic expression, as it appears in the      analysed sentence, will be shown.      The syntax tree is used by the system to recognize predefined      syntactical transformations like, in this case, inversion.      Figure 2.3 Inversion; example “ins gras beissen”     How all these information (headphrase definition, modifications,      transformations, morphological restrictions, etc.) is to be      specified will be shown later.      2.2. Periphrastic Inflection              •  Go back to the Retrieval Dialog   of "er hat in das gras             gebissen "         •  Go to the pull-down menu 'Selection' next to the title             'Retrieved forms'         •  Choose 'Words' (when the option 'Words' is already             selected, the command is not available).      The text field   entitled 'Words' lists all the wordforms      occurring in the analysed sentence.      The text field   underneath it shows the morphological features      of a selected wordform. You can select a wordform by clicking it      in the wordform list of the text field with the title 'Words'.         •  Have a look at the morphological features of some of             the listed wordforms.      The interesting case here is the wordform "hat gebissen " ('has      bitten') with its morphological features.      When you open the lexeme browser of the verb "beissen " you will      see that it does not contain analytical wordforms like e.g. "hat      gebissen ". Check it yourself by opening its lexeme browser.      You can open its lexeme browser the “usual” way (using the      command 'Retrieve lexicalized Entries' in the WordManager menu        or typing CTRL+L when a wordform of the verb is selected in one      of the test windows).      However, it is also possible to open the lexeme browser of      "beissen " directly from the retrieval dialog.         •  Select the wordform "hat gebissen " in the field 'Words'.         •  Go to the menu 'Action' next to the title 'Words' and             choose the option "beissen " -> the lexeme browser will             be opened.         •  Have a look at the wordforms of the verb (either             subparadigm by subparadigm or all at once by choosing             'Wordforms' in the upper pull-down menu of the             browser)      Indeed, there is no wordform 	hat gebissen	(Cat V)(Mod Ind)(Temp Perf)(Pers 3rd)(Num SG)     although - as we have seen - this wordform is listed under      Words in the retrieval dialog of "er hat in das gras gebissen ".      Go back to the retrieval dialog and select "hat gebissen " in the      'Words' field. Then, have a look at the last text field   , entitled      'Periphrastic inflections'      Figure 2.4 Field “Periphrastic inflections”     This indicates that "hat gebissen " has been analised as a      wordform of "beissen " by a function called AUXILIARY-PERF.      Furthermore, one can see that this function combines "haben "      ('have') with a past participle ( "pp ").      Functions specifying analytical wordforms (or periphrastic      inflection) like 	hat gebissen	has bitten	sarà fatto		(Italian: 'will be done')	aurait vu		(French: 'would have seen')	wird gegessen haben	(German: 'will have eaten')	etc.     can be specified in PM. These functions recognize the      combination of two elements specified in Word Manager as one      wordform. E.g. the combination of a wordform of the verb "haben      " plus a past participle ( "pp ") forms a wordform of the perfect      tense.      Basically, periphrastic inflections are specified like idiomatic      expressions. Choose 'Specification' in the pull-down menu      'Action' next to the title 'Periphrastic inflections'. In the      appearing window you can see, that such a specification consists      of a Headphrase, Restrictions, Modifications and the Indication      of a Class, too.      Further specifications are defined in a separate window, the      window 'Periphrastic Inflections'. You can open it by clicking the      button periphr   in the document window.      Figure 2.5 Window “Periphrastic Inflections”     Here you can specify, among other things:         •  which one of the inflectional paradigms of the two             elements the recognized wordform belongs to             e.g. "hat gebissen " is a wordform of "beissen ", not of             "haben ")         •  the attribution of the morphosyntactic features to the             analytical wordform             e.g. (Mod Ind)(Temp Perf)(Pers 3rd)(Num SG) to "hat             gebissen "      Details concerning the specification of periphrastic inflections      will be treated later.      All the German tenses formed by periphrastic inflection are      specified in German-PM. Have a look at some of the following      expressions.         •  Copy them into the PM-Test window         •  select one expression at a time         •  choose 'Recognize' in the PraseManager menu or type             CTRL+K      	sie ist gegangen			'she has gone'	du wirst kommen				'you will come'	ich würde gegangen sein			'I would have gone'	wir wären geschlagen worden		'we would have been beaten'	du hättest ins gras gebissen		'you would have bitten...'	du würdest ins gras gebissen haben	'you would have bitten...'	          2.3. Clitics      The phenomenon of clitics is generally explained as the leaning      of one or more unstressed words (bound words) against a      stressed one. The line between bound and free words, however, is      sometimes difficult to trace. In Phrase Manager, we handle as      clitics “only” the cases where different syntactic forms are      bound into a single text word. The purpose of the clitic analysis      is to separate the different components of a fused text word:      		cannot		->	can not	he’ll go	->	he will go	j’accuse	->	je accuse	(French: 'I accuse')	am Abend	->	an dem Abend	(German: 'in the evening')	dimmelo		->	dì me lo	(Italian: 'say me it' = 'say it to me')      An example of a clitic analysis can be observed in our example      "ins gras beissen ".         •  Go back to German-PM   , into the PM test   Window         •  Select the sentence "er hat ins gras gebissen "         •  Choose 'Recognize' in the PhraseManager menu (or press             CRTL+K)      When you compare the input sentence in the test window to the      result of the analysis under 'Retrieved forms' in the retrieval      dialog, you will see that the fused wordform "ins " has been      separated into the words "in " and "das ".      This has been done by a so-called clitic rule (CRule). Have a look      at the clitic rule:         •  Select the wordform "in " or "das " in the 'Words' field             of the retrieval dialog.         •  Got to the menu 'Action' next to the title 'Words'         •  Choose the option (CRule Prep+Article)      The window (CRule Prep+Article) contains all the Clitic Rules      specifying combinations of German prepositions with articles to      fused wordforms. The first line is the CRule responsible for the      splitting up of "ins " into "in " and "das. The exact syntax of these      rules will be explained later.      To see some more sentences with clitics, copy the expressions      below into the PM-Test window, select them one at a time and      have them analysed in the usual manner ('Recognize' in the      'PhraseManager' menu or CTRL+K)      	ich bin zur oma gegangen	'I went to grandma’s'	sie hat’s geändert		'she has changed it'	heute wird’s gut gehen		'today, it will work,  we will manage (well)'          3. Reading      An overview of Phrase Manager is given in the introductory      chapter of the Phrase Manager Book   . We suggest that you have a      look at Chapter 1 (pp. 3-13) before you go on with the Tutorial.      4. A first Phrase Class: The Guided Tour      In this chapter, we are going to show you the specification of a      first idiom class (phrase class or PHClass) with one specific      idiomatic expression.      Just read, observe and try to execute the commands and the      typing exactly as you will be asked to do. After this      presentation, you will be invited to specify a rule by yourself.      First of all, you have to open the database we are going to work      with:      Open Italian-PM-W1        It is an Italian database. "PM " stands for Phrase Manager, "W1 "      for work-database #1 (there are more to come...). It is a tutorial      database and therefore incomplete (e.g. no wordformation).      However, it contains all the information needed for the      specification of some phrase classes.      We suggest that you make yourself acquainted with it by using      the general browser   and by opening some lexeme browsers. Most      of the WM-entries are listed in the WM test   window. Especially      for people with no knowledge of the Italian language it might be      very useful to have a look at the inflectional paradigms of some      nouns, adjectives and verbs.         •  Go into the database Italian-PM-W1 and have a look at             some entries           4.1. The Class Tree      (If you haven’t done it yet, open Italian-PM-W1   )      The example phrase for the phrase class we are going to specify      is:      		la dolce vita     It is a noun phrase with an article, an adjective and a noun.      Figure 4.1 Syntax Tree “la dolce vita”     We mention the syntactic structure of this expression because,      in Phrase Manager, the main criterion for the categorization of      phrase classes is their syntactic structure.      According to this categorization principle, the following      expressions belong to the same PHClass:      		il bel mondo		(the beautiful world = the jet-set)	una buona testa		(a good head = an intelligent person)	le belle arti		(the fine arts)          The phrase classes are structured in a hierarchic tree-structure      similar to the inflection or the wordformation tree in Word      Manager.      The class tree is specified in the so-called 'Class' window. You      can open it by clicking the class button   in the document      window.         •  Open the Class window      The window displayed on your screen, now, should be empty      except for the word "root ". It is the root node of the class tree.      You are supposed to be familiar with the handling of the tree of      the Class window; it works exactly the same as the trees in the      windows Inflection and Wordformation. You will find the usual      tree-commands in the Edit menu   .      The PHClasses are specified in the leave nodes of the tree. For      the class of "la dolce vita ", we suggest a node name like      (PHClass Art+[Adj+N]). Since the syntactic structure is the main      criterion for the categorization of classes, one preferably takes      node names related to the syntactic structure of the classes.      For the time being, we suggest an intermediate node (PHClass      NP) between the root node and the leave node. As usual in WM and      in PM, other names and structures are possible. However, the      features used in the tree for the structuring of phrase classes      must obligatorily have the attribute 'PHClass'.         •  Go into the Class window (open it first, if you have not             done that, yet)         •  Select the root node by clicking it         •  Choose 'New Son' in the Edit menu           •  Type (PHClass NP)into the dialogue box; pay attention             to typing errors, especially regarding the obligatory             value "PHClass ".         •  Click OK         •  Then, in the same manner, add a new son to the node             (PHClass NP). Name it (PHClass Art+[Adj+N]).      The Class window should now look like this:      Figure 4.2 Class Window          4.2. Specification of the PHClass      (If you want to work with the tutorial and you have not done the      previous section, you have to go back and work it through.      Otherwise it will not be possible to execute the commands. So, if      necessary: Go back   )      Now that we have specified an initial class tree, we can tackle      the definition of a first PHClass.         •  Open the class window by double-clicking the node             (PHClass Art+[Adj+N]) in the Class window        The specification of a PHClass consists of several subparts, each      of them introduced by a title. We are going to specify them step      by step.      4.2.1. Syntax Tree           The first step is the specification of the syntax tree.      The syntax tree characterizes all phrases of the class. The tree      will be associated with every idiom that is entered in this      PHClass. It is used for the definition of syntactic      transformations like, e.g. inversion (see next section      Transformation).      Type into the window (PHClass Art+[Adj+N]):         •  SYNTAX-TREE         •  Newline         •  (NP Art (NP Adj N))         •  Newline      The window should now look like this:      Figure 4.3 Syntax-Tree (PHClass Art+[Adj+N])     The notation of the syntax tree is linear. One pair of brackets      encloses the parent node and its direct son nodes.      E.g.: Have a look at the structure of "la dolce vita " and compare      it to the linear notation.      Figure 4.4 Syntax Tree Notation      The symbols used as node names can represent syntactic      structures or morphological categories. If they represent      morphological categories, you must verify that the symbol you      use for a certain category actually corresponds to the symbol      used in WM for the same category.      Here, e.g. "Adj " and not "A " for adjective, since in the inflection      part of Italian-PM-W1 adjectives have the feature (Cat Adj).      This supports the automatic matching of syntax-trees with new      inserted phrases.      4.2.2. Modifications              •  Type 		MODIFICATIONS            on a new line underneath the syntax-tree specification             in the PHClass window (PHClass Art+[Adj+N).      Under modifications, you specify how the phrase can be modified      by "external " words. External words are words that can be added      within the phrase without damaging its idiosyncratic meaning (=      discontinuity).      Here, you can specify global modifications, i.e. modifications      that are permitted for all idioms associated with this PHClass.      Each word type of the phrase can be associated with      modifications indicating that it can be associated with external      words on its right-hand "< " or its left-hand "> " side.      For the class of "la dolce vita ", one global modifications is      allowed. The adjective can be associated with external words on      its left-hand side. E.g.: 	la BELLA dolce vita	('the beautiful sweet life')	una VERA buona testa	('a really intelligent person')             •  Type             Adj <             on a new line underneath the title MODIFICATIONS. The             Symbol "Adj " and the modification character "< " are             separated by a White Space.      This means that the adjective can have one or more “external      words” on its left-hand side.      The PHClass window should now look like this:      Figure 4.5 Global Modifications (PHClass Art+[Adj+N])          4.2.3. Transformations              •  Type 		TRANSFORMATIONS            on a new line underneath the modifications in the             PHClass window (PHClass Art+[Adj+N).      Transformation Rules are rules that specify possible syntactic      transformations like e.g. inversion and other changes in      word-order. They are specified elsewhere together with a rule      identifier.      By means of these rule identifiers you specify which      transformation rules may be applied on the PHClass, i.e. which      syntactical transformations the idioms of a class can undergo      without losing their idiomatic meaning.      The word-order in expressions of the "la dolce vita " type can’t      be changed. E.g.: 		una buona testa = fig. 'an intelligent person'	una testa buona = only lit. 'a good head'          Since no syntactical transformations are possible, no      transformation rule identifier must be specified. This is      indicated by a hyphen.         •  Type a hyphen ( "- ") on a new line underneath the title             TRANSFORMATIONS      The PHClass window should now look like this:      Figure 4.6 Transformations (PHClass Art+[Adj+N])          4.2.4. Example           Like in Inflection or Wordformation Rules in WM, you have to      specify at least one hard coded example for each PHClass. We are      going to specify "la dolce vita " as example phrase for the      (PHClass Art+[Adj+N]).      On a new line underneath the Transformations in the PHClass      window (PHClass Art+[Adj+N]), type:         •  EXAMPLE        •  Newline         •  la dolce vita        •  Newline           Figure 4.7 Example Phrase (PHClass Art+[Adj+N])     None of the three wordforms in the example phrase may be      modified by inflection (e.g. plural * "le dolci vite " or superlative      "la dolcissima vita ").      As we will specify more precisely later, this is “indicated” by      the lack of any special characters in the example phrase. So, only      phrases containing exactly the three wordforms specified in the      example phrase will be recognized as idiomatic expression.      Each example is followed by the specification of morphological      restrictions. They allow the disambiguation of homographic      wordforms and the specification to what extend words may      inflect (provided that the words in the example phrase are      allowed to inflect).      Morphological restrictions are specified by means of the      wordform features defined in WM. Each wordform is specified on      a new line: first its surface string, then the wordform features:      On a new line underneath the example phrase, type:      		la	(Cat Art)(Cat Def)(Num SG)(Gen F)	dolce	(Cat Adj)(Manner Qual)(Num SG)(Gen F)	vita	(Cat N)(Gen F)(Num SG)          Figure 4.8 Morphological Restrictions “la dolce vita”     Since none of the wordforms in "la dolce vita " is allowed to      inflect, we have indicated the full set of wordform features that      specify exactly one wordform.      There are two possibilities to detect or check the exact      wordform features of a given wordform.         •  Open to the message window of Italian-PM-W1.         •  Type the three wordforms "la ", "dolce ", "vita "         •  Open their lexical browser one by one (select a             wordform and press CTRL+L)         •  Check the relevant wordform features      A quicker and more practical manner is to         •  Go to the message window of Italian-PM-W1.         •  Type the three wordforms "la ", "dolce ", "vita "         •  Select one wordform at a time         •  Choose 'Recognize' in the Phrase Manager Menu   (or             press CTRL+K)         •  In the Retrieval Dialog, under 'Morphological features',             you will find the wordform together with its whole set             of wordform features. When a wordform is homographic             (e.g. "la "), all homographs will be listed with their             wordform features.      This second method of checking the wordform features      facilitates the disambiguation of homographic wordforms.         •  Try out both ways (lexeme browser and             PM-retrieval-dialog) to check if the morphological             restrictions we specified are correct.      Finally, underneath the morphological restrictions, you have the      possibility to specify individual modifications, i.e. modifications      that are only allowed with this particular phrase. We have      already specified a general modification allowing the adjective      being associated with “external” words on its left-hand side      (see above Modifications   ).      The example "la dolce vita " does not allow any other      modification. So,         •  type a hyphen on a new line underneath the             morphological restrictions and close the PHClass             specification with a Newline      The Class window should now look like this:      Figure 4.9 (PHClass Art+[Adj+N])     This is the complete specification of the first PHClass!      4.3. Compilation              •  If you have carried out all steps described in the             previous section, you can now compile the PM-part of             your work database as described below.         •  If you have not worked through the previous section, we             suggest that you do so before you go on with this             tutorial. So, go back   .         •  If you have worked through the previous sections in an             earlier session - or if you are only interested in what             follows - you can open a copy of the database             Italian-PM-W1. Open Italian-PM-W2   .      To compile the database:         •  Choose 'Run Compiler' or 'Compile All' in the Phrase             Manager Menu   . The commands are only available when             a database is selected.         •  Click OK in the dialog box.      If you have carried out all specification steps correctly, the      following message will be displayed in the message window:       > PM Compilation ok. It took ... seconds.     Since the PM-database is still very small, the indicated      compilation time can be 0 seconds.      ----------------------------------------------------------      If you have made any mistakes, the system will warn you with an      acoustic signal and an error message. If this is the case, try to      correct the error.      If you do not succeed in detecting and correcting the error, we      suggest that you close the database Italian-PM-W1 WITHOUT      saving it. Then, go back   and try it once again. If that does not      work either, you can open the database Italian-PM-W2   and do      the compilation there.      ----------------------------------------------------------      When the database is successfully compiled, you can test the      PHClass specification:         •  Open the Messages window or the PM-test window of             the Italian-PM database you are currently in.         •  Type the phrase "la dolce vita "         •  Select the phrase (e.g. by a triple click)         •  Choose 'Recognize' in the 'PhraseManger' menu      If the specification has been done correctly, the Retrieval Dialog      displays in its first text field the analysed phrase, in its second      text field the minimal form of the expression (here, the analysed      phrase and the minimal form of the expression are identical):      Figure 4.10 Retieval Dialog “la dolce vita”     ----------------------------------------------------------      If however the result of the phrase analysis is different from      what the above figure shows, you have probably made a mistake      somewhere. The indication next to the title 'Retrieved forms'      	No matched idioms      means that the analysed sentence has not been recognized as the      idiomatic expression we have specified in the previous sections.      Check your specification in Italian-PM-W1; especially the      morphological restrictions in the Example specification (see      figure 'Morphological Restrictions' under Example   ).      ----------------------------------------------------------      When the phrase has been recognized as an idiomatic expression,      the Retrieval dialog will look as shown in the above figure.         •  Have a look at the syntax tree and at the wordforms.             Move around in the retrieval dialog by choosing the             different available commands in its pull-down-menus.             Most of the retrievable information should be             understandable without any comments. If not, it will             become clearer later in this tutorial.      The sentence has been recognized as an idiomatic expression.      Now, we can test other utterances. Copy them into the Messages      or the PM-Test window and have them analysed (select them and      press CTRL+K).         •  le dolci vite            Plural of "la dolce vita "; should not be recognized as an             utterance of the idiom "la dolce vita ". The wordforms             of the idiom are not allowed to inflect. Cf. section             Example   .         •  la vera dolce vita            'the real sweet life'; should be recognized as idiomatic             expression. The adjective may have “external words” on             its left-hand side. Cf. section Modifications   .         •  la vita dolce            inversion of adjective and noun; should not be             recognized as idiomatic expression. No syntactical             transformations are allowed for the idiom. Cf. section             Transformations   .         •  la dolce sacra vita            'the sweet holy life'; should not be recognized as             idiomatic expression. “External” words are not allowed             on the right-hand side of the adjective nor on the             left-hand side of the noun. Cf. section Modifications   .      When the results of the retrieves are as described, the      specification of the first PHClass is correct. You can go on to the      specification of a second PHClass.      5. A Second PHClass           The first PHClass embraces expression of the type article +      adjective + noun ( "la dolce vita ", "una buona testa ").      The second PHClass has a slightly different syntactic structure.      Examples are:      	la pecora nera		'the black sheep'	una notte bianca	'a white night' = 'a sleepless night'	il carbone bianco	'the white coal' = 'hydroelectric power'          As you have probably discovered, the syntactical structure of      this type of expressions is: article + adjective + noun. This      structure does not fit the structure of the first PHClass we have      specified. Therefore, another PHClass has to be specified.      It is your task to specify this second PHClass. You are going to      try this in the database Italian-PM-W2. It is a copy of the      database we have worked with until now. The example phrase      will be "la pecora nera " ('the black sheep').      As a little support, some additional linguistic information for      the ones who do not know Italian and a summary description of      the steps you have to take will be given. In case you do not      remember everything presented in the previous sections,      references are made to a help-document and/or to the      corresponding passages of the specification of the first PHClass.      Follow the suggestions step by step, or - if you feel sure enough      - try it all by yourself.      So, open Italian-PM-W2        First of all, open the Class window   , extend the tree and have a      good look at the specification of the (PHClass Art+[Adj+N]).      Then, you can start the specification of the second PH-Class:      1) Consider the example phrases and define their syntax tree.      This will help you to find a suitable name for the new PHClass      and a suitable position in the class-tree. The example phrases      are: 		la pecora nera	una notte bianca	il carbone bianco          Cf. First part of section The Class Tree   ( Help   )      2) Add a new class node to the class-tree. Cf. Continuation of      section The Class Tree   ( Help   )      3) Open the new PHClass window and write a specification for      the "la pecora nera " class. The specification can be subdivided      into the following steps:      3.1) Specify the Syntax-Tree. Cf. section Syntax-Tree   ( Help   )      3.2.) Specify the Modifications. In the expressions of the "la      pecora nera " type, the noun can be associated with external      words on its left-hand side. E.g.:      		la solita pecora nera		'the usual black sheep'	il vero carbone bianco		'the real white coal'		          Other modifications are not possible with this type of      expressions. Cf. section Modifications   ( Help   ).      3.3) Specify the Transformations. No syntactical transformation      are allowed with this type of phrases. Cf. Section      Transformations   ( Help   ).      3.4.) Specify the Example phrase. The example phrase is      "la pecora nera"     None of the wordforms can be inflected without the expression      loosing its idiosyncratic meaning.      Remember that you have to specify Morphological Restrictions      for each wordform, and that the Example specification is closed      with the specification of individual modifications (No individual      modifications with "la pecora nera "). Cf. section Example   ( Help        ).      4) Compile the database. Cf. section Compilation   ( Help   ).      5) Check the correctness of your specification ( Help   ).      The specification of the second PHClass is completed!      6. Reading      In the previous chapters, two simple PHClasses have been      specified. In the following chapters, some other tools available      in Phrase Manager will be presented. The first one concerns the      specification of periphrastic inflection clusters like "have gone      ", "aurait fait ", "sono andato ", "wird gegangen sein ", "more      beautiful ", "most delightful " etc.      We suggest that you read, in the Phrase Manager Book   , pp.      48-50 and pp. 78-81 on Periphrastic Inflection Rules, before you      go on with the tutorial.      7. Periphrastic Inflection Class: The guided    Tour           PIClass stands for Periphrastic Inflection Class. In a PIClass,      you specify classes of periphrastic inflection clusters.      PIClasses are treated as a particular kind of phrases. The only      difference between PHClasses and PIClasses is that a PIClass      must contain a reference to a so called Periphrastic Inflection      Rule.      In the following sections, we are going to specify a PIClass and      the corresponding Periphrastic Inflection Rules for the German      perfect and past perfect.      7.1. The Data: German Perfect Tense           The German Perfect tense is formed with the present tense of      the auxiliary "haben " or "sein " and the past participle:      	ich bin gegangen		ich habe gebissen	du bist gegangen		du hast gebissen	er ist gegangen			sie hat gebissen	wir sind gegangen		wir haben gebissen	ihr seid gegangen		ihr habt gebissen	sie sind gegangen		sie haben gebissen	'I have gone'			'I have bitten'	etc.				etc.          The general rule is that transitive verbs take "haben " and      intransitive verbs take "sein ". In this form, this is rather an      approximation than a rule, because there are a quite a lot of      exceptions. Anyhow, the choice of the auxiliary does not bother      us, here.      More detailed information will be given during the specification      of the PIClass and the periphrastic inflection rule.      Open German-PM-W1        7.2. The Class Tree           Periphrastic Inflection Classes (PIClasses) are specified in the      same class tree as PHClasses. So, open the Class window   of      German-PM-W1.      The class window already contains a PHClass subtree (PHClass      VP). PHClasses and PIClasses must be specified in different      subtrees. Therefore, we are going to specify a new parent node:         •  In the class window, select the node (PHClass VP)         •  Choose 'New Brother' in the Edit   menu         •  Into the dialogue box, type             (PIClass Auxiliary)            The attribute "PIClass " (Periphrastic Inflection Class)             is obligatory, the value "Auxiliary " is chosen freely.         •  Click OK.      Then, we can add another node for the PIClass specifying the      perfect tense. We will call it (PIClass Perfect)         •  In the usual manner, add a new son node to the (PIClass             Auxiliary) and name it (PIClass Perfect).      The class window should now look like this (PHClass subtree can      also be partially or fully extended):      Figure 7.1 PIClass Subtree “Auxiliary”          7.3. Specification of the PIClass      In the previous section, we have specified a node for the first      PIClass. Now, we can start its specification:         •  Open the window (PIClass Perfect) by double-clicking             it.      The specification of a PIClass does not differ much from the      specification of a PHClass. It consists of the same subparts,      each of them introduced by a title. Again, we are going to specify      them step by step.      Since the German perfect tense has more syntactical      “instability” than the first two PHClasses, there will be quite a      lot of specification work to do. This can be a little confusing,      but just read, observe, execute the commands and the typing      exactly as you will be asked to, and try not to loose track of      what we are doing.      7.3.1. Syntax Tree           The syntax tree of the German perfect tense can be represented      as follows:      Figure 7.2 Syntax Tree German Perfect Tense     In the representation used in Phrase Manager - one pair of      brackets encloses the parent node and its direct son nodes - the      syntax tree must be specified like this:      (VP V V)     So, open the window (PIClass Perfect) by double-clicking it (if      you haven’t done that, yet) and type:         •  SYNTAX-TREE        •  Newline         •  (VP V V)        •  Newline      The PIClass window should now look like this:      Figure 7.3 Syntax Tree (PIClass Perfect)          7.3.2. Modifications           As you probably remember, Modifications specify which words of      a phrase may be associated with “external” words. As for the      German perfect tense, external words may stand between the      two verbforms:      		ich BIN noch nicht GEGANGEN						'I have not yet gone'	sie IST früh nach Hause GEGANGEN					'she has gone home early'	 er HAT den Hund GESCHLAGEN					'he has beaten the dog'          This can be expressed in two manners:         •  external words are associated on the right-hand side of             the first verbform:             V-1 >        •  external words are associated on the left-hand side of             the second verbform:             V-2 <     When a syntax tree has two or more identical symbols (here: V),      they can be referred to by digits indicating their position (left to      right) in the tree. Thus V-1 and V-2. When no digit is indicated,      the first symbol from the left is taken.      We are going to specify the first solution mentioned above, i.e.      the first verbform may be associated with external words on its      right-hand side.      On a new line underneath the specification of the syntax tree,      type:         •  MODIFICATIONS        •  Newline         •  V >            It would be equally correct to specify: V-1 >     This is how the PIClass window should look like, now:      Figure 7.4 Modifications (PIClass Perfect)          7.3.3. Transformations           Transformations define what kind of syntactic transformations      (changes in word order) are possible with the phrase class.      The two verb-forms of the German perfect are inverted in      subordinate clauses:      main clause			subordinateich BIN GEGANGEN		weil ich GEGANGEN BIN'I have gone'			'because I have gone' wir HABEN den hund GESCHLAGEN	daß wir den Hund GESCHLAGEN HABEN'we have beaten the dog'	'that we have beaten the dog'          This inversion is handled by a transformation rule we will call      "VV-Inversion ".      Transformation rules are not specified within the PIClass but in      a separate window 'Transformations'. There, they are specified      together with a rule identifier. By means of these rule      identifiers, you specify in the class window which      transformation may be applied on the class. In this way,      transformations that are valid for several classes have to be      specified only once.      Let’s go back to our PIClass to clarify this:      On a new line underneath the specification of the modifications,      type:         •  TRANSFORMATIONS        •  Newline         •  VV-Inversion        •  Newline           Figure 7.5 Transformations (PIClass Perfect)     "VV-Inversion " is the rule identifier of the transformation rule      we still have to specify.      7.3.3.1. Specification of a transformation rule              •  Open the Transformations window of German-PM-W1 by             clicking the button transf   in the document window.      The window already contains a transformation rule with the      identifier "PPV-Inversion ". It is responsible for a      transformation in the PHClass represented by the example phrase      "ins gras beissen ", i.e. the phrase we have seen in the      introductory section of this tutorial (section "What’s in PM ").      Go into the window and type on a new line, underneath the      already specified transformation rule:         •  VV-Inversion		(this is the identifier of the new rule)         •  Newline         •  (VP V-1 V-2) -> (VP V-2 V-1)         •  Newline           Figure 7.6 Transformations: “VV-Inversion”     The flash is the combination of a hyphen "- " and a pointed      bracket "> ".      On the left-hand side of the flash, we have specified the syntax      tree of the periphrastic inflection phrase as it is specified in      the PIClass. The two identical symbols are numbered from left to      right (V-1 and V-2).      On the right-hand side of the flash, we have specified the syntax      tree of the modified phrase, i.e. the syntax tree of the phrase      after the transformation. V-1 and V-2 may be inverted.      Figure 7.7 Transformation “VV-Inversion”     This syntactical transformation is possible for all phrase      classes containing the reference "VV-Inversion " under      TRANSFORMATIONS. At this stage of the specification, this holds      for the (PIClass Perfect).      Close now the window Transformations and go back to the      PIClass Perfect.      7.3.4. Periphrastic Inflection           Under the subtitle "PERIPHR-INFL " you specify a reference to the      periphrastic inflection rule(s) responsible for the PIClass.      Periphrastic inflection rules define how the elements of      periphrastic inflections are recognized and what feature      structures should be built for their representation.      Like transformations, periphrastic inflection rules are not      specified within the PIClass definition. They are formalized in a      separate window together with a PI-rule identifier. By means of      these rule identifiers, you specify in the PIClass window which      PI-rules are responsible for the class.      The periphrastic inflection rules for the German perfect tense      will be called "Auxiliary-Perfect ". We will see later, how this      rule is to be specified. For the time being, we will only specify      the reference to it.      So, go into the window (PIClass Perfect). On a new line, under      the specification of the Transformations, type:         •  PERIPHR-INFL        •  Newline         •  Auxiliary-Perfect        •  Newline           Figure 7.8 Periph-Infl (PIClass Perfect)          7.3.5. Example           7.3.5.1. Example Phrase           The example phrase for German perfect tense is quite simple.      The verbs "haben " and "sein ", respectively, are combined with a      past participle.      In the window (PIClass Perfect), on a new line, type         •  EXAMPLE        •  Newline         •  <haben>            The pointed brackets indicate that "haben " may be             inflected.         •  White Space (or Tab)         •  pp            "pp " stands for "participle perfect " = past participle. It             is a keyword that we will have to specify in a separate             window.         •  Newline      The example specification      <haben> pp     says, that an inflected wordform of the lexeme "haben " and a      past participle are combined to form an entity.      7.3.5.2. Keyword Specification           To indicate the past participle, we used the keyword "pp ".      Keywords are simple identifiers representing feature sets. They      are used to avoid redundancies in specifications and can be used      in different parts of a PM-formalization. The specification of      keywords takes place in the window 'Keywords'.         •  Click the keywords button   in the document window to             open the window.      The window already contains three keywords. To add our new      keyword         •  go into the window 'Key-Words'         •  on a new line, type:             pp = (Cat V)(Mod Part)(Temp Perf)     As you see, the syntax of a keyword specification is very simple:      On the left-hand side of the equals sign ( "= "), you specify the      keyword. The only restriction is that a keyword must not be      homographic with any wordform of any lexeme stored or likely      ever to be stored in the database.      On the right-hand side, you indicate the feature or feature set      the keyword stands for. In our German database, the past      participle is defined by the feature set we have just specified in      the keyword-window.      After the specification of the keyword, close the window      key-words and go back to the (PIClass Perfect)      7.3.5.3. Morphological Restrictions           Like an example phrase in a PHClass definition, an example in a      PIClass must contain morphological restrictions. Morphological      restrictions allow the disambiguation of homographic wordforms      and the specification to what extend words may inflect.      There are two elements in the example phrase: "<haben> " and "pp      ".         •  "haben " may be inflected. To what extend is not             relevant here, as we will see with the specification of             the periphrastic inflection rule(s). So, type on a new             line, underneath the example phrase:             haben   (Cat V)        •  The keyword "pp " is already specified as a past             participle (cf. previous subsection). Nevertheless, we             want to add a morphological restriction: only pp’s of             verbs specified with the feature (Aux haben) have a             perfect tense with "haben ". Therefore, type on a new             line:             pp   (Cat V)(Aux haben)     Do not forget, that every example must be closed by the      indication of individual modifications. There are none.         •  Type a hyphen "- ", on a new line.           Figure 7.9 Example Specification (PIClass Perfect)     This was the specification of the example phrase for the perfect      with "haben ".         •  Try now to specify the example phrase for "sein ". Start             with the subtitle EXAMPLE on a new line and continue             analogously to the example with "haben ".      The window (PIClass Perfect) should now look like this:      Figure 7.10 (PIClass Perfect)     The specification of the PIClass is now completed. However, we      still have to specify the Periphrastic Inflection Rule for the      perfect tense.      7.4. Periphrastic Inflection Rules, Some Remarks           In the subsection Periphrastic Inflection   we have specified a      reference to a Periphrastic inflection rule we have named      "Auxiliary-Perfect ". This PIRule still remains to be specified.      PIRules define several characteristics of a periphrastic      inflection type. We will describe them briefly before we are      going to specify the PIRule for German perfect tense: PIRules      define         •  which wordforms exactly are combined into a             periphrastic inflection form: e.g. the indicative present             ( "have ", "has ") plus the past participle for the English             perfect tense, the indicative past ( "had ") plus the past             participle for the English past perfect.         •  the position where the new combined form must be             placed in a phrase: In e.g. German "ich BIN nach Hause             GEGANGEN " the position of the cluster must be the             position of the auxiliary: "ich BIN GEGANGEN nach Hause             " (facilitates the phrase recognition, especially with             transformations)         •  the citation form of the lexeme the cluster belongs to.             E.g. the superlative "most interesting " must be             attributed to the adjective "interesting ", not to "most ".         •  attribution of specific features: e.g. (Degree Compar)             and (Degree Super) to comparative forms like "more             interesting " and "most interesting ".         •  percolation of features from one of the elements of the             cluster: e.g. number and person features from the             auxiliary in English perfect tense:             has (Pers 3)(Num Sing)		has been (Pers 3)(Num SG)                      7.5. Specification of the PIRule           Now, let’s go back to our database German-PM-W1   (you should      have worked through the previous sections starting from “7.      Periphrastic Inflection: The guided Tour”).         •  Open the window Periphrastic-Inflections by clicking             the periphr   button in the document window.         •  In the window, type the rule identifier we have chosen             in the subsection Periphrastic Inflection   :             Auxiliary-Perfect     The actual PIRule is specified under this title. A PIRule consists      of two parts separated by an equals sign.      On the left-hand side, you specify which wordforms of the      lexemes specified in the PIClass form the cluster. The      specification is done by means of wordform features and      keywords.      For the German perfect tense, the wordforms of the indicative      present (Mod Ind)(Temp Pres) of "haben " or "sein " are combined      with a past participle. So, type:         •  Newline         •  (Cat V)(Mod Ind)(Temp Pres) + pp            The wordforms of the present are qualified by these             features; we have already defined the keyword "pp " for             all past participles (cf. Keyword Specification   )         •  one or more White Spaces (or Tabs), than the equals sign             "= ".      On the right-hand side of the equals sign, you specify some      characteristics of the combined periphrastic inflection cluster.      Let’s first do the typing:         •  one or more White Spaces (or Tabs)         •  (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Perf)                      Figure 7.11 PIRule Auxiliary-Perfect     Have your PERIPHR-INFL window with the PIRule specification on      your screen while reading the following.      This is what the right-hand side of the rule specifies      7.5.1. Position      (POS 1) defines that the position of the cluster in a phrase is the      same as the position of the first element (1) on the left-hand      side, i.e. the position of the perfect tense in an analysed phrase      is the same as the position of the auxiliary.      For example, the sentences      	er HAT den Hund GESCHLAGEN	sie IST nach Hause GEGANGEN          will be analysed as      	er HAT GESCHLAGEN den Hund	sie IST GEGANGEN nach Hause           This facilitates the specification of transformations and      modifications. In German clauses, the position of the inflected      verbform does not depend on whether it is a main verb or an      auxiliary. Compare the following sentences (in the present tense)      with the example phrases above:      	er SCHLÄGT den Hund	sie GEHT nach Hause           Sentences with periphrastic tense forms can thus be treated as      sentences with simple tense forms.      7.5.2. Citation Form      (CFORM 2) defines that the cluster belongs to the same citation      form and consequently to the same lexeme as the second element      on the left-hand side, i.e. perfect tense clusters belong to the      same lexeme as the past participle:      	ist gegangen 	= wordform of "gehen", not of "sein"	hat geschlagen = wordform of "schlagen", not of "haben".           7.5.3. Wordform Features           The wordform features of the periphrastic inflection forms are      the combination of two types of features.      (PERC 1) defines that the cluster inherits all wordform features      of the first element that are NOT used in the restriction on the      left-hand side.      e.g.      "ist" (Cat V)(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)     The first three features (Cat V)(Mod Ind)(Temp Pres) are used in      the restriction on the left-hand side (cf. the PERIPHR-INFL      Window). Therefore, only (Pers 1) and (Num SG) are inherited.      The other relevant wordform features are specified in the      PIRule, after the Percolation definition: (Cat V)(Mod Ind)(Temp      Perf).      For the verbform "ist gegangen " this results in the wordform      features:      	(Cat V)(Mod Ind)(Temp Perf)(Pers 3rd)(Num SG)     7.6. Compilation           The specification of the first Periphrastic Inflection class is      now completed. If you have followed all the steps from the      beginning of this chapter ( Periphrastic Inflection: The Guided      Tour   ), you can now compile your version of the database      German-W1.         •  Choose 'Run Compiler' in the Phrase Manager Menu           •  Click OK in the dialogue box      If you have carried out all specification steps correctly, the      following message will be displayed in the message window:       > PM Compilation ok. It took ... seconds.     ----------------------------------------------------------      If you have made any mistakes, the system will warn you with an      acoustic signal and an error message. If this is the case, correct      the error and try to compile the PM-specification again.      If you do not succeed in detecting and correcting the error, we      suggest that you close the database German-PM-W1 WITHOUT      saving it. Then, go back   and try it once again. If that does not      work either, you can open the database German-PM-W2   to      compare it to your specification or simply to go further with      this tutorial. It is an already compiled copy of the specification      we described for German-PM-W1.      ----------------------------------------------------------      When the database is successfully compiled, you can test the      PIClass specification:         •  Open the 'Message' or the PM-Test window by clicking             the corresponding button in the document window of the             database.         •  Type the examples given below into the window         •  Select them one by one (e.g. with a triple-click)         •  Choose 'Recognize' in the PhraseManager Menu   (or type             CTRL+K)         •  Compare the results of the retrieve with the comments             to the examples below.      ***      1) ich bin gegangen	'I have gone'      Must be recognized as wordform of "gehen ":      Figure 7.12 Retrieval dialog “ich bin gegangen     Note the indication of the periphrastic inflection in the last text      field.      ***      2)  er hat geschlagen	'he has beaten'      Must be recognized as wordform of "schlagen " with the features      (Cat V)(Mod Ind)(Temp Perf)(Pers 3rd)(Num SG)      ***      3) *du hast gegangen		*du bist geschlagen     May not be recognized as wordforms of "gehen " and "schlagen ",      respectively. "gehen " is specified with the entry feature (Aux      sein), "schlagen " with the entry feature (Aux haben). Therefore,      the two sentences do not meet the morphological restrictions      specified with the example phrases in the (PIClass Perfect). Cf.      Morphological Restrictions "   .      ***      4)  ich bin heute gekommen		lit. 'I have come today'      "bin gekommen " must be recognized as 1st person singular      perfect tense of "kommen ". The first verbform may be      associated with external words (here: "heute ") on its right-hand      side. Cf. Modifications        ***      5)  wir haben diesen menschen gekannt			'we have known this person'      "haben gekannt " must be recognized as perfect tense of "kennen "      (modifications; cf. 4). Note that "haben gekannt " can be the 1st      and the 3rd person plural. This, because in these two persons of      the present indicative "haben " is ambiguous. This ambiguity is      correctly percolated on the periphrastic cluster (for feature      percolation cf. Wordform Features   )      ***      6) 	dass ich gegangen bin 		'that I have gone'	dass wir geschlagen haben	'that we have beaten'     Must be recognized as wordforms of "gehen " and "schlagen ",      respectively. In subordinate clauses like these, the word order in      the perfect cluster is inverted. Therefore, inversion must be      allowed; cf. Transformations        ***      7) As a last test, we can take the example of the first PHClass (      "in das gras beissen "):      	er hat ins gras gebissen	dass er ins gras gebissen hat          '(that) he has bitten into the grass' = 'he has kicked the bucket'      In both sentences (main and subordinate clause), "hat gebissen "      must be recognized as the 3rd person singular perfect tense of      "beissen ". Note the position of the cluster in the analysed      sentence.      ******      Finally:         •  If you haven’t opened it yet, open German-PM-W2   .         •  Open the window Periphrastic Inflection           •  Have a look at the rules under the title             "Auxiliary-Perfect ".      The first line is the rule for the German perfect tense as we      have specified it in this chapter.      The second line is the rule for German pluperfect      		sie war gegangen	'she had gone'	er hatte geschlagen	'he had beaten'     The pluperfect is formed exactly as the perfect tense except for      the tense of the auxiliaries "haben " and "sein ". Instead of in the      present tense, they are used in the past (imperfect).      This is indicated by the feature (Temp Impf) on the left-hand      side of the equals sign.      On the right-hand side, the only thing that changes is the added      tense feature: (Temp Plusq) (= plusquamperfect)      Both rules are specified under the rule identifier      "Auxiliary-Perfect ". This is the identifier reference is made to      in the (PIClass Perfect). In this manner, both the perfect and the      pluperfect are defined by the same PIClass.         •  Analyse the following sentences (type them into the             message window, select them and press CTRL+K):             sie war gegangen		hattest du geschlagen                      8. Periphrastic Inflection: A Second PIClass           In the previous chapter, we have specified a PIClass for the      German perfect tense. You will now try to specify a PIClass for      the German future.      The future is formed with the present tense of the auxiliary      "werden " and the infinitive:      	ich werde gehen		'I shall/will go'	du wirst kennen		'you will know'	er wird rennen		'he will run'	wir werden haben	'we shall/will have'	ihr werdet kommen	'you will come'	sie werden sein		'they will be'          As a little support, some additional linguistic information for      the ones who do not know German and a summary description of      the steps you have to take will be given. In case you do not      remember everything presented in the previous sections,      references are made to a help-document and/or to the      corresponding passages of the specification of the first PHClass.      Follow the suggestions step by step and do not hesitate to use      the specification of the (PIClass Perfect) as a reminder.      Open German-PM-W3           •  Open the lexical browser of "werden " and have look at             the wordforms of the indicative present in order to get             acquainted with the features you will have to use.         •  Then, open the class window   , extend the PIClass Tree             and open the window (PIClass Perfect). Have a good look             at the specification of this PIClass and keep it open on             your screen. It will help you to specify the PIClass for             the future tense.         •  Finally, start the specification following the steps             indicated below.      1) Add a new PIClass node for the future tense. Give it an      appropriate name. Cf. section Class Tree "   ( Help   ).      2) Open the new PIClass window and start with the specification      of the syntax tree. Do not hesitate to open the window (PIClass      Perfect) as an additional support for your specification. Cf.      section Syntax Tree   . ( Help   )      3) Specify the Modifications. In the German future tense,      external words may stand between the two verbforms:      	sie WIRD morgen GEHEN				'she will go tomorrow'	du WIRST den Hund nie mehr SCHLAGEN  		'you will never beat the dog again'          Cf. section Modifications   . ( Help   )      4) Specify the Transformations. The two verb-forms of the      German future are inverted in subordinate clauses:      main clause			subordinatedu WIRST GEHEN			weil du GEHEN WIRST'you will go'			'because you will go' sie WERDEN Probleme HABEN	daß sie Probleme HABEN WERDEN'they will have problems'	'that they will have problems'          cf. section Transformations   . ( Help   )      5) Specify a reference to a Periphrastic Inflection Rule. We      suggest that, for the time being, you just specify a rule      identifier. The specification or the Periphrastic Inflection Rule      will be done later. Cf. section Periphrastic Inflection   . ( Help   )      6) Specify an example phrase with the corresponding      morphological restrictions.      Remember that the future is formed with an inflected wordform      of "werden " and an infinitive. For the infinitve you will have to      specify a keyword.      In order to view the features of the relevant wordforms, open      the lexical browser of "werden " and of another verb (for the      infinitive)      Finally, do not forget to specify the individual modifications.      There are none for the future tense.      Cf. sections Example Phrase   , Keyword Specification   ,      Morphological Restrictions   . ( Help   )      7) Specify a Periphrastic Inflection Rule for the future tense in      the corresponding window. It might be helpful to open the      window Periphrastic Inflections   and to have a look at the      PIRules under "Auxiliary-Perfect " in order to see what elements      must be specified.      For a wordform of the future we suggest the following feature      set:       "wirst gehen"	(Cat V)(Mod Ind)(Temp Fut)(Pers 2nd)(Num SG)          where the person and number features are inherited from the      auxiliary:      "wirst"	(Cat V)(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)          Cf. sections Periphrastic Inflection Rules   and Specification of a      PIRule   . ( Help   )      8) Compile the database and check the correctness of your      specification. Cf. section Compilation   . ( Help   )      The specification of the PIClass for the German future is      completed!!!      The specification of periphrastic inflection classes and rules      can be more complex than the two examples discussed in this      Tutorial. We suggest that you read the corresponding chapters in      the Phrase Manager Book   . Furthermore, the database German (if      available) contains a complete specification of the periphrastic      verb inflection of German.      9. Reading      The following sections will present the so-called Clitic Rules.      The phenomenon of clitics is generally explained as the leaning      of one or more unstressed words (bound words) against a      stressed one. The line between bound and free words, however, is      sometimes difficult to trace. In Phrase Manager, we handle as      clitics “only” the cases where different syntactic forms are      bound into a single text word. The purpose of the clitic analysis      is to separate the different components of a fused text word:      		cannot		->	can not	he’ll go	->	he will go	j’accuse	->	je accuse	(French: 'I accuse')	am Abend	->	an dem Abend	(German: 'in the evening')	dimmelo		->	dì me lo	(Italian: 'say me it' = 'say it to me')      Before you go on with the Tutorial, we suggest that you read, in      the Phrase Manager Book   , pp. 62-70 in order to get a first      impression of how clitics are treated in Phrase Manager.      10. Clitic Rules           This chapter will present the specification of a clitic rule for      the recognition of contractions of the modal "will " and personal      pronouns in English:      		I'll	=	I shall/will	you'll	=	you will	he'll =		he will	etc.          We are going to present the clitic rule in a database called      English-PM-W1. It is a working copy containing the specification      of a part of English inflectional morphology. The specification      will be explained step by step. You will be invited to execute the      steps after having read their description.      10.1. The Data           For the sake of clarity, we will not go into details concerning      the distribution of the modals "shall " and "will ", that, in fact,      is more complex than the data we will present here.      We will specify Clitic Rules that analyse the following      contracted forms:      		I'll	=	I shall / I will	you'll	=	you will	he'll	=	he will	she'll	= 	she will	it'll	=	it will	we'll	=	we shall / we will	they'll	= 	they will          Let’s first of all have a look at the elements these contracted      forms consists of.         •  Open English-PM-W1           •  Open the messages window           •  Select the personal pronouns one by one and open their             lexical browser (press CTRL+L).      The wordforms "i " (no capitals are used in this database), "you ",      "he ", "she ", etc. are all specified by the features (Cat      Pron)(PForm P_Subj). Some of them ( "you ", "it ") have      homographs with the feature (PForm P_Obj). Since contraction      with "will " occurs only with subject forms of the personal      pronouns, we can say that:      all forms that can be combined with "’ll " are qualified by the      features (Cat Pron)(PForm P_Subj).         •  In the messages window, select the wordform "will "and             open its lexeme browser (press CTRL+L). Do the same             with "shall ".      The lexemes "will " and "shall " are qualified by the features (Cat      V)(Function Modal). The wordforms "will " and "shall " have the      wordform feature (Cat V)(VForm Present).      10.2. CElement and CRule Specification      Clitic Rules define, on the one hand, what kind of elements can      be found together and, on the other hand, how they have to be      divided into separate wordforms.      In the rules, you specify the elements that can be found in clitic      expressions.      When the elements are subject to graphic modifications, they      must be specified as so-called CElements (Clitic Elements) with      all their string variants.      In our case, the modals "will " and "shall " will have to be      specified as a CElements, since they have the string variant "'ll "      in the contracted “clitic-form”.      10.2.1. Clitic Tree      You specify the (CElements) and the (CRules) in the window      'Clitic'. There, you can define them hierarchically in a tree      structure similar to the tree structure in WM and in the class      window.         •  To open the window, click the clitic button   in the             document window.      We first have to specify the CElements. For our example, "will "      and "shall " must be specified as CElements. We suggest the      following structure.         •  Go into the window 'clitic'         •  select the root node         •  add a new son node using the 'New Son' command in the             Edit menu; name it             (CElement Verb)        •  select the new node (CElement Verb)         •  add a new son node using the 'New Son' command in the             Edit menu, name it             (CElement will)          Figure 10.1 Clitic Tree with CElement node     As usual, other tree structures and other node names are      possible. However, CElement nodes must obligatorily contain the      attribute 'CElement'. The CElements as well as the CRules are      specified in the leave nodes.      The clitic tree editor does not differ from other tree editors you      have already worked with. Therefore, you should already be      familiar with its handling.      The CElement node for "shall " will be specified later.      10.2.2. CElement Specification              •  Open the window (CElement will) by double-clicking the             node in the Clitic window.      A CElement must be specified by a form that can be retrieved      from the WM dictionary, followed by a list of possible string      variants. The string variants are simply handled as strings and      do not necessarily have to be found in the WM dictionary.         •  Go into the window (CElement will) and type:             		(CElement Full-Form) 	"will"	(Cat V)(Function Modal)	(CElement Clit-Form)	"'ll"                        The elements on one line are separated by one or more             White Spaces or Tabs.           Figure 10.2 (CElement will)     (CElement Full-Form) and (CElement Clit-Forms) are the features      specifying the two variants of the (CElement will).      The first variant must be a wordform that can be found in the WM      dictionary. It consists of a surface string ( "will ") and the entry      features qualifying the lexeme the wordform belongs to (Cat      V)(Function Modal).      The second form is the string variant the wordform assumes in a      contracted form ( "'ll ").      10.2.3. CRule Specification      We first have to create a leave node for the rule specification.      Rule nodes must have the attribute "CRule ".         •  Go into the window 'Clitic' and select the node             (CElement Verb)         •  add a new brother node and name it             (CRule Pron+will/shall)          Figure 10.3 Clitic Tree with CRule node     For the time being, this structuring is highly arbitrary. It will be      more motivated when more clitic rules are specified.      A CRule defines on its left-hand side, which elements must be      found in the contracted form. On its right-hand side, it specifies      by which individual wordforms the contracted form has to be      replaced when analysed.         •  Open the window (CRule Pron+will/shall) by             double-clicking its node in the Clitic window.         •  Type:             (Cat Pron)(PForm P_Subj) + (CElement Verb.will.Clit-Form)                 This is the left-hand side of the CRule. It defines that the “clitic      form” to be recognized is the combination of a wordform with      the features (Cat Pron)(PForm P_Subj) plus a CElement qualified      by the feature set (CElement Verb.will.Clit-Form).      As we have seen in the data , all the wordforms that can be      combined with "'ll " ( "i ", "you ", "he ", "she ", etc.) are qualified      by the features (Cat Pron)(PForm P_Subj). Cf. The Data        As we have defined earlier, the CElement with the feature set      (CElement Verb.will.Clit-Form) is "'ll ". Cf. CElement      Specification   .      The forms meeting the left-hand restriction of the CRule are,      thus, the following:      "i'll ", "you'll ", "he'll ", "she'll ", "it'll ", "we'll ", "they'll "      which are exactly the forms we want to have analysed.      In the Rule window, on the same line, type:         •  one or more White Spaces (or Tabs)         •  = (equals sign)         •  one or more White Spaces (or Tabs)         •  (Cat Pron)(PForm P_Subj), (CElement Verb.will.Full-Form)                    •  Newline           Figure 10.4 (CRule Pron+will/shall)     The right-hand side of the rule says that the left-hand side has      to be re-written as the same wordform (Cat Pron)(PForm      P_Subj) and a CElement with the feature set (CELement      Verb.will.Full-Form).      The CElement matching this restriction is "will " (Cat      V)(Function Modal). Cf. CElement Specification        When a form like, e.g. "he'll " is analysed, the form meets the      restrictions on the left-hand side of this CRule:      	"he" (Cat Pron)(PForm P_Subj)	"'ll" (CElement Verb.will.Clit-Form)          Consequently, the form will be rewritten as the same pronoun      "he " and the (CElement Verb.will.Full-Form) "will ":      	"he will"     10.3. Compilation      Now, you can compile the first CRule specification.         •  Choose 'Run Compiler' in the Phrase Manager Menu           •  Click OK in the dialogue box      If you have carried out all specification steps correctly, the      following message will be displayed in the message window:       > PM Compilation ok. It took ... seconds.     ----------------------------------------------------------      If you have made any mistakes, the system will warn you with an      acoustic signal and an error message. If this is the case, correct      the error and try to compile the PM-specification again.      If you do not succeed in detecting and correcting the error, we      suggest that you close the database English-PM-W1 WITHOUT      saving it. Then, go back   and try it once again.      ----------------------------------------------------------      When the database is successfully compiled, you can test the      CRule specification:         •  Open the 'Message' or the PM-Test window.         •  Type the examples given below into the window         •  Select them one by one (e.g. by a triple-click)         •  Choose 'Recognize' in the PhraseManager Menu   (or type             CTRL+K)      Examples:      		i'll	you'll	he'll	she'll	it'll	we'll	they'll	* me'll          For all but the last example, a retrieval dialog must be opened      that looks similar to this:      Figure 10.5 Retrieval Dialogue of “she'll”     If the forms are not recognized ( "Word not defined "), you have      made a mistake. You will have to go back to the begin of this      chapter and check your specification thoroughly. Pay attention to      typing errors! ( Go back   ).      However, it is correct when the last example "me'll " is not      recognized and the messages window displays this message:      	Word not defined     The pronoun "me " does not match the restriction which states      that the pronoun must have the feature (PForm P_Subj). Cf.      lexeme browser of "me ".      10.4. Some Adjustments With “shall”           (Before starting with this section, you must have done the      previous sections on Clitics. Otherwise you will not be able to      execute the commands. If necessary, go back   ).      So far, the CElements and the CRules cover only contractions      with "will ". As we have shown in the presentation of the data,      "i'll " and "we'll " can also be the contraction of "i shall " and "we      shall " (cf. The Data   ).      To cover these contractions, too, we have to specify another      CElement and another CRule. Let’s first define the CElement:      10.4.1. CElement              •  Go into the Clitic window   of English-PM-W1         •  Select the node (CElement will) and add a new brother             using the 'New Brother' command in the Edit menu; name             it             	(CElement shall)          Figure 10.6 Clitic Tree with node (CElement shall)        •  Double-Click the node (CElement shall) to open the its             window         •  Double-Click the node (CElement will) to open the its             window         •  Have a look at the specification of the CElements in the             window (CElement will) and try to do the specification             for the CElements in the window (CElements shall). Try             it by yourself!             Then, check it with the figure below.           Figure 10.7 (CElement shall)        •  Check your specification (typing mistakes?!), correct it             if necessary. If you have not yet typed anything, type             the above specification into the window (CElement             shall).      The first element (CElement Full-Form) is the string of the      wordform as it can be found in the WM dictionary and the feature      set qualifying the lexeme the wordform belongs to.      The second element (CElement Clit-Form) is the string variant      the wordform assumes in contracted forms.      10.4.2. CRule      Now, we can write a CRule for the contracted forms with "shall      ". It would be possible to create a new CRule node, but we prefer      to specify the rule in the same CRule node as the rule for      contracted forms with "will ".         •  Go into the Clitic window   and open the Window (CRule             Pron+will/shall).      Remember that the left-hand side of a CRule defines the      elements the “clitic form” must be combined of. The elements      are "i " or "we " and "'ll ".      The wordforms "i " and "we " can be specified in two different      manners:         •  By means of restrictions on the wordform features: The             feature set matching both "i " and "we " (but no other             wordform) is             	(Cat Pron)(Pers 1st)(PForm P_Subj)            Open their lexical browser to check this (Type them into             the messages window, select them and press CTRL+L).         •  By means of feature and string restrictions: "i and "we "             belong to the group of wordforms qualified by the             features (Cat Pron)(PForm P_Subj). Instead of the             feature (Person 1st), you can also specify the string of             their citation form (between braces):             (Cat Pron)(PForm P_Subj) {"i", "we"}            The restriction on strings is particularly convenient             when two or more wordforms do not have a common             feature set that is not shared by other wordforms (e.g.             "i " and "you ").      The second element of the “clitic form” ( "'ll ") is a CElement      qualified by the feature set      	(CElement Verb.shall.Clit-Form)     Cf. window (CElement shall).      The left-hand side of the new CRule can be specified as follows:         •  Go into the window (CRule Pron+will/shall)         •  On a new line, type: 	(Cat Pron)(PForm P_Subj) {"i", "we"} + (CElement Verb.shall.Clit-Form)                 On the right-hand side of the CRule, you define by which      wordforms the contracted form has to be replaced when      analysed:         •  On the same line, type White Space, equals sign "= ",             White Space         •  Then, type: 	(Cat Pron)(PForm P_Subj), (CElement Verb.shall.Full-Form)                        i.e. the “clitic-form” is to be replaced by the same             pronoun and "shall " (cf. window (CElement shall)).           Figure 10.8 (CRule Pron+will/shall)          10.4.3. Compilation      Now, you can compile the new CRule specification.         •  Choose 'Run Compiler' in the Phrase Manager Menu           •  Click OK in the dialogue box      If you have carried out all specification steps correctly, the      following message will be displayed in the message window:       > PM Compilation ok. It took ... seconds.     ----------------------------------------------------------      If you have made any mistakes, the system will warn you with an      acoustic signal and an error message. If this is the case, correct      the error and try to compile the PM-specification again.      If you do not succeed in detecting and correcting the error, go      back to the beginning of this section and compare your      specification with the description given there. Typing mistakes?!      ( Go back   )      ----------------------------------------------------------      When the database is successfully compiled, you can test the      CRule specification:         •  Open the 'Message' or the PM-Test window by clicking             the corresponding button in the document window of the             database.         •  Type the examples given below into the window         •  Select them one by one (e.g. by a triple-click)         •  Choose 'Recognize' in the PhraseManager Menu   (or type             CTRL+K)      Examples:       	i'll	we'll	you'll	he'll	they'll          For the first examples, a retrieval dialog similar to this should      be opened:      Figure 10.9 Retrieval Dialog “we'll”     The retrieval dialog indicates two solutions      1) "we shall "; this form has been analysed by the second CRule      2) "we will "; this form has been analysed by the first CRule      For the other forms, the system correctly analyses one form      only, viz. the form with "will ". "you'll ", "he'll " and "they'll " do      not match the restrictions of the second CRule.      11. A Final Remark      The specification of idiomatic expressions, periphrastic      inflections and clitic clusters can be quite complex — more      complex than the few examples presented in this tutorial. For      this reason, the presentation of the PM-formalism makes no      claim to be exhaustive. The formalism offers a wider range of      possibilities than the limited space allowed us to present here.      To become more acquainted with PM and all its possibilities, you      will have to consult the Phrase Manager Book   and to have a look      at other specifications like the database German-StB (if      available). But most of all, we suggest that you try it out by      yourself. After all, “in doing we learn”.  