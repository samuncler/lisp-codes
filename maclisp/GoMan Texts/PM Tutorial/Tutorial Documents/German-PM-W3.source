#[WM-DOCUMENT ( :TOP-LEVEL-WINDOWS (#[LEXICAL-CHARACTER-SET-WINDOW ( :WINDOW-CONTENTS "character-sort-orderA a ä Å À åbc Cd DE e É é èfgh HI i ; íjklmn NO o ö Ö Øpqrs St TU u üvwxyzß!#_-°sequence-sort-orderae äoe öue üss ß" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[SURFACE-CHARACTER-SET-WINDOW ( :WINDOW-CONTENTS "character-sort-orderA a äbcdefghijklmnO o öpqrstU u üvwxyzß-’sequence-sort-orderae äoe öue üss ß" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[FEATURE-DOMAINS-WINDOW ( :WINDOW-CONTENTS "Cat	(N         A         V         Art         Pron         Adv         Prep         Conjunct         Interj)Manner	(Def          Demonstr          Indef          Interrog          Local          Modal          Personal          Poss          Refl          Relative          Rezipr          Temporal)Degree	(Pos         Comp         Super)Decl	(Undeclined         Invar         Strong         Mixed         Weak)Mod	(Inf         Ind         Conj-1         Conj-2         Imper         Part)Temp	(Pres         Impf         Perf)Pers	(1st         2nd         3rd)Num	(SG         PL)Gender	(M         F         N)Case	(Nom         Gen         Dat         Acc)Aux	(sein         haben)Var	(Standard         Foreign         Scient         Pop)Lexeme	(a         b         c         d)ICat	(A-Stem         A-Suffix         Adv         Anaphoric         Ana/Cataphoric         Art-Stem         Art-Suffix         Art+Pron-Stem         Cataphoric         Conjunct         Decl-jedermann         Decl-jemand         Decl-Strong         Def-Article         Degr-Mark         der/die/das         Detachable-Prefix         Demonstr-Pron         Foreign         Interj         N-Stem         N-Suffix         Pers-Pron         Prep         Pron-Stem         Pron-Suffix         Reg         Refl-Pron         Rel-Pron         V-Irregular         V-Prefix         V-Regular         V-Stem         V-Suffix         E         EN         ER         ES         S         -         en         er         es)RIRule	(N-Regular         ES/E         S/E         [E]S/[E]N         S/-         [E]S/ER         S/S         [E]N/[E]N         -/E         -/-         -/[E]N         -/S         Nominalized_A         Gender-M         Gender-F         Gender-N         Foreign         S/EN_Replace_Foreign_Suffix         -/EN_Replace_Foreign_Suffix         SG_S/PL_Foreign_Suffix         SG_-/PL_Foreign_Suffix         A-Regular         A-Regular-Undeclined-e-Optional         A-Two_Comp_Forms         A-Invariable         A-Predicative-Only         A-Attributive-Only         A-Foreign-Stem-er         No-Detachable-Prefix         Detachable-Prefix         Adv         Prep         Conjunct         Interj)IIRule	(N-Irregular         ENS/EN         A-Irreg         No-Detachable-Prefix         Detachable-Prefix         sein         Pron-Invar         saemtlich         mehrere         kein         jemand/niemand         jedermann         jeder         einige/etliche         einer         all/manch         Indefinite-Pronoun         welcher         wer/was         Rel/Interrog-Pronoun         derselbe/derjenige         dieser/jener         der/die/das         Demonstr-Pronoun         Possessive-Pronoun         Reflexive-Pronoun         Personal-Pronoun         Indefinite-Article         Definite-Article)WFCat	(Derivation         To-N         To-A         To-V         To-Adv         N-To-N         A-To-N         V-To-N         N-To-A         A-To-A         V-To-A         Adv-To-A         N-To-V         A-To-V         V-To-V         N-To-Adv         A-To-Adv         V-To-Adv         Conversion         Prefixing         Suffixing         Prefixing+Conversion         Prefixing+Suffixing         Compounding         N-Comp         A-Comp         V-Comp         Adv-Comp         N+N         A+N         V+N         Adv+N         N+A         A+A         V+A         N+V         A+V         Adv+V         N-Prefix         A-Prefix         V-Prefix         N-Suffix         A-Suffix         V-Suffix         Adv-Suffix         Umlaut         No-Umlaut         ge-Participle         Hyphen         Detachable         Non-Detachable         Pseudo-Part         Linking-Element         Pre-+Suffixing         With-Linking-Element         With-Impf-Stem         With-PL-Form         Foreign         German)RWFRule	(A_Comparative         A_Positive         A_Positive+N         A_Superlative+N         A+A_No-Hyphen         A+Adv         A+Hyphen+A         Ablaut-Stem         Adv+Adv         Adv+ig         Adv+Noun         Adv+Prep         Detachable-Prefix         Foreign-Suffix         ge+_         ge+_+e         Impf-Stem         Infinitive         Linking-Element         N+Adv         N+A_No_Linking_Element         N+e+A         N+es+A         N+[e]n+A         N+ens+A         N+er+A         N+s+A         N+N_No_Linking_Element         N+e+N         N+[e]n+N         N+ens+N         N+er+N         N+es+N         N+s+N         No-Umlaut         Non-Detachable-Prefix         Part-Perf         Part-Pres         PL-Form+Suffix         Prefix         Prep+Adv         Pres-Stem         Pseudo-Participles         Suffixing         Target_Gender_F         Target_Gender_M         Target_Gender_N         Target_Detachable         Umlaut         V_Detachable_Pref         V_Detachable_Prefix         V_No_Detachable_Pref         V_No_Detachable_Prefix         V_Irregular         V_Regular         V+e+A         V+A_No_Linking_Element         V+e+N         V+N_No_Linking-Element         Target_S/-         Target_ES/E         N+s+Suffix         N+Suffix         A+er+Suffix)WFSRule	(Delete-No-ge-participle-character         Compound-fff/ff         Compound-lll/ll         Compound-mmm/mm         Compound-nnn/nn         Compound-ppp/pp         Compound-rrr/rr         Compound-ttt/tt         en+lich/ent+lich)ISRule	(Stressed-e/surface-e         Delete_Special_Part_2_Character         Delete_ge_Part-2         Verbs_e-Deletion_Stem         Verbs_Return_Imper-Exeption         Verbs_e-Deletion_Imper         Verbs_Imper-Exception         Verbs_e-Deletion_Suffix         Verbs_s-Deletion         Verbs_Delete_Avoid_Insertion_Character         Verbs_e-Insertion         Replace-D/d         Replace-T/t         Replace-SCH/sch         Adj_Super_Insert-e_after_Vow+h         Adj_Super_Insert-e_after_Diphth         Adj_Super_Insert-e_after_[dt]         Adj_Super_Insert-e_after_Cons+sch         Adj_Super_Insert-e_after_Vow+sch         Adj_Super_Avoid_Insert-e_With_isch         Adj_Super_Insert-e_after_[sxz]         Adj_Comp_Delete-e_e[ln]-Stem         Adj_Delete-e_e-Stem         Adj_Delete-e_Vow+er-Stem         Adj_Delete-e_el-Stem         N_Double_Dat_SG_Form         N_Double_Gen_SG_Form         N-e-Deletion_Dat_SG_after_Vow+h         N-e-Deletion_Dat_SG_after_Diphth         N_e-Deletion_after_e[lrn]-Stem         N_e-Deletion_after_e-Stem         N_Change_U/u         N_Change_O/o         N_Change_A/a         N_PL_Umlaut_U/ue         N_PL_Umlaut_O/oe         N_PL_Umlaut_A/ae)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[FEATURE-DEPENDENCIES-WINDOW ( :WINDOW-CONTENTS "(Cat V)	demands	Aux(Cat N)	demands	Gender" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[SPELLING-RULES-WINDOW ( :WINDOW-CONTENTS ";===================================================================; Nouns;===================================================================(Cat N);-------------------------------------------------------------------; Umlaut;-------------------------------------------------------------------	(ISRule N_PL_Umlaut_A/ae)	\"(.*)A(.*)/\\1ä\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_PL_Umlaut_O/oe)	\"(.*)O(.*)/\\1ö\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_PL_Umlaut_U/ue)	\"(.*)U(.*)/\\1ü\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_Change_A/a)	\"(.*)A(.*)/\\1a\\2\" (ICat N-Stem)	(ISRule N_Change_O/o)	\"(.*)O(.*)/\\1o\\2\" (ICat N-Stem)	(ISRule N_Change_U/u)	\"(.*)U(.*)/\\1u\\2\" (ICat N-Stem);-------------------------------------------------------------------; e-Delition;-------------------------------------------------------------------	(ISRule N_e-Deletion_after_e-Stem)	\".*e\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix); Ende-n (PL) Ende-s (Gen) Ende (Dat), See-n (PL) See-s (Gen) See (Dat), Bote-n, Rose-n, Allee-n (auch substantivierte Adj.: Beamte-n ???)	(ISRule N_e-Deletion_after_e[lrn]-Stem)	\".*[^ie]e[lrn]\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix)^(Decl Strong)^(Decl Weak); Vogels, Vetter (Dat SG), Bauern, Amseln, Federn; Duden ; Problem: Teer, Kamel, Schein, Tier (vs Asien, Spaniel); verlangt Einführung lexical character é für betontes e.	(ISRule N-e-Deletion_Dat_SG_after_Diphth)	\".*[aäe][iu]\" (ICat N-Stem)	\"e/\" (ICat N-Suffix)(Case Dat)(Num SG); Bau, Mai, Ei, Duden 380.2, Pfeffer 79, 2.1.2.	(ISRule N-e-Deletion_Dat_SG_after_Vow+h)	\".*[aäeioöuü]h\" (ICat N-Stem)	\"e/\" (ICat N-Suffix)(Case Dat)(Num SG); Schuh, Reh, Floh, Duden 380.2, Pfeffer 79, 2.1.2.;-------------------------------------------------------------------; Double Gen SG & Dat SG Forms;-------------------------------------------------------------------	(ISRule N_Double_Gen_SG_Form)	\".*[^sxz]\" (ICat N-Stem)		\"es/s\" (ICat N-Suffix)(Case Gen)(Num SG) value; bildes u. bilds, staates u. staat, tages u. tags,; nicht bisses, kreuzes, reflexes, Duden 379.1	(ISRule N_Double_Dat_SG_Form)	(ICat N-Stem)				\"e/\" (ICat N-Suffix)(Case Dat)(Num SG) value; bilde u. bild, staate u. staat, tage u tag;===================================================; adjectives;===================================================(Cat A);-------------------------------------------------------------; Delete-e Stem;-------------------------------------------------------------	(ISRule Adj_Delete-e_el-Stem)	\"(.*)e(l)/\\1\\2\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark); nobel/nobler, noble, nobles, nobler usw. Duden 478.1, 513	(ISRule Adj_Delete-e_Vow+er-Stem)	\"(.*[ae]u)e(r)/\\1\\2\" (ICat A-Stem)	\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark);teuer/teure, teurer; sauer/saures, saurere usw., Duden, 478.2, 513 (in Muthmann keine Adj auf -aier, -äuer, -eier)	(ISRule Adj_Delete-e_e-Stem)	\"(.*)e/\\1\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark); weise/weis-er, flügg-e/flügg-er, large/larg-es; böse o. bös, trübe o. trüb siehe (RIRule A-Regular-Undeclined-e-Optional	(ISRule Adj_Comp_Delete-e_e[ln]-Stem)	\"(.*[^ie])e([rn])/\\1\\2\" (ICat A-Stem)	\"e.*\" (ICat Degr-Mark)(Degree Comp) value; finstereres u. finstreres, trockenere u. trocknere usw. Duden 513. (nicht leerere, schwérere);-------------------------------------------------------------; Insert-e Superlative;-------------------------------------------------------------	(ISRule Adj_Super_Insert-e_after_[sxz])	\".*[sxz]k?\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); süsseste, laxeste, spitzeste, schwärzeste, liebloseste, brüskeste usw. Duden 518. Blatt Adj-Superlativ; in Muthmann alle Adj. auf sxz resp. sk einsilbig o. auf letzer Silbe betont; Ausnahme synchron gesehen \"unechte\" Derivate unnütz u. naseweis (ebenfalls auf \"est\"); Ausnahme: gross/grösste	(ISRule Adj_Super_Avoid_Insert-e_With_isch)	\"(.*i)sch/\\1SCH\" (ICat A-Stem); heimiSCH/heimisch, veräterisch/verräteriSCH	(ISRule Adj_Super_Insert-e_after_Vow+sch)	\".*[aeiou]r?sch|.*friSCH\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; rascheste u. raschste, forscheste u. forschste; Duden 518; Super auf -schst (komischste) mit SCH, da allermeiste Bildungen mit Suffix isch (Ausnahme frisch!!!), d.h. special lexical character kann automatisch eingeführt werden	(ISRule Adj_Super_Insert-e_after_Cons+sch)	\".*[^aeiour]sch\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); falscheste, deutscheste; im Gegensatz zu Duden 518 sind hier Formen ohne e nicht möglich (vgl Blatt Adj. Super. sch)	(ISRule Adj_Super_Insert-e_after_[dt])	\".*[dt]\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); bunteste, rundeste, tristeste, breiteste, werteste, kälteste, eleganteste ; exceptions: all stems not accentuated on last sillable (DUDEN 518), viz. Partizipien-I u. Partizipien-II auf et, von Verben mit Stamm auf -er, -el, und -ig (siehe Blatt Adj. Superl. -t); > automatische Einführung special characters D und T. Ausnahme: manuell bei töricht	(ISRule Adj_Super_Insert-e_after_Diphth)	\".*[ae][iu]\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; neueste u. neuste, schlaueste u. schlauste, freieste u. freiste; Duden 518; keine Bsp auf ai o. äu	(ISRule Adj_Super_Insert-e_after_Vow+h)	\".*[aäieouü]h\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; zäheste u. zähste, froheste u. frohste, früheste u. frühste, rauheste u. rauhste; Duden 518 ; keine Wörter auf ö	(ISRule Replace-SCH/sch)	\"(.*)SCH/\\1sch\" (ICat A-Stem); friSCH/frisch, heimiSch/heimiSCH	(ISRule Replace-T/t)	\"(.*)T/\\1t\" (ICat A-Stem); törichT/töricht, belebT/belebt	(ISRule Replace-D/d)	\"(.*)D/\\1d\" (ICat A-Stem); fesselnD/fesselnd;===================================================; Verben;===================================================(Cat V)	(ISRule Verbs_e-Insertion)	\".*[bdfgkpst][mn]|.*[dt]|.*ch[mn]\" (ICat V-Stem)		\"([st].*)/e\\1\" (ICat V-Suffix); redst/redest, rettt/rettet, atmest, rechnet usw, Duden 193	(ISRule Verbs_Delete_Avoid_Insertion_Character)	(ICat V-Stem)		\"!(s?t.*)/\\1\" (ICat V-Suffix); siehe ISRule Avoid-e-Insertion bei unreglmäßigen Verben 	(ISRule Verbs_s-Deletion)	\".*[sxz]\" (ICat V-Stem)			\"st/t\" (ICat V-Suffix); ras-t, feix-t, hetz-t usw. Duden 194	(ISRule Verbs_e-Deletion_Suffix)	\".*[^ei]e[lr]\" (ICat V-Stem)		\"e(nd|[nt]|st)/\\1\" (ICat V-Suffix); sammel-n, änder-n; Duden 195, 316; Problemfälle, mit é zu schreiben: (ver-,fort-)schwelen, (ab-,fort-)scheren, (über-,unter-)queren, (be-)erschweren; Problemfälle, mit eigener, individueller ISRule resp. WFSRule: feiern, leiern, verschleiern, meiern (nicht= kreieren, alineieren, enukleieren	(ISRule Verbs_Imper-Exception)	\".*ch[mn]|.*[bdfgkpst][mn]|.*[^ei]e[lr]\"	\"e/e!\" (ICat V-Suffix)(Mod Imper)(Num SG); rechne!, atme!, sammle!, ändere! Duden 290	(ISRule Verbs_e-Deletion_Imper)	(ICat V-Stem)			\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) value; bleibe u. bleib, spiele u. spiel etc. Duden 290	(ISRule Verbs_Return_Imper-Exeption)	(ICat V-Stem)			\"e!/e\" (ICat V-Suffix)(Mod Imper)(Num SG)	(ISRule Verbs_e-Deletion_Stem)	\"(.*[^ei])e(l)/\\1\\2\" (ICat V-Stem)	\"e\" (ICat V-Suffix); sammle, Duden 195 Fußnote, evtl mit value sammle und sammele resp. ändere und ändre.;;;    	(ISRule Verbs_e-Deletion_afer_Vow);;;    	\".*[aeiou]h?\" (ICat V-Stem)		\"en/n\" (ICat V-Suffix) value;;;    ; schreien u. schrein, fliehen und fliehn; Duden 195 (weglassen, da nicht Standard?)	(ISRule Delete_ge_Part-2)	\"ge/\" (ICat V-Prefix)		\"(.*)°(.*)/\\1\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)	(ISRule Delete_Special_Part_2_Character)	\"(.*)°(.*)/\\1\\2\" (ICat V-Stem)(ISRule Stressed-e/surface-e)\"(.*)é(.*)/\\1e\\2\" (ICat V-Stem)|(ICat A-Stem)|(ICat N-Stem); schér/scher; kamél/kamel, schwér/schwer; (WFCat To-A)(WFSRule en+lich/ent+lich)\"(.*[^ei]en)/\\1t\"	\"lich\" (WFCat A-Suffix); offen/öffentlich, versehen/versehentlich, wissen/wissentlich(WFSRule Delete-No-ge-participle-character)\"°(.*)/\\1\" (ICat V-Stem)	(WFCat N-Suffix)|(WFCat V-Suffix)|(WFCat A-Suffix)(WFSRule Compound-fff/ff)\"(.*[aeiouAOU#]f)f/\\1\"		\"f[aeiouAOU#].*\"; schiff+fahrt/schiffahrt(WFSRule Compound-lll/ll)\"(.*[aeiouAOU#]l)l/\\1\"		\"l[aeiouAOU#].*\"; roll+laden/rolladen(WFSRule Compound-mmm/mm)\"(.*[aeiouAOU#]m)m/\\1\"		\"m[aeiouAOU#].*\"; *stimm+messer/stimmesser ???(WFSRule Compound-nnn/nn)\"(.*[aeiouAOU#]n)n/\\1\"		\"n[aeiouAOU#].*\"; brenn+nessel/brennessel(WFSRule Compound-ppp/pp)\"(.*[aeiouAOU#]p)p/\\1\"		\"p[aeiouAOU#].*\"; krepp+papier/kreppapier(WFSRule Compound-rrr/rr)\"(.*[aeiouAOU#]r)r/\\1\"		\"r[aeiouAOU#].*\"; *geschirr+rand/geschirrand ???(WFSRule Compound-ttt/tt)\"(.*[aeiouAOU#]t)t/\\1\"		\"t[aeiouAOU#].*\"; ballett+tänzer/ballettänzer" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[FUNCTIONS-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[INFLECTION-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(#[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . V)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Regular|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . N)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"ge\" \"ge\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Irregular|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Imper)(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; Return e-Insertion by General ISRUle with Ind. Pres mit Umlaut Duden 209.1\".*#[AEx]..#.*t\" (ICat V-Stem)	\"et/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ;  t-Deletion: brät, gilt, hält\".*#[AEx]..#.*st\" (ICat V-Stem)	\"est/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; st-Deletion: du birst,\".*#[AEx]..#.*[dt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Num SG) ; brätst, lädst, lädt, giltst; e-Deletion-Umlaut-Imper Duden 290\".*#[ExÖ]..#.*\" (ICat V-Stem)		\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) ; nimm, brich, lisch; CONSONAT-Modifications:\"(.*b#iAe#t)t/\\1\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; bitten/bat/bäte/gebeten\"(.*f#Aya#l)l/\\1\" (ICat V-Stem)			(Temp Impf) ; fallen/fiel/fiele\"(.*g#eia#)h/\\1ng\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gehen/ging/gegangen\"(.*k#oAo#m)m/\\1\" (ICat V-Stem)			(Temp Impf) ; (be)komm/(be)kam\"(.*b#AUa#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; backen/buk\"(.*sch#aUa#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; (er)schaff/(er)schuf/(er)schüf\"(.*schr#EAo#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; (er)schrecken/(er)schrak/(er)schräke\"(.*s#yOo#)d/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sieden/sott/sötte/gesotten\"(.*s#iAe#)tz/\\1ss\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sitzen/sass/sässe/gesessen\"(.*st#eåa#)h/\\1nd\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; stehen/stand/stände/gestanden (verstehen etc.)\"(.*tr#EAo#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; treffen/traf\"(.*t#uAa#)/\\1t\" (ICat V-Stem)			(Temp Impf) ; tun/tat/täte (vertun)\"(.*z#yOo#)h/\\1g\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; ziehen/zog/gezogen\"(.*br#iAa#)ng/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; bringen/brachte/gebracht\"(.*d#eAa#)nk/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; denken/dachte/gedacht\"(.*tr#EAe#)t/\\1tt\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*n#EAo#)hm/\\1mm\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)|(Mod Part)(Temp Perf)\"(.*#ei#)[dt]/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gleiten/glitt/geglitten, leiden/litt/gelitten\"(.*#ei#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; greifen/griff/gegriffen, kneifen/kniff\"(.*s#AU#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; saufen/soff/gesoffen (besaufen etc.)\"(.*m#öOo#)g/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; (ver)mögen/mochte/möchte/gemocht; modal verbs (& bringen, denken): delete suffix 1st & 3rd pers. SG Ind Pres: darfe/darf, kanne/kann\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\".*/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG); modal verbs: change irregular imp. suffixes to regular suffixes; durf/durfte, konnst/konntest etc.\".*m#üUu#ss|.*w#iUu#ss\" (ICat V-Stem)		\"t/st\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) ; s deleted by general ISRule\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"([^e].*)/te\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"(e.*)/t\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"/te\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG); modal verbs (& bringen, denken): replace irregular part-perf suffixe by regular suffixe; gedurfen/gedurft etc.\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"en/t\" (Temp Perf); mögen/mochte\"möchte; VOWEL-Modifications; Umlaut Ind-Pres (+Imper SG):\"(.*)#A..#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#A[uU]#(.*)/\\1äu\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#[EÖ]..#(.*)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*)#x..#(.*)/\\1ie\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*st)#oyo#(ss)/\\1ö\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ; stosse stösst;modal verbs ablaut Ind Pres\"(.*d)#üUu#(rf)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; dürfen/darf\"(.*)#öOo#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; mögen/mag, können/kann\"(.*m)#üUu#(ss)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; müssen/muss\"(.*w)#ooo#(ll)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wollen/will\"(.*w)#iUu#(ss)/\\1ei\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wissen/weiss; Ind Impf + Conj-2 + Part-2\"(.*)#ei#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf)\"(.*)#Ei#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf);Impf + Conj-2\"(.*)#.i.#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)\"(.*)#.y.#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; lassen/liess\"(.*)#Au#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; laufen/lief; Impf only\"(.*)#.[AÅå].#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)|(Temp Perf) ; saufen/soff, schnauben/schnob\"(.*)#.[OØ].#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#.U.#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf); Conj-2\"(.*sch)#EAo#(lt)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; schelten/schölte\"(.*schw)#öØo#(r)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value ; schwören/schwüre (neben schwöre DUDEN p.140)\"(.*)#.A.#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; saufen/söffe, schnauben/schnöbe\"(.*)#.[OØ].#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.U.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.å.#(r[bf])/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; stürbe, verdürbe, würbe, würfe; ≠ stände-stünde, hälfe-hülfe\"(.*)#.[Åå].#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value\"(.*)#.Å.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; begänne u. begönne\"(.*)#.å.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; hälfe u. hülfe, stände u. stünde; Part-2 only\"(.*)#..a#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..o#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..u#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..e#(.*)/\\1e\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf); ALL OTHER TEMP AND MOD\"(.*)#[aA]..#(.*)/\\1a\\2\" (ICat V-Stem) ; fragen, blase\"(.*)#[aA][uU]#(.*)/\\1au\\2\" (ICat V-Stem) ; laufen, saufen, schnauben (gelaufen also (Mod Part)(Temp Perf)!!)\"(.*)#[eEx]..#(.*)/\\1e\\2\" (ICat V-Stem) ; bewegen, bersten, befehlen\"(.*)#[eE]i#(.*)/\\1ei\\2\" (ICat V-Stem) ; reissen, bleiben\"(.*)#y..#(.*)/\\1ie\\2\" (ICat V-Stem) ; biegen\"(.*)#Ö..#(.*)/\\1ö\\2\" (ICat V-Stem) ; löschen\"(.*)#([äioöuü]).*#(.*)/\\1\\2\\3\" (ICat V-Stem) ; gären, beginnen, kommen, schwören, rufen, küren; Return e-Insertion by General ISRule with Impf. sing. Duden 209.1\".*[^rst][dt]\" (ICat V-Stem)	\"e(st)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Impf) ; botst, fandst, aber barstest, sottest, hattest (wurdest); e-Insertion resp. s-Deletion 2 Pers. Sing. Ind. Impf. Duden 209.2\".*[sz]\" (ICat V-Stem)		\"t/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; bliesest u. bliest\".*sch\" (ICat V-Stem)		\"st/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; droschest, droschst, wuschest, wuschst; e-Delition 2. Pers SG u. PL Conj-2, Duden 210\".*[äöü].*[sxz]\" (ICat V-Stem)	\"es?(t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; sässet und sässt, wüchset u. wüchst\".*[äöü].*[^sxzdt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; trügest u. trügst, sänget u. sängt; optional e-deletion Part-2 .*ieen/.*ien (gespie[e]n)\".*ie\" (ICat V-Stem)		\"en/n\" (Mod Part)(Temp Perf) value; Individual\"(.*)tu\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix)^(Mod Conj-1) ; (ver-, ab-)tuen/tun\"(.*)ta\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix) ; (ver-, ab-)getaen/getan\"ge\"	\"ess/gess\" (ICat V-Stem)	(Mod Part)(Temp Perf) ; gegessen\"(.*)hiess/\\1heiss\" (ICat V-Stem)	(Mod Part)(Temp Perf) ; geheissen, (verheissen)\".*stand|.*tat\" (ICat V-Stem)			\"t/et\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num PL) ; (ver)standt/(ver)standet, tatet;;;    entry	(Aux haben)	LU \"void\";;;    	\"°bef#xÅo#hl\" \"befehl\" \"befiehl\" \"befahl\" \"befähl\" \"beföhl\" \"befohl\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°befl#ei#ss\" \"befleiss\" \"befliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°beg#iÅo#nn\" \"beginn\" \"begann\" \"begänn\" \"begönn\" \"begonn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#AUa#ck\" \"back\" \"bäck\" \"buk\" \"bük\";;;    	ISRules;;;    	\"bäck/back\"	(Mod Ind)(Temp Pres)(Num SG) value ; bäckst u. backst, bäckt u. backt;;;    	\"b[uü]k/back\"	\"/te\" (Pers 1st)(Num SG)|(Pers 3rd)(Num SG) value ; buk u. backte;;;    	\"b[uü]k/back\"	\"e?st/test\" value ; bukst u. backtes, bük(e)st u. backtest;;;    	\"b[uü]k/back\"	\"en/ten\" value ; buken u. backten, büken u. backten;;;    	\"b[uü]k/back\"	\"e?t/tet\" value ; bukt u. backtet, bük(e)t u. backten;;;    	\"bük/back\"	\"e/te\" value ; büke u. backte;;;    entry	(Aux haben)	LU \"void\"	\"b#ei#ss\" \"beiss\" \"biss\";;;    entry	(Aux haben)	LU \"void\";;;    	\"b#EAo#rg\" \"berg\" \"birg\" \"barg\" \"bärg\" \"borg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"b#EAo#rst\" \"berst\" \"birst\" \"barst\" \"bärst\" \"borst\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°bew#eOo#g\" \"beweg\" \"bewog\" \"bewög\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"b#yOo#g\" \"bieg\" \"bog\" \"bög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#yOo#t\" \"biet\" \"bot\" \"böt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#iAu#nd\" \"bind\" \"band\" \"bänd\" \"bund\" \"bünd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#iAe#tt\" \"bitt\" \"bat\" \"bät\" \"bet\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"bl#Aya#s\" \"blas\" \"bläs\" \"blies\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"bl#Ei#b\" \"bleib\" \"blieb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"bl#ei#ch\" \"bleich\" \"blich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"br#Aya#t\" \"brat\" \"brät\" \"briet\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"br#EAo#ch\" \"brech\" \"brich\" \"brach\" \"bräch\" \"broch\" \"bruch\" \"brüch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"dr#EOo#sch\" \"dresch\" \"drisch\" \"drosch\" \"drösch\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"dr#iAu#ng\" \"dring\" \"drang\" \"dräng\" \"drung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#Aia#ng\" \"empfang\" \"empfäng\" \"empfing\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#xÅo#hl\" \"empfehl\" \"empfiehl\" \"empfahl\" \"empfähl\" \"empföhl\" \"empfohl\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#iAu#nd\" \"empfind\" \"empfand\" \"empfänd\" \"empfund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"#EAe#ss\" \"ess\" \"iss\" \"ass\" \"äss\" \"gess\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"f#AUa#hr\" \"fahr\" \"fähr\" \"fuhr\" \"führ\" \"fahr\" \"fahrt\" \"fährt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"f#Aya#ll\" \"fall\" \"fäll\" \"fiel\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#Aia#ng\" \"fang\" \"fäng\" \"fing\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#EOo#cht\" \"fecht\" \"ficht\" \"focht\" \"föcht\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#iAu#nd\" \"find\" \"fand\" \"fänd\" \"fund\" \"fünd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"fl#EOo#cht\" \"flecht\" \"flicht\" \"flocht\" \"flöcht\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"fl#yOo#g\" \"flieg\" \"flog\" \"flög\" \"flug\" \"flüg\";;;    ;;;    entry	(Aux sein)(Aux haben)	LU \"void\";;;    	\"fl#yOo#h\" \"flieh\" \"floh\" \"flöh\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"fl#yOo#ss\" \"fliess\" \"floss\" \"flöss\" \"fluss\" \"flüss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"fr#EAe#ss\" \"fress\" \"friss\" \"frass\" \"fräss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"g#äOo#r\" \"gär\" \"gor\" \"gör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°geb#äAo#r\" \"gebär\" \"gebier\" \"gebar\" \"gebor\";;;    	ISRules;;;    	\"gebär/gebier\"		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) value;;;    ;;;    	\"gebär/gebier\"		\"\" (Mod Imper)(Num SG) value;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#EAe#b\" \"geb\" \"gib\" \"gab\" \"gäb\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°ged#Ei#h\" \"gedeih\" \"gedieh\";;;    entry	(Aux sein)	LU \"void\"	\"g#eia#h\" \"geh\" \"ging\" \"gang\" \"gäng\";;;    entry	(Aux sein)	LU \"void\";;;    	\"°gel#iAu#ng\" \"geling\" \"gelang\" \"geläng\" \"gelung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#EÅo#lt\" \"gelt\" \"gilt\" \"galt\" \"gält\" \"gölt\" \"golt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°gen#eAe#s\" \"genes\" \"genas\" \"genäs\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°gen#yOo#ss\" \"geniess\" \"genoss\" \"genöss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°gesch#xAe#h\" \"gescheh\" \"geschieh\" \"geschah\" \"geschäh\";;;    	deleted-forms	(Pers 1st);;;    			(Pers 2nd);;;    entry	(Aux haben)	LU \"void\";;;    	\"°gew#iÅo#nn\" \"gewinn\" \"gewann\" \"gewänn\" \"gewönn\" \"gewonn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#yOo#ss\" \"giess\" \"goss\" \"göss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gl#ei#ch\" \"gleich\" \"glich\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"gl#ei#t\" \"gleit\" \"glitt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gl#iOo#mm\" \"glimm\" \"glomm\" \"glömm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gr#AUa#b\" \"grab\" \"gräb\" \"grub\" \"grüb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gr#ei#f\" \"greif\" \"griff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Aya#lt\" \"halt\" \"hält\" \"hielt\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"h#äia#ng\" \"häng\" \"hing\" \"hang\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#eOo#b\" \"heb\" \"hob\" \"höb\" \"hub\" \"hüb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Ei#ss\" \"heiss\" \"hiess\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Eåo#lf\" \"helf\" \"hilf\" \"half\" \"hälf\" \"hülf\" \"holf\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kies\" \"kies\" \"kor\" \"kör\";;;    	ISRules;;;    	\"kies/kor\"	(Temp Impf)|(Temp Perf);;;    	\"kor\"		\"t/st\" (Temp Impf)(Pers 2nd)(Num SG);;;    	\"kor/kör\"	(Mod Conj-2);;;    ; \"ungebräuchlich, veraltet\" Basis-Entry for erküren, ausküren , auserküren;;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"kl#iOo#mm\" \"klimm\" \"klomm\" \"klömm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kl#iAu#ng\" \"kling\" \"klang\" \"kläng\" \"klung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kn#ei#f\" \"kneif\" \"kniff\";;;    entry	(Aux sein)	LU \"void\"	\"k#oAo#mm\" \"komm\" \"kam\" \"käm\" \"kömm\";;;    entry	(Aux sein)	LU \"void\";;;    	\"kr#yOo#ch\" \"kriech\" \"kroch\" \"kröch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"k#üOo#r\" \"kür\" \"kor\" \"kör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#AUa#d\" \"lad\" \"läd\" \"lud\" \"lüd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#Aya#ss\" \"lass\" \"läss\" \"liess\";;;    ;;;    entry	(Aux sein)(Aux haben)	LU \"void\";;;    	\"l#Au#f\" \"lauf\" \"läuf\" \"lief\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#ei#d\" \"leid\" \"litt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#Ei#h\" \"leih\" \"lieh\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#xAe#s\" \"les\" \"lies\" \"las\" \"läs\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"l#yAe#g\" \"lieg\" \"lag\" \"läg\" \"leg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#ÖOo#sch\" \"lösch\" \"lisch\" \"losch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#üOo#g\" \"lüg\" \"log\" \"lög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#Ei#d\" \"meid\" \"mied\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#eOo#lk\" \"melk\" \"molk\" \"mölk\";;;    ; milkst, milkt = \"veraltet\" (DUDEN p.137);;;    ; also regular melkte, gemelkt;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#EAe#ss\" \"mess\" \"miss\" \"mass\" \"mäss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°missl#iAu#ng\" \"missling\" \"misslang\" \"missläng\" \"misslung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"n#EAo#hm\" \"nehm\" \"nimm\" \"nahm\" \"nähm\" \"nomm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pf#ei#f\" \"pfeif\" \"pfiff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pfl#eOo#g\" \"pfleg\" \"pflog\" \"pflög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pr#Ei#s\" \"preis\" \"pries\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"qu#EOo#ll\" \"quell\" \"quill\" \"quoll\" \"quöll\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#Aya#t\" \"rat\" \"rät\" \"riet\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#Ei#b\" \"reib\" \"rieb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"r#ei#ss\" \"reiss\" \"riss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"r#ei#t\" \"reit\" \"ritt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#yOo#ch\" \"riech\" \"roch\" \"röch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#iAu#ng\" \"ring\" \"rang\" \"räng\" \"rung\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"r#iÅo#nn\" \"rinn\" \"rann\" \"ränn\" \"rönn\" \"ronn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#uyu#f\" \"ruf\" \"rief\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#AU#f\" \"sauf\" \"säuf\" \"soff\" \"söff\" \"suff\" \"süff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#aU#g\" \"saug\" \"sog\" \"sög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#aUa#ff\" \"schaff\" \"schuf\" \"schüf\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"sch#Ei#d\" \"scheid\" \"schied\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#Ei#n\" \"schein\" \"schien\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#ei#ss\" \"scheiss\" \"schiss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#EAo#lt\" \"schelt\" \"schilt\" \"schalt\" \"schölt\" \"scholt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#éOo#r\" \"scher\" \"schor\" \"schör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#yOo#b\" \"schieb\" \"schob\" \"schöb\" \"schub\" \"schöb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"sch#yOo#ss\" \"schiess\" \"schoss\" \"schöss\" \"schuss\" \"schüss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#Aya#f\" \"schlaf\" \"schläf\" \"schlief\";;;    entry	(Aux haben)	LU \"void\"	\"schl#AUa#g\" \"schlag\" \"schläg\" \"schlug\" \"schlüg\";;;    entry	(Aux sein)	LU \"void\";;;    	\"schl#ei#ch\" \"schleich\" \"schlich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#ei#f\" \"schleif\" \"schliff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#ei#ss\" \"schleiss\" \"schliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#yOo#ss\" \"schliess\" \"schloss\" \"schlöss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#iAu#ng\" \"schling\" \"schlang\" \"schläng\" \"schlung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schm#ei#ss\" \"schmeiss\" \"schmiss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"schm#EOo#lz\" \"schmelz\" \"schmilz\" \"schmolz\" \"schmölz\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schn#ei#d\" \"schneid\" \"schnitt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schr#EAo#ck\" \"schreck\" \"schrick\" \"schrak\" \"schräk\" \"schrock\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schr#Ei#b\" \"schreib\" \"schrieb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schr#Ei#\" \"schrei\" \"schrie\";;;    ; Conj-2 schriee, schrieest etc??;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#Ei#g\" \"schweig\" \"schwieg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schw#EOo#ll\" \"schwell\" \"schwill\" \"schwoll\" \"schwöll\" \"schwall\" \"schwäll\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"schw#iÅo#mm\" \"schwimm\" \"schwamm\" \"schwämm\" \"schwömm\" \"schwomm\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schw#iAu#nd\" \"schwind\" \"schwand\" \"schwänd\" \"schwund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#iAu#ng\" \"schwing\" \"schwang\" \"schwäng\" \"schwung\" \"schwüng\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#öØo#r\" \"schwör\" \"schwor\" \"schwür\" \"schwur\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#xAe#h\" \"seh\" \"sieh\" \"sah\" \"säh\" \"seh\";;;    	ISRules;;;    	\"sieh\"		\"/e\" (Mod Imper)(Num SG) value;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#yOo#d\" \"sied\" \"sott\" \"sött\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iAu#ng\" \"sing\" \"sang\" \"säng\" \"sung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iAu#nk\" \"sink\" \"sank\" \"sänk\" \"sunk\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iÅo#nn\" \"sinn\" \"sann\" \"sänn\" \"sönn\" \"sonn\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"s#iAe#tz\" \"sitz\" \"sass\" \"säss\" \"sess\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sp#Ei#\" \"spei\" \"spie\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sp#iÅo#nn\" \"spinn\" \"spann\" \"spänn\" \"spönn\" \"sponn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"spl#ei#ss\" \"spleiss\" \"spliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"spr#EAo#ch\" \"sprech\" \"sprich\" \"sprach\" \"spräch\" \"sproch\" \"spruch\" \"sprüch\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"spr#yOo#ss\" \"spriess\" \"spross\" \"spröss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"spr#iAu#ng\" \"spring\" \"sprang\" \"spräng\" \"sprung\" \"sprüng\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#EAo#ch\" \"stech\" \"stich\" \"stach\" \"stäch\" \"stoch\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#eåa#h\" \"steh\" \"stand\" \"stünd\" \"ständ\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#xÅo#hl\" \"stehl\" \"stiehl\" \"stahl\" \"stähl\" \"stöhl\" \"stohl\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"st#Ei#g\" \"steig\" \"stieg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"st#Eåo#rb\" \"sterb\" \"stirb\" \"starb\" \"stürb\" \"storb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#yOo#b\" \"stieb\" \"stob\" \"stöb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#iAu#nk\" \"stink\" \"stank\" \"stänk\" \"stunk\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#oyo#ss\" \"stoss\" \"stöss\" \"stiess\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"str#ei#ch\" \"streich\" \"strich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"str#ei#t\" \"streit\" \"stritt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#AUa#g\" \"trag\" \"träg\" \"trug\" \"trüg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#EAo#ff\" \"treff\" \"triff\" \"traf\" \"träf\" \"troff\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"tr#Ei#b\" \"treib\" \"trieb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"tr#EAe#t\" \"tret\" \"tritt\" \"trat\" \"trät\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#iAu#nk\" \"trink\" \"trank\" \"tränk\" \"trunk\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#üOo#g\" \"trüg\" \"trog\" \"trög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"t#uAa#\" \"tu\" \"tat\" \"tät\" \"ta\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"°verd#Eåo#rb\" \"verderb\" \"verdirb\" \"verdarb\" \"verdürb\" \"verdorb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verdr#yOo#ss\" \"verdriess\" \"verdross\" \"verdröss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verg#EAe#ss\" \"vergess\" \"vergiss\" \"vergass\" \"vergäss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verl#yOo#r\" \"verlier\" \"verlor\" \"verlör\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"w#AUa#chs\" \"wachs\" \"wächs\" \"wuchs\" \"wüchs\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#äOo#g\" \"wäg\" \"wog\" \"wög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#AUa#sch\" \"wasch\" \"wäsch\" \"wusch\" \"wüsch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#eOo#b\" \"web\" \"wob\" \"wöb\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"w#ei#ch\" \"weich\" \"wich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Ei#s\" \"weis\" \"wies\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Eåo#rb\" \"werb\" \"wirb\" \"warb\" \"würb\" \"worb\";;;    entry	(Aux sein)	LU \"void\"	\"w#EUo#rd\" \"werd\" \"wir\" \"wird\" \"wurd\" \"würd\" \"word\"	ISRules	\"wird/wir\"	\"st\" (Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)	\"wird\"		\"t/\" (Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)	\"wurd\"		\"/e\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG)	\"wird/werd\"	\"/e\" (Mod Imper)(Num SG)	\"ge/\"	\"word\"	(Temp Perf) value;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Eåo#rf\" \"werf\" \"wirf\" \"warf\" \"würf\" \"worf\" \"wurf\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#yOo#g\" \"wieg\" \"wog\" \"wög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#iAu#nd\" \"wind\" \"wand\" \"wänd\" \"wund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"wr#iAu#ng\" \"wring\" \"wrang\" \"wräng\" \"wrung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"z#Ei#h\" \"zeih\" \"zieh\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"z#yOo#h\" \"zieh\" \"zog\" \"zög\" \"zug\" \"züg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"zw#iAu#ng\" \"zwing\" \"zwang\" \"zwäng\" \"zwung\";;;    ;;;    ;;;    ; Semi-irregular verbs;;;    ;;;    entry	(Aux haben);;;    	\"br#iAa#ng\" \"bring\" \"brach\" \"bräch\";;;    ;;;    entry	(Aux haben);;;    	\"d#eAa#nk\" \"denk\" \"dach\" \"däch\";;;    ;;;    ;;;    ; Modal verbs;;;    entry	(Aux haben)	LU \"void\";;;    	\"d#üUu#rf\" \"dürf\" \"darf\" \"durf\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"k#öOo#nn\" \"könn\" \"kann\" \"konn\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#öOo#g\" \"mög\" \"mag\" \"moch\" \"möch\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#üUu#ss\" \"müss\" \"muss\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#ooo#ll\" \"soll\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#ooo#ll\" \"woll\" \"will\";;;    	ISRules;;;    	\"woll\"	\"/e\" (Mod Imper)(Num SG);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#iUu#ss\" \"wiss\" \"weiss\" \"wuss\" \"wüss\";;;    	ISRules;;;    	\"wiss\"	\"/e\" (Mod Imper)(Num SG);;;    " :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |No-Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Mod Inf)(Temp Pres)	\"en\" \"en\" \"n\"(Mod Ind)(Temp Pres)	\"e\" \"e\"			(Pers 1st)(Num SG)	\"st\" \"st\" \"est\" \"t\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"t\" \"t\" \"et\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Ind)(Temp Impf)	\"te\" \"te\" \"ete\"		(Pers 1st)(Num SG)	\"test\" \"test\" \"etest\"	(Pers 2nd)(Num SG)	\"te\" \"te\" \"ete\"		(Pers 3rd)(Num SG)	\"ten\" \"ten\" \"eten\"	(Pers 1st)(Num PL)	\"tet\" \"tet\" \"etet\"	(Pers 2nd)(Num PL)	\"ten\" \"ten\" \"eten\"	(Pers 3rd)(Num PL)(Mod Conj-1)(Temp Pres)	\"e\" \"e\"			(Pers 1st)(Num SG)	\"est\" \"est\" \"st\"	(Pers 2nd)(Num SG)	\"e\" \"e\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"et\" \"et\" \"t\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Conj-2)(Temp Impf)	\"te\" \"te\" \"ete\"		(Pers 1st)(Num SG)	\"test\" \"test\" \"etest\"	(Pers 2nd)(Num SG)	\"te\" \"te\" \"ete\"		(Pers 3rd)(Num SG)	\"ten\" \"ten\" \"eten\"	(Pers 1st)(Num PL)	\"tet\" \"tet\" \"etet\"	(Pers 2nd)(Num PL)	\"ten\" \"ten\" \"eten\"	(Pers 3rd)(Num PL)(Mod Imper)	\"e\" \"e\" \"\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\"	(Pers 2nd)(Num PL)(Mod Part)(Temp Pres)	\"end\" \"end\" \"nd\"(Mod Part)(Temp Perf)	\"t\" \"t\" \"et\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |N-Regular|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Probleme bei Darstellung SG/Paradigmas (Dat. SG) zeugnis, atlascitation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)ISRules; Double-s with -nis\"(.*nis)/\\1s\" (ICat N-Stem)	\"e.*\" (ICat N-Suffix); zeugnisses, zeugnisse: gem Duden 380.2 kein Dativ-e, vgl. jedoch Pfeffer 79, 2.1.1. Anm. 9; Attention: penis, anisentry	(Gender M)	LU \"void\"	\"berg\" \"berg\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . ES/E)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; vowel change: auskennen, wegrennen, zurücksenden, umwenden DUDEN 214\"(.*)#eaa#(nd)/\\1a\\2\" (ICat V-Stem)	\"e(t.*)/\\1\" (Mod Ind)(Temp Impf)|(Temp Perf) value ; wendete u. wandte, sendete u. sandte\"(.*)#eaa#(nn)/\\1a\\2\" (ICat V-Stem)	(Mod Ind)(Temp Impf)|(Temp Perf)\"(.*)#eaa#(.*)/\\1e\\2\" (ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender M)	LU \"void\"	\"lehrling\" \"lehrling\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/E)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Mod Inf)(Temp Pres)	\"en\" \"en\" \"n\"(Mod Ind)(Temp Pres)	\"e\" \"e\" \"\"		(Pers 1st)(Num SG)	\"st\" \"st\" \"est\" \"t\" \"\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\" \"\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\" \"\"	(Pers 1st)(Num PL)	\"t\" \"t\" \"et\" \"d\"	(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\" \"\"	(Pers 3rd)(Num PL)(Mod Ind)(Temp Impf)	\"\" \"\" \"te\" \"e\"			(Pers 1st)(Num SG)	\"st\" \"st\" \"t\" \"est\" \"test\"	(Pers 2nd)(Num SG)	\"\" \"\" \"te\" \"e\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\" \"ten\"		(Pers 1st)(Num PL)	\"t\" \"t\" \"et\" \"tet\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"ten\"			(Pers 3rd)(Num PL)(Mod Conj-1)(Temp Pres)	\"e\" \"e\" \"\"		(Pers 1st)(Num SG)	\"est\" \"est\" \"st\" \"t\"	(Pers 2nd)(Num SG)	\"e\" \"e\" \"\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"et\" \"et\" \"t\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Conj-2)(Temp Impf)	\"e\" \"e\" \"te\"			(Pers 1st)(Num SG)	\"est\" \"st\" \"est\" \"t\" \"test\"	(Pers 2nd)(Num SG)	\"e\" \"e\" \"te\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"ten\"			(Pers 1st)(Num PL)	\"et\" \"t\" \"et\" \"tet\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"ten\"			(Pers 3rd)(Num PL)(Mod Imper)	\"e\" \"e\" \"\"		(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\" \"d\"	(Pers 2nd)(Num PL)(Mod Part)(Temp Pres)	\"end\" \"end\"(Mod Part)(Temp Perf)	\"en\" \"en\" \"n\" \"t\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"ge\" \"ge\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)ISRules; Delete Suffix n Dat. PL after n\".*n\" (ICat N-Stem)	\"n/\" (Case Dat)(Num PL)entry	(Gender M)	LU \"void\"	\"gArten\" \"garten\" \"gart\" \"gärten\" \"gärt\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/-)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; Fehler bei Spelling Rules. Bis Korrektur gemacht,; Zeichen É ersetzt durch x (befehlen); Zeichen í ersetzt durch y (stossen); Return e-Insertion by General ISRUle with Ind. Pres mit Umlaut Duden 209.1\".*#[AEx]..#.*t\" (ICat V-Stem)	\"et/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ;  t-Deletion: brät, gilt, hält\".*#[AEx]..#.*st\" (ICat V-Stem)	\"est/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; st-Deletion: du birst,\".*#[AEx]..#.*[dt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Num SG) ; brätst, lädst, lädt, giltst; e-Deletion-Umlaut-Imper Duden 290\".*#[ExÖ]..#.*\" (ICat V-Stem)		\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) ; nimm, brich, lisch; CONSONAT-Modifications:\"(.*b#iAe#t)t/\\1\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; bitten/bat/bäte/gebeten\"(.*f#Aya#l)l/\\1\" (ICat V-Stem)			(Temp Impf) ; fallen/fiel/fiele\"(.*g#eia#)h/\\1ng\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gehen/ging/gegangen\"(.*k#oAo#m)m/\\1\" (ICat V-Stem)			(Temp Impf) ; (be)komm/(be)kam\"(.*sch#aUa#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; (er)schaff/(er)schuf/(er)schüf\"(.*schr#EAo#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; (er)schrecken/(er)schrak/(er)schräke\"(.*s#yOo#)d/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sieden/sott/sötte/gesotten\"(.*s#iAe#)tz/\\1ss\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sitzen/sass/sässe/gesessen\"(.*st#eåa#)h/\\1nd\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; stehen/stand/stände/gestanden (verstehen etc.)\"(.*tr#EAo#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; treffen/traf\"(.*t#uAa#)/\\1t\" (ICat V-Stem)			(Temp Impf) ; tun/tat/täte (vertun)\"(.*z#yOo#)h/\\1g\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; ziehen/zog/gezogen\"(.*tr#EAe#)t/\\1tt\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*n#EAo#)hm/\\1mm\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)|(Mod Part)(Temp Perf)\"(.*#ei#)[dt]/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gleiten/glitt/geglitten, leiden/litt/gelitten\"(.*#ei#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; greifen/griff/gegriffen, kneifen/kniff\"(.*s#AU#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; saufen/soff/gesoffen (besaufen etc.)\"(.*m#öOo#)g/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; (ver)mögen/mochte/möchte/gemocht; modal verbs: delete suffix 1st & 3rd pers. SG Ind Pres: darfe/darf, kanne/kann\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\".*/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG); modal verbs: change irregular imp. suffixes to regular suffixes; durf/durfte, konnst/konntest etc.\".*m#üUu#ss|.*w#iUu#ss\" (ICat V-Stem)		\"t/st\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) ; s deleted by general ISRule\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"([^e].*)/te\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"(e.*)/t\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"/te\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG); modal verbs: replace irregular part-perf suffixe by regular suffixe; gedurfen/gedurft etc.\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"en/t\" (Temp Perf); mögen/mochte\"möchte; VOWEL-Modifications; Umlaut Ind-Pres (+Imper SG):\"(.*)#A..#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#A[uU]#(.*)/\\1äu\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#[EÖ]..#(.*)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*)#x..#(.*)/\\1ie\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*st)#oyo#(ss)/\\1ö\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ; stosse stösst;modal verbs ablaut Ind Pres\"(.*d)#üUu#(rf)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; dürfen/darf\"(.*)#öOo#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; mögen/mag, können/kann\"(.*m)#üUu#(ss)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; müssen/muss\"(.*w)#ooo#(ll)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wollen/will\"(.*w)#iUu#(ss)/\\1ei\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wissen/weiss; Ind Impf + Conj-2 + Part-2\"(.*)#ei#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf)\"(.*)#Ei#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf);Impf + Conj-2\"(.*)#.i.#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)\"(.*)#.y.#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; lassen/liess\"(.*)#Au#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; laufen/lief; Impf only\"(.*)#.[AÅå].#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)|(Temp Perf) ; saufen/soff, schnauben/schnob\"(.*)#.O.#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#.U.#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf); Conj-2\"(.*sch)#EAo#(lt)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; schelten/schölte\"(.*schw)#öOo#(r)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value ; schwören/schwüre (neben schwöre DUDEN p.140)\"(.*)#.A.#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; saufen/söffe, schnauben/schnöbe\"(.*)#.O.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.U.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.å.#(r[bf])/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; stürbe, verdürbe, würbe, würfe; ≠ stände-stünde, hälfe-hülfe\"(.*)#.[Åå].#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value\"(.*)#.Å.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; begänne u. begönne\"(.*)#.å.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; hälfe u. hülfe, stände u. stünde; Part-2 only\"(.*)#..a#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..o#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..u#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..e#(.*)/\\1e\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf); all other Temp + Mod\"(.*)#[aA]..#(.*)/\\1a\\2\" (ICat V-Stem) ; fragen, blase\"(.*)#[aA][uU]#(.*)/\\1au\\2\" (ICat V-Stem) ; laufen, saufen, schnauben (gelaufen also (Mod Part)(Temp Perf)!!)\"(.*)#[eEx]..#(.*)/\\1e\\2\" (ICat V-Stem) ; bewegen, bersten, befehlen\"(.*)#[eE]i#(.*)/\\1ei\\2\" (ICat V-Stem) ; reissen, bleiben\"(.*)#y..#(.*)/\\1ie\\2\" (ICat V-Stem) ; biegen\"(.*)#Ö..#(.*)/\\1ö\\2\" (ICat V-Stem) ; löschen\"(.*)#([äioöuü])..#(.*)/\\1\\2\\3\" (ICat V-Stem) ; gären, beginnen, kommen, schwören, rufen, küren; Return e-Insertion by General ISRule with Impf. sing. Duden 209.1\".*[^rst][dt]\" (ICat V-Stem)	\"e(st)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Impf) ; botst, fandst, aber barstest, sottest, hattest; e-Insertion resp. s-Deletion 2 Pers. Sing. Ind. Impf. Duden 209.2\".*[sz]\" (ICat V-Stem)		\"t/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; bliesest u. bliest\".*sch\" (ICat V-Stem)		\"st/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; droschest, droschst, wuschest, wuschst; e-Delition 2. Pers SG u. PL Conj-2, Duden 210\".*[äöü].*[sxz]\" (ICat V-Stem)	\"es?(t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; sässet und sässt, wüchset u. wüchst\".*[äöü].*[^sxzdt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; trügest u. trügst, sänget u. sängt; optional e-deletion Part-2 .*ieen/.*ien (gespie[e]n)\".*ie\" (ICat V-Stem)		\"en/n\" (Mod Part)(Temp Perf) value; Individual\"(.*)tu\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix)^(Mod Conj-1) ; (ver-, ab-)tuen/tun\"(.*)ta\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix) ; (ver-, ab-)getaen/getan\"(.*)wird/\\1wir\"	\"st\" (Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)\"(.*)wird\"		\"t/\" (Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)wurd\"			\"/e\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Imper)(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; vowel change kennen/kannte, rennen, senden, wenden DUDEN 214\"(.*)#eaa#(nd)/\\1a\\2\" (ICat V-Stem)	\"e(t.*)/\\1\" (Mod Ind)(Temp Impf)|(Temp Perf) value ; wendete u. wandte, sendete u. sandte\"(.*)#eaa#(nn)/\\1a\\2\" (ICat V-Stem)	(Mod Ind)(Temp Impf)|(Temp Perf)\"(.*)#eaa#(.*)/\\1e\\2\" (ICat V-Stem)entry	(Aux haben)	LU \"void\"	\"änder\" \"änder\" \"ändr\"entry	(Aux haben)	LU \"void\"	\"hab\" \"hab\" \"ha\" \"hat\" \"hät\"	ISRules	\"hab/ha\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)	\"hab/hat\" (ICat V-Stem)		(Temp Impf)	\"hat/hät\" (ICat V-Stem)		(Mod Conj-2);-------------------------------------------------------------; irregular vowel changes, but regular ISuffixes; list complete -> no more (simple) entries of this kindentry	(Aux haben)	LU \"void\"	\"br#eaa#nn\" \"brenn\" \"brann\" \"brand\" \"bränd\"entry	(Aux haben)	LU \"void\"	\"k#eaa#nn\" \"kenn\" \"kann\" \"kennt\"entry	(Aux haben)	LU \"void\"	\"n#eaa#nn\" \"nenn\" \"nann\"entry	(Aux sein)	LU \"void\"	\"r#eaa#nn\" \"renn\" \"rann\"entry	(Aux haben)(Aux sein)	LU \"void\"	\"s#eaa#nd\" \"send\" \"sand\"entry	(Aux haben)	LU \"void\"	\"w#eaa#nd\" \"wend\" \"wand\" \"wänd\";-------------------------------------------------------------" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |No-Detachable-Prefix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)ISRules\".*tor\" (ICat N-Stem)	\"e(s?)/\\1\" (Case Gen)(Num SG)|(Case Dat)(Num SG)entry	(Gender M)	LU \"void\"	\"staat\" \"staat\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]S/[E]N)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)	(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)	(ICat V-Suffix)(Mod Inf)(ICat V-Stem)	(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)	(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)	(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)	(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)	(ICat V-Suffix)(Mod Imper)(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules\"sei/bin\" (ICat V-Stem)		\"e/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG) ; bin\"sei/bi\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; bist\"sei/is\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"sei/sind\" (ICat V-Stem)	\"en/\" (Mod Ind)(Temp Pres)(Num PL) ; sind\"sei\" (ICat V-Stem)		\"t/d\" (Mod Ind)(Temp Pres)(Num PL)|(Mod Imper)(Num PL) ; seit/seid\"sei\" (ICat V-Stem)		\"en/n\" (Mod Inf) ; seien/sein\"sei\" (ICat V-Stem)		\"e/\" (Mod Conj-1)(Num SG)|(Mod Imper)(Num SG) ; seie/sei\"sei\" (ICat V-Stem)		\"est/st\" (Mod Conj-1)(Num SG) value ; sei(e)st\"sei/war\" (ICat V-Stem)		(Temp Impf)\"war/wär\" (ICat V-Stem)		(Mod Conj-2) ; wäre\"wär\" (ICat V-Stem)		\"e(s?t)/\\1\" (Mod Conj-2)(Pers 2nd) value ; wär(e)st, wär(e)t\"sei\" (ICat V-Stem)		\"t/d\" (Mod Imper)(Num PL) ; seit/seid!\"sei/wes\" (ICat V-Stem)		(Temp Perf)entry	(Aux sein)	LU \"sein\"	\"sei\" \"sei\" \"bin\" \"bi\" \"is\" \"sind\" \"war\" \"wär\" \"wes\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |sein|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.ER)(Num PL)paradigms(Num SG)(Num PL)ISRules; e-Deletion SG with -tum\".*tum\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix)(Num SG); irrtums vgl. Duden 380.2 u S. 240, Pfeffer 79. 2.1.1.entry	(Gender N)	LU \"void\"	\"bild\" \"bild\"entry	(Gender N)	LU \"void\"	\"grAs\" \"gras\" \"gräs\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]S/ER)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender N)	LU \"void\"	\"deck\" \"deck\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/S)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender M)	LU \"void\"	\"mensch\" \"mensch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]N/[E]N)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)ISRules; Double-s with -nis\"(.*nis)/\\1s\" (ICat N-Stem)	\"e.*\" (ICat N-Suffix)entry	(Gender F)	LU \"void\"	\"krAft\" \"kraft\" \"kräft\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/E)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender F)	LU \"void\"	\"mUtter\" \"mutter\" \"mütter\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/-)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)ISRules; in/innen\"(.*)iN/\\1inn\" (ICat N-Stem)	\"en\" (ICat N-Suffix)(Num PL)\"(.*)iN/\\1in\" (ICat N-Stem)entry	(Gender F)	LU \"void\"	\"blume\" \"blume\" \"blum\" \"blüm\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/[E]N)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender F)	LU \"void\"	\"oma\" \"oma\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/S)) :MOD2-P T) NIL NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |N-Irregular|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)ISRules; Delete-n Nom SG\"(.*)n/\\1\" (ICat N-Stem)	(Case Nom)(Num SG) value; herz/herzen\"(.*)herz/\\1herzen\"		(Case Gen)(Num SG)|(Num PL)\"(.*)herz/\\1herzen\"		(Case Dat)(Num SG) value\".*herz.*\"			\"e(.*)/\\1\" (Case Gen)(Num SG)|(Case Dat)(Num SG); e-Deletion, weil allgemeine ISRules dies bei herz noch nicht getan haben.; daneben aber auch herzes (Gen), herz (Dat), herz (PL), d.h. ES/E-Klasse; Duden WB; Delete Suffix n Dat. PL after n\".*n\" (ICat N-Stem)	\"n/\" (Case Dat)(Num PL)entry	(Gender N)	LU \"void\"	\"herz\" \"herz\" \"herzen\"; ebenso: Friede(n), Funke(n), Gedanke(n), Glaube(n), Same(n), Wille(n); nicht Haufe(n), da Haufe gem. Duden WB veraltet.; siehe Duden 382.1, Blatt Nomen Gen -ens " :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . ENS/EN)) :MOD2-P T) NIL NIL NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(ICat Reg)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |N-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |N-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(ICat ES)	\"\" \"\"		(Case Nom)	\"es\" \"es\" \"s\"	(Case Gen)	\"e\" \"e\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(ICat S)	\"\" \"\"		(Case Nom)	\"s\" \"s\" \"\"	(Case Gen)	\"\" \"\"		(Case Dat)	\"\" \"\"		(Case Acc)(ICat EN)	\"\" \"\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(ICat -)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"\" \"\"		(Case Dat)	\"\" \"\"		(Case Acc)(Decl Strong)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Strong)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Strong)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Decl Weak)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Weak)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Num| . SG)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(ICat E)	\"e\" \"e\" \"\"	(Case Nom)	\"e\" \"e\" \"\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\" \"\"	(Case Acc)(ICat -)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"n\" \"n\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(ICat EN)	\"en\" \"en\" \"n\"	(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(ICat ER)	\"er\" \"er\"	(Case Nom)	\"er\" \"er\"	(Case Gen)	\"ern\" \"ern\"	(Case Dat)	\"er\" \"er\"	(Case Acc)(ICat S)	\"s\" \"s\"		(Case Nom)	\"s\" \"s\"		(Case Gen)	\"s\" \"s\"		(Case Dat)	\"s\" \"s\"		(Case Acc)(ICat Foreign)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"\" \"\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(Decl Strong)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Num| . PL)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . A)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules\".*grOss\" (ICat A-Stem)			\"est/t\" (Degree Super); gröss+ste/grösste; Umlaut Comparative/Superlative\"(.*)A(.*)/\\1ä\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)U(.*)/\\1ü\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem)\"(.*)U(.*)/\\1u\\2\" (ICat A-Stem)entry	\"Alt\" \"alt\" \"ält\"entry	\"grün\" \"grün\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Regular|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Adjectives with an optional e when undeclined (v. Duden 440; Blatt Adj, Stamm auf -e):; e.g. bös(e), fad(e), trüb(e), invalid(e), öd(e), zäh(e) etc.; stems to be entered without optional e, which is deletet by RIRule ISRule.; Not adj. with obligatary e: e.g. weise, flüggecitation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules\"(.*)/\\1e\" (ICat A-Stem)	(Decl Undeclined) valueentry	LU \"void\"	\"fad\" \"fad\" \"fade\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Regular-Undeclined-e-Optional|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; schmal, rund, bang, fromm, krumm usw. for all adj with two correct comp-forms (umlaut and no-umlaut, Duden 518citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules; Umlaut Comparative/Superlative\"(.*)A(.*)/\\1ä\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)U(.*)/\\1ü\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem)\"(.*)U(.*)/\\1u\\2\" (ICat A-Stem)entry	LU \"void\"	\"rUnd\" \"rund\" \"ründ\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Two_Comp_Forms|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)word-forms(ICat A-Stem)		(ICat A-Suffix)(Decl Undeclined)paradigms(Decl Undeclined)entry	LU \"void\"	\"rosa\" \"rosa\"; ebenso: olive, beige, orange, creme, Duden 443.5; evtl. wie bei anderen Adj.-Klassen alle Formen des Positivs (Duden 529.5) generieren lassen." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Invariable|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)word-forms(ICat A-Stem)		(ICat A-Suffix)(Decl Undeclined)paradigms(Decl Undeclined)entry	LU \"void\"	\"quitt\" \"quitt\"; Duden 449: fit, zugetan, barfuss, schade, schuld usw.; ebenfalls Regel für Attributive only (Duden 448): obere, mittlere, linke, andere, weitere (Duden 470-472); dort, citation-forms = A-Stem + A-Suffix mask. SG. Nom. weak-Decl (-e); keine Comp. und z.T. keine Super-Formen." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Predicative-Only|)) :MOD2-P T) NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 527citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules; hoch, hoh, höher, höchst\"(.*)hOch/\\1hOh\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark)\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem); nah, nahe, näher, nächst (but compounds are regular: naturnah, naturnaher, naturnah[e]ste)\"nAh/nahe\" (ICat A-Stem)		(Decl Undeclined) value\"nAh/näh\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"näh/näch\" (ICat A-Stem)		(Degree Super)\".*nah\" (ICat A-Stem)			\"st/est\" (Degree Super) value; gut, besser, best\"gut/bess\" (ICat A-Stem)		(Degree Comp)\"gut/best\" (ICat A-Stem)		\"st/\" (Degree Super); stem best+ø and not be+st because surface string \"be\" is the same as for the suffix \"be\" => too many wrong parses with tentative entries; not \"(.*)gut\" because colloquial ungut[e]ste, herzensgut[e]ste\".*gut\" (ICat A-Stem)			\"st/est\" (Degree Super) valueentry	LU \"void\"	\"hOch\" \"hoch\" \"hoh\" \"höh\" \"höch\"entry	LU \"void\"	\"nAh\" \"nah\" \"nahe\" \"näh\" \"näch\"entry	LU \"void\"	\"guT\" \"gut\" \"bess\" \"best\"; dito Zahladjektive: viel, mehr, meist; wenig, minder u. weniger, mindeste u. wenigste, Duden 527" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |A-Irreg|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |A-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Decl Strong)(Num SG)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Strong)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Strong)(Num SG)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Decl Strong)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num SG)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Weak)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num SG)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num PL)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc);;;    (Decl Mixed)(Num SG)(Gender M);;;    	\"er\" \"er\"	(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"en\" \"en\"	(Case Acc);;;    ;;;    (Decl Mixed)(Num SG)(Gender F);;;    	\"e\" \"e\"		(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"e\" \"e\"		(Case Acc);;;    ;;;    (Decl Mixed)(Num SG)(Gender N);;;    	\"es\" \"es\"	(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"es\" \"es\"	(Case Acc);;;    ;;;    (Decl Mixed)(Num PL);;;    	\"e\" \"e\"		(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"e\" \"e\"		(Case Acc)(Decl Undeclined)	\"\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |A-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Degree Pos)	\"\" \"\"(Degree Comp)	\"er\" \"er\" \"r\"(Degree Super)	\"st\" \"st\" \"est\" \"t\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Degr-Mark|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Art|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Manner| . |Def|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 352, 536citation-forms(ICat Def-Article)(Case Nom)word-forms(ICat Def-Article)(Case Nom)(ICat Def-Article)(Case Gen)(ICat Def-Article)(Case Dat)(ICat Def-Article)(Case Acc)paradigms(Cat Art)(Manner Def)entry	(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"	(Case Nom)	\"des\" \"des\"	(Case Gen)	\"dem\" \"dem\"	(Case Dat)	\"den\" \"den\"	(Case Acc)entry	(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"der\" \"der\"	(Case Gen)	\"der\" \"der\"	(Case Dat)	\"die\" \"die\"	(Case Acc)entry	(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"	(Case Nom)	\"des\" \"des\"	(Case Gen)	\"dem\" \"dem\"	(Case Dat)	\"das\" \"das\"	(Case Acc)entry	(Num PL)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"der\" \"der\"	(Case Gen)	\"den\" \"den\"	(Case Dat)	\"die\" \"die\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Definite-Article|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Def-Article|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Manner| . |Indef|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 352, 536citation-forms(ICat Art-Stem)	(ICat Art-Suffix)(Gender M)(Case Nom)word-forms(ICat Art-Stem)	(ICat Art-Suffix)paradigms(Gender M)(Gender F)(Gender N)entry	(Num SG)	LU \"void\"	\"ein\" \"ein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Indefinite-Article|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Art-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Gender M)	\"\" \"\"		(Case Nom)	\"es\" \"es\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Gender N)	\"\" \"\"		(Case Nom)	\"es\" \"es\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"\" \"\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Art-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Pron|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 537citation-forms(ICat Pers-Pron)(Case Nom)word-forms(ICat Pers-Pron)paradigms(Cat Pron)entry	(Manner Personal)(Pers 1st)(Num SG)	LU \"void\"	\"ich\" \"ich\"		(Case Nom)	\"meiner\" \"meiner\"	(Case Gen)	\"mir\" \"mir\"		(Case Dat)	\"mich\" \"mich\"		(Case Acc)entry	(Manner Personal)(Pers 2nd)(Num SG)	LU \"void\"	\"du\" \"du\"		(Case Nom)	\"deiner\" \"deiner\"	(Case Gen)	\"dir\" \"dir\"		(Case Dat)	\"dich\" \"dich\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender M)	LU \"void\"	\"er\" \"er\"		(Case Nom)	\"seiner\" \"seiner\"	(Case Gen)	\"ihm\" \"ihm\"		(Case Dat)	\"ihn\" \"ihn\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender F)	LU \"void\"	\"sie\" \"sie\"		(Case Nom)	\"ihrer\" \"ihrer\"		(Case Gen)	\"ihr\" \"ihr\"		(Case Dat)	\"sie\" \"sie\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender N)	LU \"void\"	\"es\" \"es\"		(Case Nom)	\"seiner\" \"seiner\"	(Case Gen)	\"ihm\" \"ihm\"		(Case Dat)	\"es\" \"es\"		(Case Acc)entry	(Manner Personal)(Pers 1st)(Num PL)	LU \"void\"	\"wir\" \"wir\"		(Case Nom)	\"unser\" \"unser\"		(Case Gen)	\"uns\" \"uns\"		(Case Dat)	\"uns\" \"uns\"		(Case Acc)entry	(Manner Personal)(Pers 2nd)(Num PL)	LU \"void\"	\"ihr\" \"ihr\"		(Case Nom)	\"euer\" \"euer\"		(Case Gen)	\"euch\" \"euch\"		(Case Dat)	\"euch\" \"euch\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num PL)	LU \"void\"	\"sie\" \"sie\"		(Case Nom)	\"ihrer\" \"ihrer\"		(Case Gen)	\"ihnen\" \"ihnen\"		(Case Dat)	\"sie\" \"sie\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Personal-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Refl-Pron)(Case Acc); Acc als Zitatform, da bei reflexiven Verben meistgebrauchte Form (sich ist auch in Duden WB Verweisform)word-forms(ICat Refl-Pron)paradigms(Cat Pron)entry	(Manner Refl)(Pers 1st)(Num SG)	LU \"void\"	\"meiner\" \"meiner\"	(Case Gen)	\"mir\" \"mir\"		(Case Dat)	\"mich\" \"mich\"		(Case Acc)entry	(Manner Refl)(Pers 2nd)(Num SG)	LU \"void\"	\"deiner\" \"deiner\"	(Case Gen)	\"dir\" \"dir\"		(Case Dat)	\"dich\" \"dich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender M)	LU \"void\"	\"seiner\" \"seiner\"	(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender F)	LU \"void\"	\"ihrer\" \"ihrer\"		(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender N)	LU \"void\"	\"seiner\" \"seiner\"	(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 1st)(Num PL)	LU \"void\"	\"unser\" \"unser\"		(Case Gen)	\"uns\" \"uns\"		(Case Dat)	\"uns\" \"uns\"		(Case Acc)entry	(Manner Refl)(Pers 2nd)(Num PL)	LU \"void\"	\"euer\" \"euer\"		(Case Gen)	\"euch\" \"euch\"		(Case Dat)	\"euch\" \"euch\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num PL)	LU \"void\"	\"ihrer\" \"ihrer\"		(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Rezipr)(Num PL)	LU \"void\"	\"einander\" \"einander\"	(Case Gen)	\"einander\" \"einander\"	(Case Dat)	\"einander\" \"einander\"	(Case Acc)	deleted-forms	(Case Gen); 	Steht für uns, euch, sich (PL): einander unterstützen (Acc), einander begegnen (Dat); Duden 543, 176, 179;	Mit Präp (miteinander, aneinander, übereinander) gem. Duden WB s.v. = Adv (stimmt das immer? z.B. bei übereinander reden?); evtl. nur 3. Pers. SG u. PL. Dat u. Acc, da andere Formen identisch mit Personalpronomen; Duden 541" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Reflexive-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 545, 546; Adj (o. Pron.?) meinige, deinige etc. via Suffixing mit -ig zu Weak-Decl-Only-Adj (o. Possessivpron?)citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat -)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak); Strong = attributiv (ICat -): \"mein Auto ist rot\", oder nicht attributiv ohne def. Artikel (Case Nom)(ICat er) u. (Case Acc)(ICat es): \"meines ist rot/es ist mein(e)s\"; Weak = nicht attributiv mit def. Artikel: \"der/die/das meine\" \"des/der deinen\", \"dem/der seinen\" etc.; siehe Duden 547paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)ISRules; Delete e Stemm: unsere u. unsre, euere u. eure, eueres u. eures, unserer u. unsrer\"(.*)e(r)/\\1\\2\" (ICat Pron-Stem)	\"e.*\" (ICat Pron-Suffix) value; Delete e-Suffix, unseren u. unsern, euerem u. euerm\".*er\" (ICat Pron-Stem)			\"e([nm])/\\1\" (ICat Pron-Suffix) value; meines u. meins\"[mds]ein\" (ICat Pron-Stem)		\"es/s\" (Gender N)(Case Nom)|(Gender N)(Case Acc) valueentry	(Manner Poss)(Pers 1st)(Num SG)		LU \"void\"	\"mein\" \"mein\"entry	(Manner Poss)(Pers 2nd)(Num SG)		LU \"void\"	\"dein\" \"dein\"entry	(Manner Poss)(Pers 3rd)(Gender M)(Num SG)	LU \"void\"	\"sein\" \"sein\"entry	(Manner Poss)(Pers 3rd)(Gender N)(Num SG)	LU \"void\"	\"sein\" \"sein\"entry	(Manner Poss)(Pers 3rd)(Gender F)(Num SG)	LU \"void\"	\"ihr\" \"ihr\"entry	(Manner Poss)(Pers 1st)(Num PL)		LU \"void\"	\"unser\" \"unser\" \"unsr\"entry	(Manner Poss)(Pers 2nd)(Num PL)		LU \"void\"	\"euer\" \"euer\" \"eur\"entry	(Manner Poss)(Pers 3rd)(Num PL)		LU \"void\"	\"ihr\" \"ihr\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Possessive-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Demonstr-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 549citation-forms(ICat Demonstr-Pron.der/die/das)(Case Nom)word-forms(ICat Demonstr-Pron.der/die/das)(Case Nom)(ICat Demonstr-Pron.der/die/das)(Case Gen)(ICat Demonstr-Pron.der/die/das)(Case Dat)(ICat Demonstr-Pron.der/die/das)(Case Acc)paradigms(Cat Pron)entry	(Manner Demonstr)(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"		(Case Nom)(ICat Ana/Cataphoric)	\"dessen\" \"dessen\"	(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"dessen\" \"dessen\"	(Case Gen)(ICat Cataphoric)	\"dem\" \"dem\"		(Case Dat)(ICat Ana/Cataphoric)	\"den\" \"den\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"		(Case Nom)(ICat Ana/Cataphoric)	\"deren\" \"deren\"		(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"derer\" \"derer\"		(Case Gen)(ICat Cataphoric)	\"der\" \"der\"		(Case Dat)(ICat Ana/Cataphoric)	\"die\" \"die\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"		(Case Nom)(ICat Ana/Cataphoric)	\"dessen\" \"dessen\"	(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"dessen\" \"dessen\"	(Case Gen)(ICat Cataphoric)	\"dem\" \"dem\"		(Case Dat)(ICat Ana/Cataphoric)	\"das\" \"das\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Num PL)	LU \"void\"	\"die\" \"die\"		(Case Nom)(ICat Ana/Cataphoric)	\"deren\" \"deren\"		(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"derer\" \"derer\"		(Case Gen)(ICat Cataphoric)	\"denen\" \"denen\"		(Case Dat)(ICat Ana/Cataphoric)	\"die\" \"die\"		(Case Acc)(ICat Ana/Cataphoric)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |der/die/das|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 551citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)ISRules\".*dies\" (ICat Pron-Stem)	\"es/\" (Case Nom)(Gender N)|(Case Acc)(Gender N) value ; (eben)dieses u. (eben)diesentry	(Manner Demonstr)	LU \"void\"	\"dies\" \"dies\"entry	(Manner Demonstr)	LU \"void\"	\"jen\" \"jen\"; ebenfalls: ebendieser, ebenjener" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |dieser/jener|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 555citation-forms(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender M)(Case Nom)word-forms(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender M)(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender F)(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender N)(ICat Demonstr-Pron.Art+Pron-Stem)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Demonstr)	LU \"void\"	\"derjenige\" \"derjenige\"		(Num SG)(Gender M)(Case Nom)	\"desjenigen\" \"desjenigen\"	(Num SG)(Gender M)(Case Gen)	\"demjenigen\" \"demjenigen\"	(Num SG)(Gender M)(Case Dat)	\"denjenigen\" \"denjenigen\"	(Num SG)(Gender M)(Case Acc)	\"diejenige\" \"diejenige\"		(Num SG)(Gender F)(Case Nom)	\"derjenigen\" \"derjenigen\"	(Num SG)(Gender F)(Case Gen)	\"derjenigen\" \"derjenigen\"	(Num SG)(Gender F)(Case Dat)	\"diejenige\" \"diejenige\"		(Num SG)(Gender F)(Case Acc)	\"dasjenige\" \"dasjenige\"		(Num SG)(Gender N)(Case Nom)	\"desjenigen\" \"desjenigen\"	(Num SG)(Gender N)(Case Gen)	\"demjenigen\" \"demjenigen\"	(Num SG)(Gender N)(Case Dat)	\"dasjenige\" \"dasjenige\"		(Num SG)(Gender N)(Case Acc)	\"diejenigen\" \"diejenigen\"	(Num PL)(Case Nom)	\"derjenigen\" \"derjenigen\"	(Num PL)(Case Gen)	\"derjenigen\" \"derjenigen\"	(Num PL)(Case Dat)	\"diejenigen\" \"diejenigen\"	(Num PL)(Case Acc);ebenso: derselbe u. selbe;!!!: adäquatere Lösung mit Aufteilung in Art+Pron-Stem+Pron-Suffix \"der+jen(+)ig+e\", \"des+jen(+)ig+en\" etc. (evtl. durch WFRule Art+Pron-Stem) wäre vorzuziehen; verlangte aber umfangreiche Spezifikation von Formativen, d.h. SPezifikation von Art und Pron-Suffix für jede einzelne Wortform." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |derselbe/derjenige|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Rel/Interrog-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 559, eigenen Regel, da teilw. (Case Gen) andere Formen als Artikel und Demonstrativpronomencitation-forms(ICat Rel-Pron)(Case Nom)word-forms(ICat Rel-Pron)(Case Nom)(ICat Rel-Pron)(Case Gen)(ICat Rel-Pron)(Case Dat)(ICat Rel-Pron)(Case Acc)paradigms(Cat Pron) ; Individually Added Features werden bei paradigms-restrictions nicht berücksichtigt (Manner Relative) o. (Gen M)(Num SG)entry	(Manner Relative)(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"		(Case Nom)	\"dessen\" \"dessen\"	(Case Gen)	\"dem\" \"dem\"		(Case Dat)	\"den\" \"den\"		(Case Acc)entry	(Manner Relative)(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"		(Case Nom)	\"deren\" \"deren\"		(Case Gen)	\"der\" \"der\"		(Case Dat)	\"die\" \"die\"		(Case Acc)entry	(Manner Relative)(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"		(Case Nom)	\"dessen\" \"dessen\"	(Case Gen)	\"dem\" \"dem\"		(Case Dat)	\"das\" \"das\"		(Case Acc)entry	(Manner Relative)(Num PL)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"deren\" \"deren\"	(Case Gen)	\"den\" \"den\"	(Case Dat)	\"die\" \"die\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |der/die/das|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS ";Duden 563citation-forms(ICat Rel-Pron)(Case Nom)word-forms(ICat Rel-Pron)(Case Nom)(ICat Rel-Pron)(Case Gen)(ICat Rel-Pron)(Case Dat)(ICat Rel-Pron)(Case Acc)paradigms(Cat Pron)entry	(Manner Relative)(Manner Interrog)(Gender M)(Gender F)	\"wer\" \"wer\"		(Case Nom)	\"wessen\" \"wessen\"	(Case Gen)	\"wem\" \"wem\"		(Case Dat)	\"wen\" \"wen\"		(Case Acc)entry	(Manner Relative)(Manner Interrog)(Gender N)	\"was\" \"was\"		(Case Nom)	\"wessen\" \"wessen\"	(Case Gen)	\"was\" \"was\"		(Case Dat)	\"was\" \"was\"		(Case Acc)	deleted-forms	(Case Dat) ; Duden 563: was im Dat nur umgangsspr. o. literarisch" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |wer/was|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 561; welcher ebenfalls interrrog.; Feature (Manner Interrog) individually added; zu Case Gen: Duden 561.1 u. 561.3 = Adj.Strong-Decl, sonst deklination wie \"dieser\"citation-forms(ICat Pron-Stem)		(ICat Pron-Suffix.Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Relative)	LU \"void\"	\"welch\" \"welch\"	deleted-forms	(Case Gen) ; Duden 561.1entry	(Manner Interrog)	LU \"void\"	\"welch\" \"welch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |welcher|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Indefinite-Pronoun|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 565, ; Gen SG Mask. u. Neutr. ebenfalls Strong-Decl, Duden 565.2; sonst Deklination wie \"dieser\"citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)paradigms(Decl Invar) ; Duden 565.3(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Indef)	LU \"void\"	\"all\" \"all\"entry	(Manner Indef)	LU \"void\" ; Duden 574	\"manch\" \"manch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |all/manch|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 567, Deklination wie \"dieser\", nur SGcitation-forms(ICat Pron-Stem)		(ICat Pron-Suffix.Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)paradigms(Gender M)(Gender F)(Gender N)ISRules\"(.*)ein\" (ICat Pron-Stem)		\"es/s\" (Gender N)(Case Nom)|(Gender N)(Case Acc) value ; eines u. eins, irgendeines u. irgendeinentry	(Manner Indef)	LU \"void\"	\"ein\" \"ein\"; ebenfalls: irgendein, mit Nom Mask SG, Nom + Akk Neutr SG je zweite, ungebeugte Form \"irgendein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |einer|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 568citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)(Case Nom); PL-Form als Zitatform wie in Duden R; in Duden WB Zitatform= \"etlich...\" resp. \"einig...\"word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Indef)	LU \"void\"	\"einig\" \"einig\"entry	(Manner Indef)	LU \"void\"	\"etlich\" \"etlich\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |einige/etliche|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS ";Duden 570citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender M)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender N); gemischte Deklination bei; ein jeder, eines jeden, einem jeden etc. Duden 570paradigms(Decl Strong)(Gender M)(Decl Strong)(Gender F)(Decl Strong)(Gender N)(Decl Mixed)(Gender M)(Decl Mixed)(Gender F)(Decl Mixed)(Gender N)entry	(Manner Indef)	LU \"void\"	\"jed\" \"jed\"; in Verbindung ein jeder, eines jeden etc. Adj. Mixed-Decl.; muß noch in Paradigma aufgenommen werden; jeglicher, jedweder = veraltend; falls dennoch aufnehmen, eigene IRule mit Suffixen (Num SG)(Decl-Strong) Genitiv (ICat en)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jeder|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 570, innerhalb der Pronomen idiosynkratisches Deklinationsparadigmacitation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jedermann)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jedermann)paradigms(Cat Pron)entry	(Manner Indef)	LU \"void\"	\"jedermann\" \"jedermann\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jedermann|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 571citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jemand)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jemand)paradigms(Cat Pron)ISRules\".*mand\" (ICat Pron-Stem)	\"es/s\" (ICat Pron-Suffix) value ; niemandes u. niemands\".*mand\" (ICat Pron-Stem)	\"e[mn]/\" (ICat Pron-Suffix) value ; jemandem u. jemand, niemanden u. niemandentry	(Manner Indef)	LU \"void\"	\"jemand\" \"jemand\"entry	(Manner Indef)	LU \"void\"	\"niemand\" \"niemand\"; eigene Deklinationsklasse, obwohl strong-Suffixe, da features für gender nicht erwünscht." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jemand/niemand|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 572citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat -)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)ISRules\"kein\" (ICat Pron-Stem)		\"es/s\" (Num SG)(Gender N)(Case Nom)|(Num SG)(Gender N)(Case Acc) valueentry	(Manner Indef)	LU \"void\"	\"kein\" \"kein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |kein|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 575, nur PLcitation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)paradigms(Num PL)entry	(Manner Indef)	LU \"void\"	\"mehrer\" \"mehrer\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |mehrere|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 578, Deklination wie Adj.citation-forms(ICat Pron-Stem)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender M)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender N)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num PL);    schwache Dekl. d.h. zwischen Def. Art. und Subst. nicht gebräuchlich, Duden S. 290, Fußnote 1;;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender M)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender F)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender N)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num PL)(Decl Mixed)paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)entry	(Manner Indef)	LU \"void\"	\"sämtlich\" \"sämtlich\"entry	(Manner Indef)	LU \"void\"	\"ander\" \"ander\" \"andr\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |saemtlich|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)entry	(Manner Demonstr)	LU \"void\" ; Duden 557	\"selbst\" \"selbst\"entry	(Manner Demonstr)	LU \"void\" ; Duden 557	\"selber\" \"selber\"entry	(Manner Indef)(Num SG)(Gender N)	LU \"void\" ; Duden 569	\"etwas\" \"etwas\"entry	(Manner Indef)(Num SG)(Gender N)	LU \"void\" ; Duden 569	\"nichts\" \"nichts\"entry	(Manner Indef)(Num SG)(Case Nom)	LU \"void\" ; Duden 573	\"man\" \"man\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Pron-Invar|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pers-Pron|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Refl-Pron|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives(ICat der/die/das)	_	(Case Nom)(ICat Ana/Cataphoric)	_	(Case Gen)(ICat Anaphoric)	_	(Case Gen)(ICat Cataphoric)	_	(Case Dat)(ICat Ana/Cataphoric)	_	(Case Acc)(ICat Ana/Cataphoric)(ICat Art+Pron-Stem)(Num SG)(Gender M)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num SG)(Gender F)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num SG)(Gender N)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num PL)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Demonstr-Pron|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Rel-Pron|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pron-Stem|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pron-Suffix|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"\" \"\"		(Case Nom)(ICat -)	\"er\" \"er\"	(Case Nom)(ICat er)	\"es\" \"es\"	(Case Gen)(ICat es)	\"en\" \"en\"	(Case Gen)(ICat en)	\"em\" \"em\" \"m\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"\" \"\"			(Case Nom)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Nom)(ICat es)	\"es\" \"es\"		(Case Gen)(ICat es)	\"en\" \"en\"		(Case Gen)(ICat en)	\"em\" \"em\" \"m\"		(Case Dat)	\"\" \"\"			(Case Acc)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Acc)(ICat es)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc); Deklination entspricht starker adjektivischer Deklination (Decl Strong); spezielle Features (evtl andere Benennung):; (ICat -) = substantivierter Gebrauch, Duden 547 (Pron.Poss), 572 (kein); (Gender M)(Case Nom)(ICat er), (Gender N)(Case Nom)(ICat es), (Gender N)(Case Acc)(ICat es) = normale starke Deklination; (Case Gen)(ICat es) = pronominale Deklination; (Case Gen)(ICat en) = adjektivische Deklination" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Strong|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num PL)	\"en\" \"en\" \"n\"	(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Weak|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Num PL)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc); = Adjective Mixed Declension" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Mixed|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Invar|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"	(Case Nom)\"s\" \"s\"	(Case Gen)\"\" \"\"	(Case Dat)\"\" \"\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-jedermann|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"		(Case Nom)\"es\" \"es\" \"s\"	(Case Gen)\"em\" \"em\" \"\"	(Case Dat)\"en\" \"en\" \"\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-jemand|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Adv|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Adv)word-forms(ICat Adv)entry	(Manner Modal)	LU \"void\"	\"sehr\" \"sehr\"entry	(Manner Temporal)	LU \"void\"	\"heute\" \"heute\"entry	(Manner Temporal)	LU \"void\"	\"noch\" \"noch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Adv|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Adv|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Prep|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Prep)word-forms(ICat Prep)entry	LU \"void\"	\"an\" \"an\"entry	LU \"void\"	\"auf\" \"auf\"entry	LU \"void\"	\"aus\" \"aus\"entry	LU \"void\"	\"bei\" \"bei\"entry	LU \"void\"	\"durch\" \"durch\"entry	LU \"void\"	\"für\" \"für\"entry	LU \"void\"	\"hinter\" \"hinter\"entry	LU \"void\"	\"in\" \"in\"entry	LU \"void\"	\"mit\" \"mit\"entry	LU \"void\"	\"neben\" \"neben\"entry	LU \"void\"	\"über\" \"über\"entry	LU \"void\"	\"unter\" \"unter\"entry	LU \"void\"	\"um\" \"um\"entry	LU \"void\"	\"von\" \"von\"entry	LU \"void\"	\"vor\" \"vor\"entry	LU \"void\"	\"zu\" \"zu\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Prep|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Prep|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Conjunct|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Conjunct)word-forms(ICat Conjunct)entry	LU \"void\"	\"und\" \"und\"entry	LU \"void\"	\"dass\" \"dass\"entry	LU \"void\"	\"zu\" \"zu\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Conjunct|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Conjunct|)) :MOD2-P T) NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"\" \"\"		(Case Nom)(ICat -)	\"er\" \"er\"	(Case Nom)(ICat er)	\"es\" \"es\"	(Case Gen)(ICat es)	\"en\" \"en\"	(Case Gen)(ICat en)	\"em\" \"em\" \"m\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"\" \"\"			(Case Nom)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Nom)(ICat es)	\"es\" \"es\"		(Case Gen)(ICat es)	\"en\" \"en\"		(Case Gen)(ICat en)	\"em\" \"em\" \"m\"		(Case Dat)	\"\" \"\"			(Case Acc)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Acc)(ICat es)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc); Deklination entspricht starker adjektivischer Deklination (Decl Strong); spezielle Features (evtl andere Benennung):; (ICat -) = substantivierter Gebrauch, Duden 547 (Pron.Poss), 572 (kein); (Gender M)(Case Nom)(ICat er), (Gender N)(Case Nom)(ICat es), (Gender N)(Case Acc)(ICat es) = normale starke Deklination; (Case Gen)(ICat es) = pronominale Deklination; (Case Gen)(ICat en) = adjektivische Deklination" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-Strong|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; linke, rechte, obere, untere, mittlere, oberste, äussere, äusserstecitation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Weak)(Num SG)(Gender M)(Case Nom)word-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat A-Suffix)(Decl Weak)paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)entry	\"link\" \"link\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Attributive-Only|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*000000000000000000000000000001111001111100000000001000000000000000000000000000000000000000000000000000000001110011111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 2 44 0 55 63 98 101 104) (0 1 4) (1 19 10 6 7 3 12) (4 5 17 21 13 14 15 18) (2 8 33 40 41) (8 9 11 16 20 22 23 24 25 26 27 28) (33 34) (41 42 43) (44 45 46 47 48 49 111 51 52 53 54) (55 56 59) (56 57 58) (59 60 61 62) (63 64 65 66 67 71 75 85 86 87 88 89 90 91) (67 68 69 70) (71 72 73 74) (75 76 77 78 79 80 81 82 83 84) (91 92 110 93 94 95 96 97) (98 99 100) (101 102 103) (104 105 106)) :COLLAPSED-SUBTREES (0 1 4 2 8 33 41 44 55 56 59 63 67 71 75 91 98 101 104))) #[WORD-FORMATION-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Derivation|)) :MOD2-P T) NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Prefixing|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Non-Detachable)(Cat V)	(RIRule No-Detachable-Prefix)|(IIRule No-Detachable-Prefix) >	2	(ICat V-Stem)WFSRules\"°(.*)/\\1\" (ICat V-Stem)\"(.*)/°\\1\" (WFCat V-Prefix)target(?IRule ?)	1 2	(ICat V-Stem)source-constraint1	\"ver\"(RIRule No-Detachable-Prefix)	2	\"änder\"entry	(Aux haben)	LU \"void\"	\"°veränder\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |Non-Detachable-Prefix|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |Detachable-Prefix|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Detachable)(RIRule No-Detachable-Prefix)	2	(ICat V-Stem)target(RIRule Detachable-Prefix)	separable	1	(ICat Detachable-Prefix)	2	(ICat V-Stem)source-constraint1	\"ab\"(RIRule No-Detachable-Prefix)	2	\"änder\"entry	(Aux haben)	LU \"void\"	\"ab\"	(ICat Detachable-Prefix)	\"änder\"	(ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |V_Regular|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Detachable)(IIRule No-Detachable-Prefix)	2	(ICat V-Stem)target(IIRule Detachable-Prefix)	separable	1	(ICat Detachable-Prefix)	2	(ICat V-Stem)source-constraint1	\"an\"(IIRule No-Detachable-Prefix)	2	\"b#ei#ss\"entry	(Aux haben)	LU \"void\"	\"an\"		(ICat Detachable-Prefix)	\"b#ei#ss\"	(ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |V_Irregular|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |V-Prefix|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified WFFormatives\"be\" \"be\"\"ent\" \"ent\"\"er\" \"er\"\"miss\" \"miss\"\"ver\" \"ver\"\"zer\" \"zer\"\"durch\" \"durch\"\"hinter\" \"hinter\"\"über\" \"über\"\"um\" \"um\"\"unter\" \"unter\"\"wider\" \"wider\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Non-Detachable|)) :MOD2-P T) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified WFFormatives\"ab\" \"ab\"\"an\" \"an\"\"auf\" \"auf\"\"aus\" \"aus\"\"bei\" \"bei\"\"ein\" \"ein\"\"fehl\" \"fehl\"\"los\" \"los\"\"nach\" \"nach\"\"vor\" \"vor\"\"wieder\" \"wieder\"\"zu\" \"zu\"\"zurecht\" \"zurecht\"\"durch\" \"durch\"\"hinter\" \"hinter\"\"über\" \"über\"\"um\" \"um\"\"unter\" \"unter\"\"wider\" \"wider\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Detachable||WFCat| . |To-V|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . V-T\o-V)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*11111111111111101111001111111111000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 15) (15 342) (342 384) (384 20) (20 21 32 35) (32 33 34) (35 36 37)) :COLLAPSED-SUBTREES (15 342 384 20 32 35))) #[KEY-WORDS-WINDOW ( :WINDOW-CONTENTS "pp = (Cat V)(Mod Part)(Temp Perf)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[TRANSFORMATIONS-WINDOW ( :WINDOW-CONTENTS "PPV-Inversion(VP PP V) -> (VP V PP)VV-Inversion(VP V-1 V-2) -> (VP V-2 V-1)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[PERIPHR-INFL-WINDOW ( :WINDOW-CONTENTS "Auxiliary-Perfect(Cat V)(Mod Ind)(Temp Pres) + pp = (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Perf)(Cat V)(Mod Ind)(Temp Impf) + pp = (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Plusq)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[PM-TEST-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[TEST-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[MESSAGE-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[CLASS-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . VP)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . PP+V)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "SYNTAX-TREE(VP (PP Pep NP) V)MODIFICATIONSV >TRANSFORMATIONSPPV-InversionEXAMPLEin das gras <beissen>in	(Cat Prep)das	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Acc)gras	(Cat N)(Gender N)(Num SG)(Case Acc)beissen	(Cat V)^(Form Passive)-" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . |[Prep+NP]+V|)) :MOD2-P T) NIL #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PIClass| . |Auxiliary|)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "SYNTAX-TREE(VP V V)MODIFICATIONSV >TRANSFORMATIONSVV-InversionPERIPHR-INFLAuxiliary-PerfectEXAMPLE<haben> pphaben (Cat V)pp (Cat V)(Aux haben)-EXAMPLE<sein> ppsein (Cat V)pp (Cat V)(Aux sein)-" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PIClass| . |Perfect|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 134 138) (134 135) (135 136) (138 139)) :COLLAPSED-SUBTREES (134 135 138))) #[CLITIC-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Prep|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Article|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"das\"	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Acc)(CElement Clit-Form)	\"s\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |das|)) :MOD2-P T) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"den\"	(Cat Art)(Manner Def)(Num SG)(Gender M)(Case Acc)(CElement Clit-Form)	\"n\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |den|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat V) {{\".*[^esz]\"}} + (CElement Pron.es-Clit-Form) = (Cat V), (CElement Pron.es-Full-Form)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |Verb+es|)) :MOD2-P T) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement an)	\"an\"	(Cat Prep)(CElement in)	\"in\"	(Cat Prep)(CElement von)	\"von\"	(Cat Prep)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Full-Form|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement an)	\"a\"(CElement in)	\"i\"(CElement von)	\"vo\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Clit-Form|)) :MOD2-P T) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "%separable + (CElement Conjunct.zu) + (Cat V)(Mod Inf)(Temp Pres) = (CElement Conjunct.zu), %separable + (Cat V)(Mod Inf)(Temp Pres); einzustudieren = zu einstudieren" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |zu+V-Separable|)) :MOD2-P T) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement es-Full-Form)		\"es\" (Cat Pron)(Pers 3rd)(Num SG)(Gender N)(CElement es-Clit-Form)		\"’s\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Pron|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement zu)	\"zu\" (Cat Conjunct)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Conjunct|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat V)(Aux haben)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.haben) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.haben)(Cat V)(Aux sein)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.sein) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.sein)(Cat V)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.werden) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.werden); gegessen zu haben = zu gegessen haben, gegangen zu sein = zu gegangen sein, gesehen zu werden = zu gesehen werden(Cat V)(Mod Inf)(Temp Pres), (CElement Conjunct.zu), (CElement Auxiliary.werden) = (CElement Conjunct.zu), (Cat V)(Mod Inf)(Temp Pres), (CElement Auxiliary.werden); essen zu werden = zu essen werden(Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.worden), (CElement Conjunct.zu)  = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.worden); gegessen worden zu sein = zu gegessen worden sein" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |zu+Complex_Inf|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement haben)	\"haben\" (Cat V)(Aux haben)(Mod Inf)(Temp Pres)(CElement sein)		\"sein\" (Cat V)(Aux sein)(Mod Inf)(Temp Pres)(CElement werden)	\"werden\" (Cat V)(Aux sein)(Mod Inf )(Temp Pres)(CElement worden)	\"worden\" (Cat V)(Aux sein)(Mod Part)(Temp Perf)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Auxiliary|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"der\"	(Cat Art)(Manner Def)(Gender F)(Num SG)(Case Dat)(CElement Clit-Form)	\"r\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |der|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |dem|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"dem\"	(Cat Art)(Manner Def)(Gender M)(Num SG)(Case Dat)(CElement Clit-Form)	\"m\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Masc|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"dem\"	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Dat)(CElement Clit-Form)	\"m\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Neut|)) :MOD2-P T) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat Prep) {\"an\", \"auf\", \"durch\", \"für\", \"hinter\", \"in\", \"über\", \"um\", \"unter\", \"vor\"} + (CElement Article.das.Clit-Form) = (Cat Prep), (CElement Article.das.Full-Form)(Cat Prep) {\"bei\", \"hinter\", \"über\", \"unter\", \"zu\"} + (CElement Article.dem.Masc.Clit-Form) = (Cat Prep), (CElement Article.dem.Masc.Full-Form)(Cat Prep) {\"bei\", \"hinter\", \"über\", \"unter\", \"zu\"} + (CElement Article.dem.Neut.Clit-Form) = (Cat Prep), (CElement Article.dem.Neut.Full-Form)(Cat Prep) {\"hinter\", \"über\", \"unter\"} +  (CElement Article.den.Clit-Form) = (Cat Prep), (CElement Article.den.Full-Form)(Cat Prep) {\"zu\"} +  (CElement Article.der.Clit-Form) = (Cat Prep), (CElement Article.der.Full-Form)(CElement Prep.Clit-Form) + (CElement Article.dem.Masc.Clit-Form) = (CElement Prep.Full-Form), (CElement Article.dem.Masc.Full-Form)(CElement Prep.Clit-Form) + (CElement Article.dem.Neut.Clit-Form) = (CElement Prep.Full-Form), (CElement Article.dem.Neut.Full-Form)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |Prep+Article|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*0000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 2 3 21 22 24 30 14 19 23) (3 4 6 25 26) (2 16 17) (26 27 28)) :COLLAPSED-SUBTREES (3 2 26)))) :PM-DEFINER #[DEFINITION ( :UNITS-TO-SAVE NIL :LAST-SOURCES NIL))