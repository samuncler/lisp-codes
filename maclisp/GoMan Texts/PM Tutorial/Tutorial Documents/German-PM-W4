#[WM-DOCUMENT ( :TOP-LEVEL-WINDOWS (#[LEXICAL-CHARACTER-SET-WINDOW ( :WINDOW-CONTENTS "character-sort-orderA a ä Å À åbc Cd DE e É é èfgh HI i ; íjklmn NO o ö Ö Øpqrs St TU u üvwxyzß!#_-°sequence-sort-orderae äoe öue üss ß" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[SURFACE-CHARACTER-SET-WINDOW ( :WINDOW-CONTENTS "character-sort-orderA a äbcdefghijklmnO o öpqrstU u üvwxyzß-’sequence-sort-orderae äoe öue üss ß" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[FEATURE-DOMAINS-WINDOW ( :WINDOW-CONTENTS "Cat	(N         A         V         Art         Pron         Adv         Prep         Conjunct         Interj)Manner	(Def          Demonstr          Indef          Interrog          Local          Modal          Personal          Poss          Refl          Relative          Rezipr          Temporal)Degree	(Pos         Comp         Super)Decl	(Undeclined         Invar         Strong         Mixed         Weak)Mod	(Inf         Ind         Conj-1         Conj-2         Imper         Part)Temp	(Pres         Impf         Perf)Pers	(1st         2nd         3rd)Num	(SG         PL)Gender	(M         F         N)Case	(Nom         Gen         Dat         Acc)Aux	(sein         haben)Var	(Standard         Foreign         Scient         Pop)Lexeme	(a         b         c         d)ICat	(A-Stem         A-Suffix         Adv         Anaphoric         Ana/Cataphoric         Art-Stem         Art-Suffix         Art+Pron-Stem         Cataphoric         Conjunct         Decl-jedermann         Decl-jemand         Decl-Strong         Def-Article         Degr-Mark         der/die/das         Detachable-Prefix         Demonstr-Pron         Foreign         Interj         N-Stem         N-Suffix         Pers-Pron         Prep         Pron-Stem         Pron-Suffix         Reg         Refl-Pron         Rel-Pron         V-Irregular         V-Prefix         V-Regular         V-Stem         V-Suffix         E         EN         ER         ES         S         -         en         er         es)RIRule	(N-Regular         ES/E         S/E         [E]S/[E]N         S/-         [E]S/ER         S/S         [E]N/[E]N         -/E         -/-         -/[E]N         -/S         Nominalized_A         Gender-M         Gender-F         Gender-N         Foreign         S/EN_Replace_Foreign_Suffix         -/EN_Replace_Foreign_Suffix         SG_S/PL_Foreign_Suffix         SG_-/PL_Foreign_Suffix         A-Regular         A-Regular-Undeclined-e-Optional         A-Two_Comp_Forms         A-Invariable         A-Predicative-Only         A-Attributive-Only         A-Foreign-Stem-er         No-Detachable-Prefix         Detachable-Prefix         Adv         Prep         Conjunct         Interj)IIRule	(N-Irregular         ENS/EN         A-Irreg         No-Detachable-Prefix         Detachable-Prefix         sein         Pron-Invar         saemtlich         mehrere         kein         jemand/niemand         jedermann         jeder         einige/etliche         einer         all/manch         Indefinite-Pronoun         welcher         wer/was         Rel/Interrog-Pronoun         derselbe/derjenige         dieser/jener         der/die/das         Demonstr-Pronoun         Possessive-Pronoun         Reflexive-Pronoun         Personal-Pronoun         Indefinite-Article         Definite-Article)WFCat	(Derivation         To-N         To-A         To-V         To-Adv         N-To-N         A-To-N         V-To-N         N-To-A         A-To-A         V-To-A         Adv-To-A         N-To-V         A-To-V         V-To-V         N-To-Adv         A-To-Adv         V-To-Adv         Conversion         Prefixing         Suffixing         Prefixing+Conversion         Prefixing+Suffixing         Compounding         N-Comp         A-Comp         V-Comp         Adv-Comp         N+N         A+N         V+N         Adv+N         N+A         A+A         V+A         N+V         A+V         Adv+V         N-Prefix         A-Prefix         V-Prefix         N-Suffix         A-Suffix         V-Suffix         Adv-Suffix         Umlaut         No-Umlaut         ge-Participle         Hyphen         Detachable         Non-Detachable         Pseudo-Part         Linking-Element         Pre-+Suffixing         With-Linking-Element         With-Impf-Stem         With-PL-Form         Foreign         German)RWFRule	(A_Comparative         A_Positive         A_Positive+N         A_Superlative+N         A+A_No-Hyphen         A+Adv         A+Hyphen+A         Ablaut-Stem         Adv+Adv         Adv+ig         Adv+Noun         Adv+Prep         Detachable-Prefix         Foreign-Suffix         ge+_         ge+_+e         Impf-Stem         Infinitive         Linking-Element         N+Adv         N+A_No_Linking_Element         N+e+A         N+es+A         N+[e]n+A         N+ens+A         N+er+A         N+s+A         N+N_No_Linking_Element         N+e+N         N+[e]n+N         N+ens+N         N+er+N         N+es+N         N+s+N         No-Umlaut         Non-Detachable-Prefix         Part-Perf         Part-Pres         PL-Form+Suffix         Prefix         Prep+Adv         Pres-Stem         Pseudo-Participles         Suffixing         Target_Gender_F         Target_Gender_M         Target_Gender_N         Target_Detachable         Umlaut         V_Detachable_Pref         V_Detachable_Prefix         V_No_Detachable_Pref         V_No_Detachable_Prefix         V_Irregular         V_Regular         V+e+A         V+A_No_Linking_Element         V+e+N         V+N_No_Linking-Element         Target_S/-         Target_ES/E         N+s+Suffix         N+Suffix         A+er+Suffix)WFSRule	(Delete-No-ge-participle-character         Compound-fff/ff         Compound-lll/ll         Compound-mmm/mm         Compound-nnn/nn         Compound-ppp/pp         Compound-rrr/rr         Compound-ttt/tt         en+lich/ent+lich)ISRule	(Stressed-e/surface-e         Delete_Special_Part_2_Character         Delete_ge_Part-2         Verbs_e-Deletion_Stem         Verbs_Return_Imper-Exeption         Verbs_e-Deletion_Imper         Verbs_Imper-Exception         Verbs_e-Deletion_Suffix         Verbs_s-Deletion         Verbs_Delete_Avoid_Insertion_Character         Verbs_e-Insertion         Replace-D/d         Replace-T/t         Replace-SCH/sch         Adj_Super_Insert-e_after_Vow+h         Adj_Super_Insert-e_after_Diphth         Adj_Super_Insert-e_after_[dt]         Adj_Super_Insert-e_after_Cons+sch         Adj_Super_Insert-e_after_Vow+sch         Adj_Super_Avoid_Insert-e_With_isch         Adj_Super_Insert-e_after_[sxz]         Adj_Comp_Delete-e_e[ln]-Stem         Adj_Delete-e_e-Stem         Adj_Delete-e_Vow+er-Stem         Adj_Delete-e_el-Stem         N_Double_Dat_SG_Form         N_Double_Gen_SG_Form         N-e-Deletion_Dat_SG_after_Vow+h         N-e-Deletion_Dat_SG_after_Diphth         N_e-Deletion_after_e[lrn]-Stem         N_e-Deletion_after_e-Stem         N_Change_U/u         N_Change_O/o         N_Change_A/a         N_PL_Umlaut_U/ue         N_PL_Umlaut_O/oe         N_PL_Umlaut_A/ae)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[FEATURE-DEPENDENCIES-WINDOW ( :WINDOW-CONTENTS "(Cat V)	demands	Aux(Cat N)	demands	Gender" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[SPELLING-RULES-WINDOW ( :WINDOW-CONTENTS ";===================================================================; Nouns;===================================================================(Cat N);-------------------------------------------------------------------; Umlaut;-------------------------------------------------------------------	(ISRule N_PL_Umlaut_A/ae)	\"(.*)A(.*)/\\1ä\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_PL_Umlaut_O/oe)	\"(.*)O(.*)/\\1ö\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_PL_Umlaut_U/ue)	\"(.*)U(.*)/\\1ü\\2\" (ICat N-Stem)		(ICat N-Suffix)(Num PL)	(ISRule N_Change_A/a)	\"(.*)A(.*)/\\1a\\2\" (ICat N-Stem)	(ISRule N_Change_O/o)	\"(.*)O(.*)/\\1o\\2\" (ICat N-Stem)	(ISRule N_Change_U/u)	\"(.*)U(.*)/\\1u\\2\" (ICat N-Stem);-------------------------------------------------------------------; e-Delition;-------------------------------------------------------------------	(ISRule N_e-Deletion_after_e-Stem)	\".*e\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix); Ende-n (PL) Ende-s (Gen) Ende (Dat), See-n (PL) See-s (Gen) See (Dat), Bote-n, Rose-n, Allee-n (auch substantivierte Adj.: Beamte-n ???)	(ISRule N_e-Deletion_after_e[lrn]-Stem)	\".*[^ie]e[lrn]\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix)^(Decl Strong)^(Decl Weak); Vogels, Vetter (Dat SG), Bauern, Amseln, Federn; Duden ; Problem: Teer, Kamel, Schein, Tier (vs Asien, Spaniel); verlangt Einführung lexical character é für betontes e.	(ISRule N-e-Deletion_Dat_SG_after_Diphth)	\".*[aäe][iu]\" (ICat N-Stem)	\"e/\" (ICat N-Suffix)(Case Dat)(Num SG); Bau, Mai, Ei, Duden 380.2, Pfeffer 79, 2.1.2.	(ISRule N-e-Deletion_Dat_SG_after_Vow+h)	\".*[aäeioöuü]h\" (ICat N-Stem)	\"e/\" (ICat N-Suffix)(Case Dat)(Num SG); Schuh, Reh, Floh, Duden 380.2, Pfeffer 79, 2.1.2.;-------------------------------------------------------------------; Double Gen SG & Dat SG Forms;-------------------------------------------------------------------	(ISRule N_Double_Gen_SG_Form)	\".*[^sxz]\" (ICat N-Stem)		\"es/s\" (ICat N-Suffix)(Case Gen)(Num SG) value; bildes u. bilds, staates u. staat, tages u. tags,; nicht bisses, kreuzes, reflexes, Duden 379.1	(ISRule N_Double_Dat_SG_Form)	(ICat N-Stem)				\"e/\" (ICat N-Suffix)(Case Dat)(Num SG) value; bilde u. bild, staate u. staat, tage u tag;===================================================; adjectives;===================================================(Cat A);-------------------------------------------------------------; Delete-e Stem;-------------------------------------------------------------	(ISRule Adj_Delete-e_el-Stem)	\"(.*)e(l)/\\1\\2\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark); nobel/nobler, noble, nobles, nobler usw. Duden 478.1, 513	(ISRule Adj_Delete-e_Vow+er-Stem)	\"(.*[ae]u)e(r)/\\1\\2\" (ICat A-Stem)	\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark);teuer/teure, teurer; sauer/saures, saurere usw., Duden, 478.2, 513 (in Muthmann keine Adj auf -aier, -äuer, -eier)	(ISRule Adj_Delete-e_e-Stem)	\"(.*)e/\\1\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark); weise/weis-er, flügg-e/flügg-er, large/larg-es; böse o. bös, trübe o. trüb siehe (RIRule A-Regular-Undeclined-e-Optional	(ISRule Adj_Comp_Delete-e_e[ln]-Stem)	\"(.*[^ie])e([rn])/\\1\\2\" (ICat A-Stem)	\"e.*\" (ICat Degr-Mark)(Degree Comp) value; finstereres u. finstreres, trockenere u. trocknere usw. Duden 513. (nicht leerere, schwérere);-------------------------------------------------------------; Insert-e Superlative;-------------------------------------------------------------	(ISRule Adj_Super_Insert-e_after_[sxz])	\".*[sxz]k?\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); süsseste, laxeste, spitzeste, schwärzeste, liebloseste, brüskeste usw. Duden 518. Blatt Adj-Superlativ; in Muthmann alle Adj. auf sxz resp. sk einsilbig o. auf letzer Silbe betont; Ausnahme synchron gesehen \"unechte\" Derivate unnütz u. naseweis (ebenfalls auf \"est\"); Ausnahme: gross/grösste	(ISRule Adj_Super_Avoid_Insert-e_With_isch)	\"(.*i)sch/\\1SCH\" (ICat A-Stem); heimiSCH/heimisch, veräterisch/verräteriSCH	(ISRule Adj_Super_Insert-e_after_Vow+sch)	\".*[aeiou]r?sch|.*friSCH\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; rascheste u. raschste, forscheste u. forschste; Duden 518; Super auf -schst (komischste) mit SCH, da allermeiste Bildungen mit Suffix isch (Ausnahme frisch!!!), d.h. special lexical character kann automatisch eingeführt werden	(ISRule Adj_Super_Insert-e_after_Cons+sch)	\".*[^aeiour]sch\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); falscheste, deutscheste; im Gegensatz zu Duden 518 sind hier Formen ohne e nicht möglich (vgl Blatt Adj. Super. sch)	(ISRule Adj_Super_Insert-e_after_[dt])	\".*[dt]\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super); bunteste, rundeste, tristeste, breiteste, werteste, kälteste, eleganteste ; exceptions: all stems not accentuated on last sillable (DUDEN 518), viz. Partizipien-I u. Partizipien-II auf et, von Verben mit Stamm auf -er, -el, und -ig (siehe Blatt Adj. Superl. -t); > automatische Einführung special characters D und T. Ausnahme: manuell bei töricht	(ISRule Adj_Super_Insert-e_after_Diphth)	\".*[ae][iu]\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; neueste u. neuste, schlaueste u. schlauste, freieste u. freiste; Duden 518; keine Bsp auf ai o. äu	(ISRule Adj_Super_Insert-e_after_Vow+h)	\".*[aäieouü]h\" (ICat A-Stem)		\"st/est\" (ICat Degr-Mark)(Degree Super) value; zäheste u. zähste, froheste u. frohste, früheste u. frühste, rauheste u. rauhste; Duden 518 ; keine Wörter auf ö	(ISRule Replace-SCH/sch)	\"(.*)SCH/\\1sch\" (ICat A-Stem); friSCH/frisch, heimiSch/heimiSCH	(ISRule Replace-T/t)	\"(.*)T/\\1t\" (ICat A-Stem); törichT/töricht, belebT/belebt	(ISRule Replace-D/d)	\"(.*)D/\\1d\" (ICat A-Stem); fesselnD/fesselnd;===================================================; Verben;===================================================(Cat V)	(ISRule Verbs_e-Insertion)	\".*[bdfgkpst][mn]|.*[dt]|.*ch[mn]\" (ICat V-Stem)		\"([st].*)/e\\1\" (ICat V-Suffix); redst/redest, rettt/rettet, atmest, rechnet usw, Duden 193	(ISRule Verbs_Delete_Avoid_Insertion_Character)	(ICat V-Stem)		\"!(s?t.*)/\\1\" (ICat V-Suffix); siehe ISRule Avoid-e-Insertion bei unreglmäßigen Verben 	(ISRule Verbs_s-Deletion)	\".*[sxz]\" (ICat V-Stem)			\"st/t\" (ICat V-Suffix); ras-t, feix-t, hetz-t usw. Duden 194	(ISRule Verbs_e-Deletion_Suffix)	\".*[^ei]e[lr]\" (ICat V-Stem)		\"e(nd|[nt]|st)/\\1\" (ICat V-Suffix); sammel-n, änder-n; Duden 195, 316; Problemfälle, mit é zu schreiben: (ver-,fort-)schwelen, (ab-,fort-)scheren, (über-,unter-)queren, (be-)erschweren; Problemfälle, mit eigener, individueller ISRule resp. WFSRule: feiern, leiern, verschleiern, meiern (nicht= kreieren, alineieren, enukleieren	(ISRule Verbs_Imper-Exception)	\".*ch[mn]|.*[bdfgkpst][mn]|.*[^ei]e[lr]\"	\"e/e!\" (ICat V-Suffix)(Mod Imper)(Num SG); rechne!, atme!, sammle!, ändere! Duden 290	(ISRule Verbs_e-Deletion_Imper)	(ICat V-Stem)			\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) value; bleibe u. bleib, spiele u. spiel etc. Duden 290	(ISRule Verbs_Return_Imper-Exeption)	(ICat V-Stem)			\"e!/e\" (ICat V-Suffix)(Mod Imper)(Num SG)	(ISRule Verbs_e-Deletion_Stem)	\"(.*[^ei])e(l)/\\1\\2\" (ICat V-Stem)	\"e\" (ICat V-Suffix); sammle, Duden 195 Fußnote, evtl mit value sammle und sammele resp. ändere und ändre.;;;    	(ISRule Verbs_e-Deletion_afer_Vow);;;    	\".*[aeiou]h?\" (ICat V-Stem)		\"en/n\" (ICat V-Suffix) value;;;    ; schreien u. schrein, fliehen und fliehn; Duden 195 (weglassen, da nicht Standard?)	(ISRule Delete_ge_Part-2)	\"ge/\" (ICat V-Prefix)		\"(.*)°(.*)/\\1\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)	(ISRule Delete_Special_Part_2_Character)	\"(.*)°(.*)/\\1\\2\" (ICat V-Stem)(ISRule Stressed-e/surface-e)\"(.*)é(.*)/\\1e\\2\" (ICat V-Stem)|(ICat A-Stem)|(ICat N-Stem); schér/scher; kamél/kamel, schwér/schwer; (WFCat To-A)(WFSRule en+lich/ent+lich)\"(.*[^ei]en)/\\1t\"	\"lich\" (WFCat A-Suffix); offen/öffentlich, versehen/versehentlich, wissen/wissentlich(WFSRule Delete-No-ge-participle-character)\"°(.*)/\\1\" (ICat V-Stem)	(WFCat N-Suffix)|(WFCat V-Suffix)|(WFCat A-Suffix)(WFSRule Compound-fff/ff)\"(.*[aeiouAOU#]f)f/\\1\"		\"f[aeiouAOU#].*\"; schiff+fahrt/schiffahrt(WFSRule Compound-lll/ll)\"(.*[aeiouAOU#]l)l/\\1\"		\"l[aeiouAOU#].*\"; roll+laden/rolladen(WFSRule Compound-mmm/mm)\"(.*[aeiouAOU#]m)m/\\1\"		\"m[aeiouAOU#].*\"; *stimm+messer/stimmesser ???(WFSRule Compound-nnn/nn)\"(.*[aeiouAOU#]n)n/\\1\"		\"n[aeiouAOU#].*\"; brenn+nessel/brennessel(WFSRule Compound-ppp/pp)\"(.*[aeiouAOU#]p)p/\\1\"		\"p[aeiouAOU#].*\"; krepp+papier/kreppapier(WFSRule Compound-rrr/rr)\"(.*[aeiouAOU#]r)r/\\1\"		\"r[aeiouAOU#].*\"; *geschirr+rand/geschirrand ???(WFSRule Compound-ttt/tt)\"(.*[aeiouAOU#]t)t/\\1\"		\"t[aeiouAOU#].*\"; ballett+tänzer/ballettänzer" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[FUNCTIONS-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P NIL) #[INFLECTION-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(#[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . V)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Regular|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . N)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"ge\" \"ge\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Irregular|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Imper)(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; Return e-Insertion by General ISRUle with Ind. Pres mit Umlaut Duden 209.1\".*#[AEx]..#.*t\" (ICat V-Stem)	\"et/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ;  t-Deletion: brät, gilt, hält\".*#[AEx]..#.*st\" (ICat V-Stem)	\"est/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; st-Deletion: du birst,\".*#[AEx]..#.*[dt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Num SG) ; brätst, lädst, lädt, giltst; e-Deletion-Umlaut-Imper Duden 290\".*#[ExÖ]..#.*\" (ICat V-Stem)		\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) ; nimm, brich, lisch; CONSONAT-Modifications:\"(.*b#iAe#t)t/\\1\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; bitten/bat/bäte/gebeten\"(.*f#Aya#l)l/\\1\" (ICat V-Stem)			(Temp Impf) ; fallen/fiel/fiele\"(.*g#eia#)h/\\1ng\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gehen/ging/gegangen\"(.*k#oAo#m)m/\\1\" (ICat V-Stem)			(Temp Impf) ; (be)komm/(be)kam\"(.*b#AUa#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; backen/buk\"(.*sch#aUa#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; (er)schaff/(er)schuf/(er)schüf\"(.*schr#EAo#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; (er)schrecken/(er)schrak/(er)schräke\"(.*s#yOo#)d/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sieden/sott/sötte/gesotten\"(.*s#iAe#)tz/\\1ss\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sitzen/sass/sässe/gesessen\"(.*st#eåa#)h/\\1nd\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; stehen/stand/stände/gestanden (verstehen etc.)\"(.*tr#EAo#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; treffen/traf\"(.*t#uAa#)/\\1t\" (ICat V-Stem)			(Temp Impf) ; tun/tat/täte (vertun)\"(.*z#yOo#)h/\\1g\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; ziehen/zog/gezogen\"(.*br#iAa#)ng/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; bringen/brachte/gebracht\"(.*d#eAa#)nk/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; denken/dachte/gedacht\"(.*tr#EAe#)t/\\1tt\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*n#EAo#)hm/\\1mm\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)|(Mod Part)(Temp Perf)\"(.*#ei#)[dt]/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gleiten/glitt/geglitten, leiden/litt/gelitten\"(.*#ei#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; greifen/griff/gegriffen, kneifen/kniff\"(.*s#AU#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; saufen/soff/gesoffen (besaufen etc.)\"(.*m#öOo#)g/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; (ver)mögen/mochte/möchte/gemocht; modal verbs (& bringen, denken): delete suffix 1st & 3rd pers. SG Ind Pres: darfe/darf, kanne/kann\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\".*/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG); modal verbs: change irregular imp. suffixes to regular suffixes; durf/durfte, konnst/konntest etc.\".*m#üUu#ss|.*w#iUu#ss\" (ICat V-Stem)		\"t/st\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) ; s deleted by general ISRule\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"([^e].*)/te\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"(e.*)/t\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"/te\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG); modal verbs (& bringen, denken): replace irregular part-perf suffixe by regular suffixe; gedurfen/gedurft etc.\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*|.*br#iAa#ch|.*d#eAa#ch\" (ICat V-Stem)		\"en/t\" (Temp Perf); mögen/mochte\"möchte; VOWEL-Modifications; Umlaut Ind-Pres (+Imper SG):\"(.*)#A..#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#A[uU]#(.*)/\\1äu\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#[EÖ]..#(.*)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*)#x..#(.*)/\\1ie\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*st)#oyo#(ss)/\\1ö\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ; stosse stösst;modal verbs ablaut Ind Pres\"(.*d)#üUu#(rf)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; dürfen/darf\"(.*)#öOo#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; mögen/mag, können/kann\"(.*m)#üUu#(ss)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; müssen/muss\"(.*w)#ooo#(ll)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wollen/will\"(.*w)#iUu#(ss)/\\1ei\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wissen/weiss; Ind Impf + Conj-2 + Part-2\"(.*)#ei#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf)\"(.*)#Ei#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf);Impf + Conj-2\"(.*)#.i.#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)\"(.*)#.y.#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; lassen/liess\"(.*)#Au#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; laufen/lief; Impf only\"(.*)#.[AÅå].#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)|(Temp Perf) ; saufen/soff, schnauben/schnob\"(.*)#.[OØ].#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#.U.#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf); Conj-2\"(.*sch)#EAo#(lt)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; schelten/schölte\"(.*schw)#öØo#(r)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value ; schwören/schwüre (neben schwöre DUDEN p.140)\"(.*)#.A.#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; saufen/söffe, schnauben/schnöbe\"(.*)#.[OØ].#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.U.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.å.#(r[bf])/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; stürbe, verdürbe, würbe, würfe; ≠ stände-stünde, hälfe-hülfe\"(.*)#.[Åå].#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value\"(.*)#.Å.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; begänne u. begönne\"(.*)#.å.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; hälfe u. hülfe, stände u. stünde; Part-2 only\"(.*)#..a#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..o#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..u#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..e#(.*)/\\1e\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf); ALL OTHER TEMP AND MOD\"(.*)#[aA]..#(.*)/\\1a\\2\" (ICat V-Stem) ; fragen, blase\"(.*)#[aA][uU]#(.*)/\\1au\\2\" (ICat V-Stem) ; laufen, saufen, schnauben (gelaufen also (Mod Part)(Temp Perf)!!)\"(.*)#[eEx]..#(.*)/\\1e\\2\" (ICat V-Stem) ; bewegen, bersten, befehlen\"(.*)#[eE]i#(.*)/\\1ei\\2\" (ICat V-Stem) ; reissen, bleiben\"(.*)#y..#(.*)/\\1ie\\2\" (ICat V-Stem) ; biegen\"(.*)#Ö..#(.*)/\\1ö\\2\" (ICat V-Stem) ; löschen\"(.*)#([äioöuü]).*#(.*)/\\1\\2\\3\" (ICat V-Stem) ; gären, beginnen, kommen, schwören, rufen, küren; Return e-Insertion by General ISRule with Impf. sing. Duden 209.1\".*[^rst][dt]\" (ICat V-Stem)	\"e(st)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Impf) ; botst, fandst, aber barstest, sottest, hattest (wurdest); e-Insertion resp. s-Deletion 2 Pers. Sing. Ind. Impf. Duden 209.2\".*[sz]\" (ICat V-Stem)		\"t/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; bliesest u. bliest\".*sch\" (ICat V-Stem)		\"st/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; droschest, droschst, wuschest, wuschst; e-Delition 2. Pers SG u. PL Conj-2, Duden 210\".*[äöü].*[sxz]\" (ICat V-Stem)	\"es?(t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; sässet und sässt, wüchset u. wüchst\".*[äöü].*[^sxzdt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; trügest u. trügst, sänget u. sängt; optional e-deletion Part-2 .*ieen/.*ien (gespie[e]n)\".*ie\" (ICat V-Stem)		\"en/n\" (Mod Part)(Temp Perf) value; Individual\"(.*)tu\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix)^(Mod Conj-1) ; (ver-, ab-)tuen/tun\"(.*)ta\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix) ; (ver-, ab-)getaen/getan\"ge\"	\"ess/gess\" (ICat V-Stem)	(Mod Part)(Temp Perf) ; gegessen\"(.*)hiess/\\1heiss\" (ICat V-Stem)	(Mod Part)(Temp Perf) ; geheissen, (verheissen)\".*stand|.*tat\" (ICat V-Stem)			\"t/et\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num PL) ; (ver)standt/(ver)standet, tatet;;;    entry	(Aux haben)	LU \"void\";;;    	\"°bef#xÅo#hl\" \"befehl\" \"befiehl\" \"befahl\" \"befähl\" \"beföhl\" \"befohl\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°befl#ei#ss\" \"befleiss\" \"befliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°beg#iÅo#nn\" \"beginn\" \"begann\" \"begänn\" \"begönn\" \"begonn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#AUa#ck\" \"back\" \"bäck\" \"buk\" \"bük\";;;    	ISRules;;;    	\"bäck/back\"	(Mod Ind)(Temp Pres)(Num SG) value ; bäckst u. backst, bäckt u. backt;;;    	\"b[uü]k/back\"	\"/te\" (Pers 1st)(Num SG)|(Pers 3rd)(Num SG) value ; buk u. backte;;;    	\"b[uü]k/back\"	\"e?st/test\" value ; bukst u. backtes, bük(e)st u. backtest;;;    	\"b[uü]k/back\"	\"en/ten\" value ; buken u. backten, büken u. backten;;;    	\"b[uü]k/back\"	\"e?t/tet\" value ; bukt u. backtet, bük(e)t u. backten;;;    	\"bük/back\"	\"e/te\" value ; büke u. backte;;;    entry	(Aux haben)	LU \"void\"	\"b#ei#ss\" \"beiss\" \"biss\";;;    entry	(Aux haben)	LU \"void\";;;    	\"b#EAo#rg\" \"berg\" \"birg\" \"barg\" \"bärg\" \"borg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"b#EAo#rst\" \"berst\" \"birst\" \"barst\" \"bärst\" \"borst\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°bew#eOo#g\" \"beweg\" \"bewog\" \"bewög\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"b#yOo#g\" \"bieg\" \"bog\" \"bög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#yOo#t\" \"biet\" \"bot\" \"böt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#iAu#nd\" \"bind\" \"band\" \"bänd\" \"bund\" \"bünd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"b#iAe#tt\" \"bitt\" \"bat\" \"bät\" \"bet\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"bl#Aya#s\" \"blas\" \"bläs\" \"blies\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"bl#Ei#b\" \"bleib\" \"blieb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"bl#ei#ch\" \"bleich\" \"blich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"br#Aya#t\" \"brat\" \"brät\" \"briet\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"br#EAo#ch\" \"brech\" \"brich\" \"brach\" \"bräch\" \"broch\" \"bruch\" \"brüch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"dr#EOo#sch\" \"dresch\" \"drisch\" \"drosch\" \"drösch\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"dr#iAu#ng\" \"dring\" \"drang\" \"dräng\" \"drung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#Aia#ng\" \"empfang\" \"empfäng\" \"empfing\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#xÅo#hl\" \"empfehl\" \"empfiehl\" \"empfahl\" \"empfähl\" \"empföhl\" \"empfohl\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°empf#iAu#nd\" \"empfind\" \"empfand\" \"empfänd\" \"empfund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"#EAe#ss\" \"ess\" \"iss\" \"ass\" \"äss\" \"gess\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"f#AUa#hr\" \"fahr\" \"fähr\" \"fuhr\" \"führ\" \"fahr\" \"fahrt\" \"fährt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"f#Aya#ll\" \"fall\" \"fäll\" \"fiel\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#Aia#ng\" \"fang\" \"fäng\" \"fing\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#EOo#cht\" \"fecht\" \"ficht\" \"focht\" \"föcht\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"f#iAu#nd\" \"find\" \"fand\" \"fänd\" \"fund\" \"fünd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"fl#EOo#cht\" \"flecht\" \"flicht\" \"flocht\" \"flöcht\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"fl#yOo#g\" \"flieg\" \"flog\" \"flög\" \"flug\" \"flüg\";;;    ;;;    entry	(Aux sein)(Aux haben)	LU \"void\";;;    	\"fl#yOo#h\" \"flieh\" \"floh\" \"flöh\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"fl#yOo#ss\" \"fliess\" \"floss\" \"flöss\" \"fluss\" \"flüss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"fr#EAe#ss\" \"fress\" \"friss\" \"frass\" \"fräss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"g#äOo#r\" \"gär\" \"gor\" \"gör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°geb#äAo#r\" \"gebär\" \"gebier\" \"gebar\" \"gebor\";;;    	ISRules;;;    	\"gebär/gebier\"		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) value;;;    ;;;    	\"gebär/gebier\"		\"\" (Mod Imper)(Num SG) value;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#EAe#b\" \"geb\" \"gib\" \"gab\" \"gäb\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°ged#Ei#h\" \"gedeih\" \"gedieh\";;;    entry	(Aux sein)	LU \"void\"	\"g#eia#h\" \"geh\" \"ging\" \"gang\" \"gäng\";;;    entry	(Aux sein)	LU \"void\";;;    	\"°gel#iAu#ng\" \"geling\" \"gelang\" \"geläng\" \"gelung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#EÅo#lt\" \"gelt\" \"gilt\" \"galt\" \"gält\" \"gölt\" \"golt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°gen#eAe#s\" \"genes\" \"genas\" \"genäs\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°gen#yOo#ss\" \"geniess\" \"genoss\" \"genöss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°gesch#xAe#h\" \"gescheh\" \"geschieh\" \"geschah\" \"geschäh\";;;    	deleted-forms	(Pers 1st);;;    			(Pers 2nd);;;    entry	(Aux haben)	LU \"void\";;;    	\"°gew#iÅo#nn\" \"gewinn\" \"gewann\" \"gewänn\" \"gewönn\" \"gewonn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"g#yOo#ss\" \"giess\" \"goss\" \"göss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gl#ei#ch\" \"gleich\" \"glich\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"gl#ei#t\" \"gleit\" \"glitt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gl#iOo#mm\" \"glimm\" \"glomm\" \"glömm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gr#AUa#b\" \"grab\" \"gräb\" \"grub\" \"grüb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"gr#ei#f\" \"greif\" \"griff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Aya#lt\" \"halt\" \"hält\" \"hielt\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"h#äia#ng\" \"häng\" \"hing\" \"hang\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#eOo#b\" \"heb\" \"hob\" \"höb\" \"hub\" \"hüb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Ei#ss\" \"heiss\" \"hiess\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"h#Eåo#lf\" \"helf\" \"hilf\" \"half\" \"hälf\" \"hülf\" \"holf\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kies\" \"kies\" \"kor\" \"kör\";;;    	ISRules;;;    	\"kies/kor\"	(Temp Impf)|(Temp Perf);;;    	\"kor\"		\"t/st\" (Temp Impf)(Pers 2nd)(Num SG);;;    	\"kor/kör\"	(Mod Conj-2);;;    ; \"ungebräuchlich, veraltet\" Basis-Entry for erküren, ausküren , auserküren;;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"kl#iOo#mm\" \"klimm\" \"klomm\" \"klömm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kl#iAu#ng\" \"kling\" \"klang\" \"kläng\" \"klung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"kn#ei#f\" \"kneif\" \"kniff\";;;    entry	(Aux sein)	LU \"void\"	\"k#oAo#mm\" \"komm\" \"kam\" \"käm\" \"kömm\";;;    entry	(Aux sein)	LU \"void\";;;    	\"kr#yOo#ch\" \"kriech\" \"kroch\" \"kröch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"k#üOo#r\" \"kür\" \"kor\" \"kör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#AUa#d\" \"lad\" \"läd\" \"lud\" \"lüd\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#Aya#ss\" \"lass\" \"läss\" \"liess\";;;    ;;;    entry	(Aux sein)(Aux haben)	LU \"void\";;;    	\"l#Au#f\" \"lauf\" \"läuf\" \"lief\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#ei#d\" \"leid\" \"litt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#Ei#h\" \"leih\" \"lieh\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#xAe#s\" \"les\" \"lies\" \"las\" \"läs\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"l#yAe#g\" \"lieg\" \"lag\" \"läg\" \"leg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#ÖOo#sch\" \"lösch\" \"lisch\" \"losch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"l#üOo#g\" \"lüg\" \"log\" \"lög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#Ei#d\" \"meid\" \"mied\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#eOo#lk\" \"melk\" \"molk\" \"mölk\";;;    ; milkst, milkt = \"veraltet\" (DUDEN p.137);;;    ; also regular melkte, gemelkt;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#EAe#ss\" \"mess\" \"miss\" \"mass\" \"mäss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"°missl#iAu#ng\" \"missling\" \"misslang\" \"missläng\" \"misslung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"n#EAo#hm\" \"nehm\" \"nimm\" \"nahm\" \"nähm\" \"nomm\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pf#ei#f\" \"pfeif\" \"pfiff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pfl#eOo#g\" \"pfleg\" \"pflog\" \"pflög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"pr#Ei#s\" \"preis\" \"pries\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"qu#EOo#ll\" \"quell\" \"quill\" \"quoll\" \"quöll\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#Aya#t\" \"rat\" \"rät\" \"riet\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#Ei#b\" \"reib\" \"rieb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"r#ei#ss\" \"reiss\" \"riss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"r#ei#t\" \"reit\" \"ritt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#yOo#ch\" \"riech\" \"roch\" \"röch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#iAu#ng\" \"ring\" \"rang\" \"räng\" \"rung\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"r#iÅo#nn\" \"rinn\" \"rann\" \"ränn\" \"rönn\" \"ronn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"r#uyu#f\" \"ruf\" \"rief\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#AU#f\" \"sauf\" \"säuf\" \"soff\" \"söff\" \"suff\" \"süff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#aU#g\" \"saug\" \"sog\" \"sög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#aUa#ff\" \"schaff\" \"schuf\" \"schüf\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"sch#Ei#d\" \"scheid\" \"schied\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#Ei#n\" \"schein\" \"schien\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#ei#ss\" \"scheiss\" \"schiss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#EAo#lt\" \"schelt\" \"schilt\" \"schalt\" \"schölt\" \"scholt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#éOo#r\" \"scher\" \"schor\" \"schör\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sch#yOo#b\" \"schieb\" \"schob\" \"schöb\" \"schub\" \"schöb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"sch#yOo#ss\" \"schiess\" \"schoss\" \"schöss\" \"schuss\" \"schüss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#Aya#f\" \"schlaf\" \"schläf\" \"schlief\";;;    entry	(Aux haben)	LU \"void\"	\"schl#AUa#g\" \"schlag\" \"schläg\" \"schlug\" \"schlüg\";;;    entry	(Aux sein)	LU \"void\";;;    	\"schl#ei#ch\" \"schleich\" \"schlich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#ei#f\" \"schleif\" \"schliff\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#ei#ss\" \"schleiss\" \"schliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#yOo#ss\" \"schliess\" \"schloss\" \"schlöss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schl#iAu#ng\" \"schling\" \"schlang\" \"schläng\" \"schlung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schm#ei#ss\" \"schmeiss\" \"schmiss\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"schm#EOo#lz\" \"schmelz\" \"schmilz\" \"schmolz\" \"schmölz\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schn#ei#d\" \"schneid\" \"schnitt\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schr#EAo#ck\" \"schreck\" \"schrick\" \"schrak\" \"schräk\" \"schrock\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schr#Ei#b\" \"schreib\" \"schrieb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schr#Ei#\" \"schrei\" \"schrie\";;;    ; Conj-2 schriee, schrieest etc??;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#Ei#g\" \"schweig\" \"schwieg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schw#EOo#ll\" \"schwell\" \"schwill\" \"schwoll\" \"schwöll\" \"schwall\" \"schwäll\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"schw#iÅo#mm\" \"schwimm\" \"schwamm\" \"schwämm\" \"schwömm\" \"schwomm\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"schw#iAu#nd\" \"schwind\" \"schwand\" \"schwänd\" \"schwund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#iAu#ng\" \"schwing\" \"schwang\" \"schwäng\" \"schwung\" \"schwüng\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"schw#öØo#r\" \"schwör\" \"schwor\" \"schwür\" \"schwur\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#xAe#h\" \"seh\" \"sieh\" \"sah\" \"säh\" \"seh\";;;    	ISRules;;;    	\"sieh\"		\"/e\" (Mod Imper)(Num SG) value;;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#yOo#d\" \"sied\" \"sott\" \"sött\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iAu#ng\" \"sing\" \"sang\" \"säng\" \"sung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iAu#nk\" \"sink\" \"sank\" \"sänk\" \"sunk\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#iÅo#nn\" \"sinn\" \"sann\" \"sänn\" \"sönn\" \"sonn\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"s#iAe#tz\" \"sitz\" \"sass\" \"säss\" \"sess\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sp#Ei#\" \"spei\" \"spie\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"sp#iÅo#nn\" \"spinn\" \"spann\" \"spänn\" \"spönn\" \"sponn\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"spl#ei#ss\" \"spleiss\" \"spliss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"spr#EAo#ch\" \"sprech\" \"sprich\" \"sprach\" \"spräch\" \"sproch\" \"spruch\" \"sprüch\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"spr#yOo#ss\" \"spriess\" \"spross\" \"spröss\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"spr#iAu#ng\" \"spring\" \"sprang\" \"spräng\" \"sprung\" \"sprüng\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#EAo#ch\" \"stech\" \"stich\" \"stach\" \"stäch\" \"stoch\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#eåa#h\" \"steh\" \"stand\" \"stünd\" \"ständ\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#xÅo#hl\" \"stehl\" \"stiehl\" \"stahl\" \"stähl\" \"stöhl\" \"stohl\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"st#Ei#g\" \"steig\" \"stieg\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"st#Eåo#rb\" \"sterb\" \"stirb\" \"starb\" \"stürb\" \"storb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#yOo#b\" \"stieb\" \"stob\" \"stöb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"st#iAu#nk\" \"stink\" \"stank\" \"stänk\" \"stunk\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"st#oyo#ss\" \"stoss\" \"stöss\" \"stiess\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"str#ei#ch\" \"streich\" \"strich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"str#ei#t\" \"streit\" \"stritt\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#AUa#g\" \"trag\" \"träg\" \"trug\" \"trüg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#EAo#ff\" \"treff\" \"triff\" \"traf\" \"träf\" \"troff\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"tr#Ei#b\" \"treib\" \"trieb\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"tr#EAe#t\" \"tret\" \"tritt\" \"trat\" \"trät\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#iAu#nk\" \"trink\" \"trank\" \"tränk\" \"trunk\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"tr#üOo#g\" \"trüg\" \"trog\" \"trög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"t#uAa#\" \"tu\" \"tat\" \"tät\" \"ta\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"°verd#Eåo#rb\" \"verderb\" \"verdirb\" \"verdarb\" \"verdürb\" \"verdorb\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verdr#yOo#ss\" \"verdriess\" \"verdross\" \"verdröss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verg#EAe#ss\" \"vergess\" \"vergiss\" \"vergass\" \"vergäss\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"°verl#yOo#r\" \"verlier\" \"verlor\" \"verlör\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"w#AUa#chs\" \"wachs\" \"wächs\" \"wuchs\" \"wüchs\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#äOo#g\" \"wäg\" \"wog\" \"wög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#AUa#sch\" \"wasch\" \"wäsch\" \"wusch\" \"wüsch\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#eOo#b\" \"web\" \"wob\" \"wöb\";;;    ;;;    entry	(Aux sein)	LU \"void\";;;    	\"w#ei#ch\" \"weich\" \"wich\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Ei#s\" \"weis\" \"wies\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Eåo#rb\" \"werb\" \"wirb\" \"warb\" \"würb\" \"worb\";;;    entry	(Aux sein)	LU \"void\"	\"w#EUo#rd\" \"werd\" \"wir\" \"wird\" \"wurd\" \"würd\" \"word\"	ISRules	\"wird/wir\"	\"st\" (Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)	\"wird\"		\"t/\" (Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)	\"wurd\"		\"/e\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG)	\"wird/werd\"	\"/e\" (Mod Imper)(Num SG)	\"ge/\"	\"word\"	(Temp Perf) value;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#Eåo#rf\" \"werf\" \"wirf\" \"warf\" \"würf\" \"worf\" \"wurf\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#yOo#g\" \"wieg\" \"wog\" \"wög\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#iAu#nd\" \"wind\" \"wand\" \"wänd\" \"wund\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"wr#iAu#ng\" \"wring\" \"wrang\" \"wräng\" \"wrung\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"z#Ei#h\" \"zeih\" \"zieh\";;;    ;;;    entry	(Aux haben)(Aux sein)	LU \"void\";;;    	\"z#yOo#h\" \"zieh\" \"zog\" \"zög\" \"zug\" \"züg\";;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"zw#iAu#ng\" \"zwing\" \"zwang\" \"zwäng\" \"zwung\";;;    ;;;    ;;;    ; Semi-irregular verbs;;;    ;;;    entry	(Aux haben);;;    	\"br#iAa#ng\" \"bring\" \"brach\" \"bräch\";;;    ;;;    entry	(Aux haben);;;    	\"d#eAa#nk\" \"denk\" \"dach\" \"däch\";;;    ;;;    ;;;    ; Modal verbs;;;    entry	(Aux haben)	LU \"void\";;;    	\"d#üUu#rf\" \"dürf\" \"darf\" \"durf\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"k#öOo#nn\" \"könn\" \"kann\" \"konn\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#öOo#g\" \"mög\" \"mag\" \"moch\" \"möch\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"m#üUu#ss\" \"müss\" \"muss\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"s#ooo#ll\" \"soll\";;;    	deleted-forms	(Mod Imper);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#ooo#ll\" \"woll\" \"will\";;;    	ISRules;;;    	\"woll\"	\"/e\" (Mod Imper)(Num SG);;;    ;;;    entry	(Aux haben)	LU \"void\";;;    	\"w#iUu#ss\" \"wiss\" \"weiss\" \"wuss\" \"wüss\";;;    	ISRules;;;    	\"wiss\"	\"/e\" (Mod Imper)(Num SG);;;    " :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |No-Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Mod Inf)(Temp Pres)	\"en\" \"en\" \"n\"(Mod Ind)(Temp Pres)	\"e\" \"e\"			(Pers 1st)(Num SG)	\"st\" \"st\" \"est\" \"t\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"t\" \"t\" \"et\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Ind)(Temp Impf)	\"te\" \"te\" \"ete\"		(Pers 1st)(Num SG)	\"test\" \"test\" \"etest\"	(Pers 2nd)(Num SG)	\"te\" \"te\" \"ete\"		(Pers 3rd)(Num SG)	\"ten\" \"ten\" \"eten\"	(Pers 1st)(Num PL)	\"tet\" \"tet\" \"etet\"	(Pers 2nd)(Num PL)	\"ten\" \"ten\" \"eten\"	(Pers 3rd)(Num PL)(Mod Conj-1)(Temp Pres)	\"e\" \"e\"			(Pers 1st)(Num SG)	\"est\" \"est\" \"st\"	(Pers 2nd)(Num SG)	\"e\" \"e\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"et\" \"et\" \"t\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Conj-2)(Temp Impf)	\"te\" \"te\" \"ete\"		(Pers 1st)(Num SG)	\"test\" \"test\" \"etest\"	(Pers 2nd)(Num SG)	\"te\" \"te\" \"ete\"		(Pers 3rd)(Num SG)	\"ten\" \"ten\" \"eten\"	(Pers 1st)(Num PL)	\"tet\" \"tet\" \"etet\"	(Pers 2nd)(Num PL)	\"ten\" \"ten\" \"eten\"	(Pers 3rd)(Num PL)(Mod Imper)	\"e\" \"e\" \"\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\"	(Pers 2nd)(Num PL)(Mod Part)(Temp Pres)	\"end\" \"end\" \"nd\"(Mod Part)(Temp Perf)	\"t\" \"t\" \"et\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |N-Regular|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Probleme bei Darstellung SG/Paradigmas (Dat. SG) zeugnis, atlascitation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)ISRules; Double-s with -nis\"(.*nis)/\\1s\" (ICat N-Stem)	\"e.*\" (ICat N-Suffix); zeugnisses, zeugnisse: gem Duden 380.2 kein Dativ-e, vgl. jedoch Pfeffer 79, 2.1.1. Anm. 9; Attention: penis, anisentry	(Gender M)	LU \"void\"	\"berg\" \"berg\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . ES/E)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; vowel change: auskennen, wegrennen, zurücksenden, umwenden DUDEN 214\"(.*)#eaa#(nd)/\\1a\\2\" (ICat V-Stem)	\"e(t.*)/\\1\" (Mod Ind)(Temp Impf)|(Temp Perf) value ; wendete u. wandte, sendete u. sandte\"(.*)#eaa#(nn)/\\1a\\2\" (ICat V-Stem)	(Mod Ind)(Temp Impf)|(Temp Perf)\"(.*)#eaa#(.*)/\\1e\\2\" (ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender M)	LU \"void\"	\"lehrling\" \"lehrling\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/E)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Mod Inf)(Temp Pres)	\"en\" \"en\" \"n\"(Mod Ind)(Temp Pres)	\"e\" \"e\" \"\"		(Pers 1st)(Num SG)	\"st\" \"st\" \"est\" \"t\" \"\"	(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\" \"\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\" \"\"	(Pers 1st)(Num PL)	\"t\" \"t\" \"et\" \"d\"	(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\" \"\"	(Pers 3rd)(Num PL)(Mod Ind)(Temp Impf)	\"\" \"\" \"te\" \"e\"			(Pers 1st)(Num SG)	\"st\" \"st\" \"t\" \"est\" \"test\"	(Pers 2nd)(Num SG)	\"\" \"\" \"te\" \"e\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\" \"ten\"		(Pers 1st)(Num PL)	\"t\" \"t\" \"et\" \"tet\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"ten\"			(Pers 3rd)(Num PL)(Mod Conj-1)(Temp Pres)	\"e\" \"e\" \"\"		(Pers 1st)(Num SG)	\"est\" \"est\" \"st\" \"t\"	(Pers 2nd)(Num SG)	\"e\" \"e\" \"\"		(Pers 3rd)(Num SG)	\"en\" \"en\" \"n\"		(Pers 1st)(Num PL)	\"et\" \"et\" \"t\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"n\"		(Pers 3rd)(Num PL)(Mod Conj-2)(Temp Impf)	\"e\" \"e\" \"te\"			(Pers 1st)(Num SG)	\"est\" \"st\" \"est\" \"t\" \"test\"	(Pers 2nd)(Num SG)	\"e\" \"e\" \"te\"			(Pers 3rd)(Num SG)	\"en\" \"en\" \"ten\"			(Pers 1st)(Num PL)	\"et\" \"t\" \"et\" \"tet\"		(Pers 2nd)(Num PL)	\"en\" \"en\" \"ten\"			(Pers 3rd)(Num PL)(Mod Imper)	\"e\" \"e\" \"\"		(Pers 2nd)(Num SG)	\"t\" \"t\" \"et\" \"d\"	(Pers 2nd)(Num PL)(Mod Part)(Temp Pres)	\"end\" \"end\"(Mod Part)(Temp Perf)	\"en\" \"en\" \"n\" \"t\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"ge\" \"ge\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |V-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)ISRules; Delete Suffix n Dat. PL after n\".*n\" (ICat N-Stem)	\"n/\" (Case Dat)(Num PL)entry	(Gender M)	LU \"void\"	\"gArten\" \"garten\" \"gart\" \"gärten\" \"gärt\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/-)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat Detachable-Prefix)	(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat Detachable-Prefix)	(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; Fehler bei Spelling Rules. Bis Korrektur gemacht,; Zeichen É ersetzt durch x (befehlen); Zeichen í ersetzt durch y (stossen); Return e-Insertion by General ISRUle with Ind. Pres mit Umlaut Duden 209.1\".*#[AEx]..#.*t\" (ICat V-Stem)	\"et/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ;  t-Deletion: brät, gilt, hält\".*#[AEx]..#.*st\" (ICat V-Stem)	\"est/\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; st-Deletion: du birst,\".*#[AEx]..#.*[dt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Pres)(Num SG) ; brätst, lädst, lädt, giltst; e-Deletion-Umlaut-Imper Duden 290\".*#[ExÖ]..#.*\" (ICat V-Stem)		\"e/\" (ICat V-Suffix)(Mod Imper)(Num SG) ; nimm, brich, lisch; CONSONAT-Modifications:\"(.*b#iAe#t)t/\\1\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; bitten/bat/bäte/gebeten\"(.*f#Aya#l)l/\\1\" (ICat V-Stem)			(Temp Impf) ; fallen/fiel/fiele\"(.*g#eia#)h/\\1ng\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gehen/ging/gegangen\"(.*k#oAo#m)m/\\1\" (ICat V-Stem)			(Temp Impf) ; (be)komm/(be)kam\"(.*sch#aUa#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; (er)schaff/(er)schuf/(er)schüf\"(.*schr#EAo#)ck/\\1k\" (ICat V-Stem)		(Temp Impf) ; (er)schrecken/(er)schrak/(er)schräke\"(.*s#yOo#)d/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sieden/sott/sötte/gesotten\"(.*s#iAe#)tz/\\1ss\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; sitzen/sass/sässe/gesessen\"(.*st#eåa#)h/\\1nd\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; stehen/stand/stände/gestanden (verstehen etc.)\"(.*tr#EAo#f)f/\\1\" (ICat V-Stem)		(Temp Impf) ; treffen/traf\"(.*t#uAa#)/\\1t\" (ICat V-Stem)			(Temp Impf) ; tun/tat/täte (vertun)\"(.*z#yOo#)h/\\1g\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; ziehen/zog/gezogen\"(.*tr#EAe#)t/\\1tt\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*n#EAo#)hm/\\1mm\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)|(Mod Part)(Temp Perf)\"(.*#ei#)[dt]/\\1tt\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; gleiten/glitt/geglitten, leiden/litt/gelitten\"(.*#ei#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; greifen/griff/gegriffen, kneifen/kniff\"(.*s#AU#)f/\\1ff\" (ICat V-Stem)			(Temp Impf)|(Temp Perf) ; saufen/soff/gesoffen (besaufen etc.)\"(.*m#öOo#)g/\\1ch\" (ICat V-Stem)		(Temp Impf)|(Temp Perf) ; (ver)mögen/mochte/möchte/gemocht; modal verbs: delete suffix 1st & 3rd pers. SG Ind Pres: darfe/darf, kanne/kann\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\".*/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG); modal verbs: change irregular imp. suffixes to regular suffixes; durf/durfte, konnst/konntest etc.\".*m#üUu#ss|.*w#iUu#ss\" (ICat V-Stem)		\"t/st\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) ; s deleted by general ISRule\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"([^e].*)/te\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"(e.*)/t\\1\" (Temp Impf)\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"/te\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG); modal verbs: replace irregular part-perf suffixe by regular suffixe; gedurfen/gedurft etc.\".*#üUu#.*|.*#öOo#.*|.*#ooo#.*|.*#iUu#.*\" (ICat V-Stem)		\"en/t\" (Temp Perf); mögen/mochte\"möchte; VOWEL-Modifications; Umlaut Ind-Pres (+Imper SG):\"(.*)#A..#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#A[uU]#(.*)/\\1äu\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)#[EÖ]..#(.*)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*)#x..#(.*)/\\1ie\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)|(Mod Imper)(Num SG)\"(.*st)#oyo#(ss)/\\1ö\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG) ; stosse stösst;modal verbs ablaut Ind Pres\"(.*d)#üUu#(rf)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; dürfen/darf\"(.*)#öOo#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; mögen/mag, können/kann\"(.*m)#üUu#(ss)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; müssen/muss\"(.*w)#ooo#(ll)/\\1i\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wollen/will\"(.*w)#iUu#(ss)/\\1ei\\2\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Num SG) ; wissen/weiss; Ind Impf + Conj-2 + Part-2\"(.*)#ei#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf)\"(.*)#Ei#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf)|(Temp Perf);Impf + Conj-2\"(.*)#.i.#(.*)/\\1i\\2\" (ICat V-Stem)		(Temp Impf)\"(.*)#.y.#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; lassen/liess\"(.*)#Au#(.*)/\\1ie\\2\" (ICat V-Stem)		(Temp Impf) ; laufen/lief; Impf only\"(.*)#.[AÅå].#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)|(Temp Perf) ; saufen/soff, schnauben/schnob\"(.*)#.O.#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf)\"(.*)#.U.#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Ind)(Temp Impf); Conj-2\"(.*sch)#EAo#(lt)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; schelten/schölte\"(.*schw)#öOo#(r)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value ; schwören/schwüre (neben schwöre DUDEN p.140)\"(.*)#.A.#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#[Aa]U#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; saufen/söffe, schnauben/schnöbe\"(.*)#.O.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.U.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf)\"(.*)#.å.#(r[bf])/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; stürbe, verdürbe, würbe, würfe; ≠ stände-stünde, hälfe-hülfe\"(.*)#.[Åå].#(.*)/\\1ä\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) value\"(.*)#.Å.#(.*)/\\1ö\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; begänne u. begönne\"(.*)#.å.#(.*)/\\1ü\\2\" (ICat V-Stem)		(Mod Conj-2)(Temp Impf) ; hälfe u. hülfe, stände u. stünde; Part-2 only\"(.*)#..a#(.*)/\\1a\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..o#(.*)/\\1o\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..u#(.*)/\\1u\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf)\"(.*)#..e#(.*)/\\1e\\2\" (ICat V-Stem)		(Mod Part)(Temp Perf); all other Temp + Mod\"(.*)#[aA]..#(.*)/\\1a\\2\" (ICat V-Stem) ; fragen, blase\"(.*)#[aA][uU]#(.*)/\\1au\\2\" (ICat V-Stem) ; laufen, saufen, schnauben (gelaufen also (Mod Part)(Temp Perf)!!)\"(.*)#[eEx]..#(.*)/\\1e\\2\" (ICat V-Stem) ; bewegen, bersten, befehlen\"(.*)#[eE]i#(.*)/\\1ei\\2\" (ICat V-Stem) ; reissen, bleiben\"(.*)#y..#(.*)/\\1ie\\2\" (ICat V-Stem) ; biegen\"(.*)#Ö..#(.*)/\\1ö\\2\" (ICat V-Stem) ; löschen\"(.*)#([äioöuü])..#(.*)/\\1\\2\\3\" (ICat V-Stem) ; gären, beginnen, kommen, schwören, rufen, küren; Return e-Insertion by General ISRule with Impf. sing. Duden 209.1\".*[^rst][dt]\" (ICat V-Stem)	\"e(st)/\\1\" (ICat V-Suffix)(Mod Ind)(Temp Impf) ; botst, fandst, aber barstest, sottest, hattest; e-Insertion resp. s-Deletion 2 Pers. Sing. Ind. Impf. Duden 209.2\".*[sz]\" (ICat V-Stem)		\"t/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; bliesest u. bliest\".*sch\" (ICat V-Stem)		\"st/est\" (Mod Ind)(Temp Impf)(Pers 2nd)(Num SG) value ; droschest, droschst, wuschest, wuschst; e-Delition 2. Pers SG u. PL Conj-2, Duden 210\".*[äöü].*[sxz]\" (ICat V-Stem)	\"es?(t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; sässet und sässt, wüchset u. wüchst\".*[äöü].*[^sxzdt]\" (ICat V-Stem)	\"e(s?t)/\\1\" (Mod Conj-2)(Temp Impf)(Pers 2nd) value ; trügest u. trügst, sänget u. sängt; optional e-deletion Part-2 .*ieen/.*ien (gespie[e]n)\".*ie\" (ICat V-Stem)		\"en/n\" (Mod Part)(Temp Perf) value; Individual\"(.*)tu\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix)^(Mod Conj-1) ; (ver-, ab-)tuen/tun\"(.*)ta\" (ICat V-Stem)	\"en/n\" (ICat V-Suffix) ; (ver-, ab-)getaen/getan\"(.*)wird/\\1wir\"	\"st\" (Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)\"(.*)wird\"		\"t/\" (Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"(.*)wurd\"			\"/e\" (Mod Ind)(Temp Impf)(Pers 1st)(Num SG)|(Mod Ind)(Temp Impf)(Pers 3rd)(Num SG)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)		(ICat V-Suffix)(Mod Inf)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)		(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)		(ICat V-Suffix)(Mod Imper)(ICat V-Stem)		(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules; vowel change kennen/kannte, rennen, senden, wenden DUDEN 214\"(.*)#eaa#(nd)/\\1a\\2\" (ICat V-Stem)	\"e(t.*)/\\1\" (Mod Ind)(Temp Impf)|(Temp Perf) value ; wendete u. wandte, sendete u. sandte\"(.*)#eaa#(nn)/\\1a\\2\" (ICat V-Stem)	(Mod Ind)(Temp Impf)|(Temp Perf)\"(.*)#eaa#(.*)/\\1e\\2\" (ICat V-Stem)entry	(Aux haben)	LU \"void\"	\"änder\" \"änder\" \"ändr\"entry	(Aux haben)	LU \"void\"	\"hab\" \"hab\" \"ha\" \"hat\" \"hät\"	ISRules	\"hab/ha\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG)|(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)	\"hab/hat\" (ICat V-Stem)		(Temp Impf)	\"hat/hät\" (ICat V-Stem)		(Mod Conj-2);-------------------------------------------------------------; irregular vowel changes, but regular ISuffixes; list complete -> no more (simple) entries of this kindentry	(Aux haben)	LU \"void\"	\"br#eaa#nn\" \"brenn\" \"brann\" \"brand\" \"bränd\"entry	(Aux haben)	LU \"void\"	\"k#eaa#nn\" \"kenn\" \"kann\" \"kennt\"entry	(Aux haben)	LU \"void\"	\"n#eaa#nn\" \"nenn\" \"nann\"entry	(Aux sein)	LU \"void\"	\"r#eaa#nn\" \"renn\" \"rann\"entry	(Aux haben)(Aux sein)	LU \"void\"	\"s#eaa#nd\" \"send\" \"sand\"entry	(Aux haben)	LU \"void\"	\"w#eaa#nd\" \"wend\" \"wand\" \"wänd\";-------------------------------------------------------------" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |No-Detachable-Prefix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)ISRules\".*tor\" (ICat N-Stem)	\"e(s?)/\\1\" (Case Gen)(Num SG)|(Case Dat)(Num SG)entry	(Gender M)	LU \"void\"	\"staat\" \"staat\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]S/[E]N)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat V-Stem)	(ICat V-Suffix)(Mod Inf)word-forms(ICat V-Stem)	(ICat V-Suffix)(Mod Inf)(ICat V-Stem)	(ICat V-Suffix)(Mod Ind)(Temp Pres)(ICat V-Stem)	(ICat V-Suffix)(Mod Ind)(Temp Impf)(ICat V-Stem)	(ICat V-Suffix)(Mod Conj-1)(Temp Pres)(ICat V-Stem)	(ICat V-Suffix)(Mod Conj-2)(Temp Impf)(ICat V-Stem)	(ICat V-Suffix)(Mod Imper)(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Pres)(ICat V-Prefix)	(ICat V-Stem)	(ICat V-Suffix)(Mod Part)(Temp Perf)paradigms(Mod Inf)(Mod Ind)(Temp Pres)(Mod Ind)(Temp Impf)(Mod Conj-1)(Temp Pres)(Mod Conj-2)(Temp Impf)(Mod Imper)(Mod Part)(Temp Pres)(Mod Part)(Temp Perf)ISRules\"sei/bin\" (ICat V-Stem)		\"e/\" (Mod Ind)(Temp Pres)(Pers 1st)(Num SG) ; bin\"sei/bi\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 2nd)(Num SG) ; bist\"sei/is\" (ICat V-Stem)		(Mod Ind)(Temp Pres)(Pers 3rd)(Num SG)\"sei/sind\" (ICat V-Stem)	\"en/\" (Mod Ind)(Temp Pres)(Num PL) ; sind\"sei\" (ICat V-Stem)		\"t/d\" (Mod Ind)(Temp Pres)(Num PL)|(Mod Imper)(Num PL) ; seit/seid\"sei\" (ICat V-Stem)		\"en/n\" (Mod Inf) ; seien/sein\"sei\" (ICat V-Stem)		\"e/\" (Mod Conj-1)(Num SG)|(Mod Imper)(Num SG) ; seie/sei\"sei\" (ICat V-Stem)		\"est/st\" (Mod Conj-1)(Num SG) value ; sei(e)st\"sei/war\" (ICat V-Stem)		(Temp Impf)\"war/wär\" (ICat V-Stem)		(Mod Conj-2) ; wäre\"wär\" (ICat V-Stem)		\"e(s?t)/\\1\" (Mod Conj-2)(Pers 2nd) value ; wär(e)st, wär(e)t\"sei\" (ICat V-Stem)		\"t/d\" (Mod Imper)(Num PL) ; seit/seid!\"sei/wes\" (ICat V-Stem)		(Temp Perf)entry	(Aux sein)	LU \"sein\"	\"sei\" \"sei\" \"bin\" \"bi\" \"is\" \"sind\" \"war\" \"wär\" \"wes\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |sein|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.ER)(Num PL)paradigms(Num SG)(Num PL)ISRules; e-Deletion SG with -tum\".*tum\" (ICat N-Stem)		\"e(.*)/\\1\" (ICat N-Suffix)(Num SG); irrtums vgl. Duden 380.2 u S. 240, Pfeffer 79. 2.1.1.entry	(Gender N)	LU \"void\"	\"bild\" \"bild\"entry	(Gender N)	LU \"void\"	\"grAs\" \"gras\" \"gräs\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]S/ER)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender N)	LU \"void\"	\"deck\" \"deck\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . S/S)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender M)	LU \"void\"	\"mensch\" \"mensch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . [E]N/[E]N)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.E)(Num PL)paradigms(Num SG)(Num PL)ISRules; Double-s with -nis\"(.*nis)/\\1s\" (ICat N-Stem)	\"e.*\" (ICat N-Suffix)entry	(Gender F)	LU \"void\"	\"krAft\" \"kraft\" \"kräft\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/E)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender F)	LU \"void\"	\"mUtter\" \"mutter\" \"mütter\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/-)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.EN)(Num PL)paradigms(Num SG)(Num PL)ISRules; in/innen\"(.*)iN/\\1inn\" (ICat N-Stem)	\"en\" (ICat N-Suffix)(Num PL)\"(.*)iN/\\1in\" (ICat N-Stem)entry	(Gender F)	LU \"void\"	\"blume\" \"blume\" \"blum\" \"blüm\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/[E]N)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.S)(Num PL)paradigms(Num SG)(Num PL)entry	(Gender F)	LU \"void\"	\"oma\" \"oma\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . -/S)) :MOD2-P NIL) NIL NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |N-Irregular|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(Case Nom)word-forms(ICat N-Stem.Reg)	(ICat N-Suffix.ES)(Num SG)(ICat N-Stem.Reg)	(ICat N-Suffix.-)(Num PL)paradigms(Num SG)(Num PL)ISRules; Delete-n Nom SG\"(.*)n/\\1\" (ICat N-Stem)	(Case Nom)(Num SG) value; herz/herzen\"(.*)herz/\\1herzen\"		(Case Gen)(Num SG)|(Num PL)\"(.*)herz/\\1herzen\"		(Case Dat)(Num SG) value\".*herz.*\"			\"e(.*)/\\1\" (Case Gen)(Num SG)|(Case Dat)(Num SG); e-Deletion, weil allgemeine ISRules dies bei herz noch nicht getan haben.; daneben aber auch herzes (Gen), herz (Dat), herz (PL), d.h. ES/E-Klasse; Duden WB; Delete Suffix n Dat. PL after n\".*n\" (ICat N-Stem)	\"n/\" (Case Dat)(Num PL)entry	(Gender N)	LU \"void\"	\"herz\" \"herz\" \"herzen\"; ebenso: Friede(n), Funke(n), Gedanke(n), Glaube(n), Same(n), Wille(n); nicht Haufe(n), da Haufe gem. Duden WB veraltet.; siehe Duden 382.1, Blatt Nomen Gen -ens " :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . ENS/EN)) :MOD2-P NIL) NIL NIL NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(ICat Reg)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |N-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |N-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(ICat ES)	\"\" \"\"		(Case Nom)	\"es\" \"es\" \"s\"	(Case Gen)	\"e\" \"e\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(ICat S)	\"\" \"\"		(Case Nom)	\"s\" \"s\" \"\"	(Case Gen)	\"\" \"\"		(Case Dat)	\"\" \"\"		(Case Acc)(ICat EN)	\"\" \"\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(ICat -)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"\" \"\"		(Case Dat)	\"\" \"\"		(Case Acc)(Decl Strong)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Strong)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Strong)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Decl Weak)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Weak)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Num| . SG)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(ICat E)	\"e\" \"e\" \"\"	(Case Nom)	\"e\" \"e\" \"\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\" \"\"	(Case Acc)(ICat -)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"n\" \"n\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(ICat EN)	\"en\" \"en\" \"n\"	(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(ICat ER)	\"er\" \"er\"	(Case Nom)	\"er\" \"er\"	(Case Gen)	\"ern\" \"ern\"	(Case Dat)	\"er\" \"er\"	(Case Acc)(ICat S)	\"s\" \"s\"		(Case Nom)	\"s\" \"s\"		(Case Gen)	\"s\" \"s\"		(Case Dat)	\"s\" \"s\"		(Case Acc)(ICat Foreign)	\"\" \"\"		(Case Nom)	\"\" \"\"		(Case Gen)	\"\" \"\" \"\"	(Case Dat)	\"\" \"\"		(Case Acc)(Decl Strong)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Num| . PL)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . A)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules\".*grOss\" (ICat A-Stem)			\"est/t\" (Degree Super); gröss+ste/grösste; Umlaut Comparative/Superlative\"(.*)A(.*)/\\1ä\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)U(.*)/\\1ü\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem)\"(.*)U(.*)/\\1u\\2\" (ICat A-Stem)entry	\"Alt\" \"alt\" \"ält\"entry	\"grün\" \"grün\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Regular|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Adjectives with an optional e when undeclined (v. Duden 440; Blatt Adj, Stamm auf -e):; e.g. bös(e), fad(e), trüb(e), invalid(e), öd(e), zäh(e) etc.; stems to be entered without optional e, which is deletet by RIRule ISRule.; Not adj. with obligatary e: e.g. weise, flüggecitation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules\"(.*)/\\1e\" (ICat A-Stem)	(Decl Undeclined) valueentry	LU \"void\"	\"fad\" \"fad\" \"fade\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Regular-Undeclined-e-Optional|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; schmal, rund, bang, fromm, krumm usw. for all adj with two correct comp-forms (umlaut and no-umlaut, Duden 518citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules; Umlaut Comparative/Superlative\"(.*)A(.*)/\\1ä\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)U(.*)/\\1ü\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super) value\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem)\"(.*)U(.*)/\\1u\\2\" (ICat A-Stem)entry	LU \"void\"	\"rUnd\" \"rund\" \"ründ\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Two_Comp_Forms|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)word-forms(ICat A-Stem)		(ICat A-Suffix)(Decl Undeclined)paradigms(Decl Undeclined)entry	LU \"void\"	\"rosa\" \"rosa\"; ebenso: olive, beige, orange, creme, Duden 443.5; evtl. wie bei anderen Adj.-Klassen alle Formen des Positivs (Duden 529.5) generieren lassen." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Invariable|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat A-Stem)word-forms(ICat A-Stem)		(ICat A-Suffix)(Decl Undeclined)paradigms(Decl Undeclined)entry	LU \"void\"	\"quitt\" \"quitt\"; Duden 449: fit, zugetan, barfuss, schade, schuld usw.; ebenfalls Regel für Attributive only (Duden 448): obere, mittlere, linke, andere, weitere (Duden 470-472); dort, citation-forms = A-Stem + A-Suffix mask. SG. Nom. weak-Decl (-e); keine Comp. und z.T. keine Super-Formen." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Predicative-Only|)) :MOD2-P NIL) NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 527citation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Undeclined); this word-form to be used for predicative and adverbial function of adjective, Duden 445, 446, 473word-forms(ICat A-Stem)	(ICat A-Suffix)			(ICat Degr-Mark)(Degree Pos)(ICat A-Stem)	(ICat Degr-Mark)(Degree Comp)	(ICat A-Suffix)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat Degr-Mark)(Degree Super)	(ICat A-Suffix)(Decl Weak)paradigms(Degree Pos)(Decl Undeclined)(Degree Pos)(Decl Strong)(Num SG)(Gender M)(Degree Pos)(Decl Strong)(Num SG)(Gender F)(Degree Pos)(Decl Strong)(Num SG)(Gender N)(Degree Pos)(Decl Strong)(Num PL)(Degree Pos)(Decl Weak)(Num SG)(Gender M)(Degree Pos)(Decl Weak)(Num SG)(Gender F)(Degree Pos)(Decl Weak)(Num SG)(Gender N)(Degree Pos)(Decl Weak)(Num PL);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Pos)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Pos)(Decl Mixed)(Num PL)(Degree Comp)(Decl Undeclined)(Degree Comp)(Decl Strong)(Num SG)(Gender M)(Degree Comp)(Decl Strong)(Num SG)(Gender F)(Degree Comp)(Decl Strong)(Num SG)(Gender N)(Degree Comp)(Decl Strong)(Num PL)(Degree Comp)(Decl Weak)(Num SG)(Gender M)(Degree Comp)(Decl Weak)(Num SG)(Gender F)(Degree Comp)(Decl Weak)(Num SG)(Gender N)(Degree Comp)(Decl Weak)(Num PL);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Comp)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Comp)(Decl Mixed)(Num PL)(Degree Super)(Decl Strong)(Num SG)(Gender M)(Degree Super)(Decl Strong)(Num SG)(Gender F)(Degree Super)(Decl Strong)(Num SG)(Gender N)(Degree Super)(Decl Strong)(Num PL)(Degree Super)(Decl Weak)(Num SG)(Gender M)(Degree Super)(Decl Weak)(Num SG)(Gender F)(Degree Super)(Decl Weak)(Num SG)(Gender N)(Degree Super)(Decl Weak)(Num PL);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender M);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender F);;;    (Degree Super)(Decl Mixed)(Num SG)(Gender N);;;    (Degree Super)(Decl Mixed)(Num PL)ISRules; hoch, hoh, höher, höchst\"(.*)hOch/\\1hOh\" (ICat A-Stem)		\"e.*\" (ICat A-Suffix)|(ICat Degr-Mark)\"(.*)O(.*)/\\1ö\\2\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)O(.*)/\\1o\\2\" (ICat A-Stem); nah, nahe, näher, nächst (but compounds are regular: naturnah, naturnaher, naturnah[e]ste)\"nAh/nahe\" (ICat A-Stem)		(Decl Undeclined) value\"nAh/näh\" (ICat A-Stem)		(Degree Comp)|(Degree Super)\"(.*)A(.*)/\\1a\\2\" (ICat A-Stem)\"näh/näch\" (ICat A-Stem)		(Degree Super)\".*nah\" (ICat A-Stem)			\"st/est\" (Degree Super) value; gut, besser, best\"gut/bess\" (ICat A-Stem)		(Degree Comp)\"gut/best\" (ICat A-Stem)		\"st/\" (Degree Super); stem best+ø and not be+st because surface string \"be\" is the same as for the suffix \"be\" => too many wrong parses with tentative entries; not \"(.*)gut\" because colloquial ungut[e]ste, herzensgut[e]ste\".*gut\" (ICat A-Stem)			\"st/est\" (Degree Super) valueentry	LU \"void\"	\"hOch\" \"hoch\" \"hoh\" \"höh\" \"höch\"entry	LU \"void\"	\"nAh\" \"nah\" \"nahe\" \"näh\" \"näch\"entry	LU \"void\"	\"guT\" \"gut\" \"bess\" \"best\"; dito Zahladjektive: viel, mehr, meist; wenig, minder u. weniger, mindeste u. wenigste, Duden 527" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |A-Irreg|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |A-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Decl Strong)(Num SG)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Strong)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Strong)(Num SG)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Decl Strong)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num SG)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Decl Weak)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num SG)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Decl Weak)(Num PL)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc);;;    (Decl Mixed)(Num SG)(Gender M);;;    	\"er\" \"er\"	(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"en\" \"en\"	(Case Acc);;;    ;;;    (Decl Mixed)(Num SG)(Gender F);;;    	\"e\" \"e\"		(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"e\" \"e\"		(Case Acc);;;    ;;;    (Decl Mixed)(Num SG)(Gender N);;;    	\"es\" \"es\"	(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"es\" \"es\"	(Case Acc);;;    ;;;    (Decl Mixed)(Num PL);;;    	\"e\" \"e\"		(Case Nom);;;    	\"en\" \"en\"	(Case Gen);;;    	\"en\" \"en\"	(Case Dat);;;    	\"e\" \"e\"		(Case Acc)(Decl Undeclined)	\"\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |A-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Degree Pos)	\"\" \"\"(Degree Comp)	\"er\" \"er\" \"r\"(Degree Super)	\"st\" \"st\" \"est\" \"t\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Degr-Mark|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Art|)) :MOD2-P T) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Manner| . |Def|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 352, 536citation-forms(ICat Def-Article)(Case Nom)word-forms(ICat Def-Article)(Case Nom)(ICat Def-Article)(Case Gen)(ICat Def-Article)(Case Dat)(ICat Def-Article)(Case Acc)paradigms(Cat Art)(Manner Def)entry	(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"	(Case Nom)	\"des\" \"des\"	(Case Gen)	\"dem\" \"dem\"	(Case Dat)	\"den\" \"den\"	(Case Acc)entry	(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"der\" \"der\"	(Case Gen)	\"der\" \"der\"	(Case Dat)	\"die\" \"die\"	(Case Acc)entry	(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"	(Case Nom)	\"des\" \"des\"	(Case Gen)	\"dem\" \"dem\"	(Case Dat)	\"das\" \"das\"	(Case Acc)entry	(Num PL)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"der\" \"der\"	(Case Gen)	\"den\" \"den\"	(Case Dat)	\"die\" \"die\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Definite-Article|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Def-Article|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Manner| . |Indef|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 352, 536citation-forms(ICat Art-Stem)	(ICat Art-Suffix)(Gender M)(Case Nom)word-forms(ICat Art-Stem)	(ICat Art-Suffix)paradigms(Gender M)(Gender F)(Gender N)entry	(Num SG)	LU \"void\"	\"ein\" \"ein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Indefinite-Article|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Art-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Gender M)	\"\" \"\"		(Case Nom)	\"es\" \"es\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Gender N)	\"\" \"\"		(Case Nom)	\"es\" \"es\"	(Case Gen)	\"em\" \"em\"	(Case Dat)	\"\" \"\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Art-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Pron|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 537citation-forms(ICat Pers-Pron)(Case Nom)word-forms(ICat Pers-Pron)paradigms(Cat Pron)entry	(Manner Personal)(Pers 1st)(Num SG)	LU \"void\"	\"ich\" \"ich\"		(Case Nom)	\"meiner\" \"meiner\"	(Case Gen)	\"mir\" \"mir\"		(Case Dat)	\"mich\" \"mich\"		(Case Acc)entry	(Manner Personal)(Pers 2nd)(Num SG)	LU \"void\"	\"du\" \"du\"		(Case Nom)	\"deiner\" \"deiner\"	(Case Gen)	\"dir\" \"dir\"		(Case Dat)	\"dich\" \"dich\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender M)	LU \"void\"	\"er\" \"er\"		(Case Nom)	\"seiner\" \"seiner\"	(Case Gen)	\"ihm\" \"ihm\"		(Case Dat)	\"ihn\" \"ihn\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender F)	LU \"void\"	\"sie\" \"sie\"		(Case Nom)	\"ihrer\" \"ihrer\"		(Case Gen)	\"ihr\" \"ihr\"		(Case Dat)	\"sie\" \"sie\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num SG)(Gender N)	LU \"void\"	\"es\" \"es\"		(Case Nom)	\"seiner\" \"seiner\"	(Case Gen)	\"ihm\" \"ihm\"		(Case Dat)	\"es\" \"es\"		(Case Acc)entry	(Manner Personal)(Pers 1st)(Num PL)	LU \"void\"	\"wir\" \"wir\"		(Case Nom)	\"unser\" \"unser\"		(Case Gen)	\"uns\" \"uns\"		(Case Dat)	\"uns\" \"uns\"		(Case Acc)entry	(Manner Personal)(Pers 2nd)(Num PL)	LU \"void\"	\"ihr\" \"ihr\"		(Case Nom)	\"euer\" \"euer\"		(Case Gen)	\"euch\" \"euch\"		(Case Dat)	\"euch\" \"euch\"		(Case Acc)entry	(Manner Personal)(Pers 3rd)(Num PL)	LU \"void\"	\"sie\" \"sie\"		(Case Nom)	\"ihrer\" \"ihrer\"		(Case Gen)	\"ihnen\" \"ihnen\"		(Case Dat)	\"sie\" \"sie\"		(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Personal-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Refl-Pron)(Case Acc); Acc als Zitatform, da bei reflexiven Verben meistgebrauchte Form (sich ist auch in Duden WB Verweisform)word-forms(ICat Refl-Pron)paradigms(Cat Pron)entry	(Manner Refl)(Pers 1st)(Num SG)	LU \"void\"	\"meiner\" \"meiner\"	(Case Gen)	\"mir\" \"mir\"		(Case Dat)	\"mich\" \"mich\"		(Case Acc)entry	(Manner Refl)(Pers 2nd)(Num SG)	LU \"void\"	\"deiner\" \"deiner\"	(Case Gen)	\"dir\" \"dir\"		(Case Dat)	\"dich\" \"dich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender M)	LU \"void\"	\"seiner\" \"seiner\"	(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender F)	LU \"void\"	\"ihrer\" \"ihrer\"		(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num SG)(Gender N)	LU \"void\"	\"seiner\" \"seiner\"	(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Refl)(Pers 1st)(Num PL)	LU \"void\"	\"unser\" \"unser\"		(Case Gen)	\"uns\" \"uns\"		(Case Dat)	\"uns\" \"uns\"		(Case Acc)entry	(Manner Refl)(Pers 2nd)(Num PL)	LU \"void\"	\"euer\" \"euer\"		(Case Gen)	\"euch\" \"euch\"		(Case Dat)	\"euch\" \"euch\"		(Case Acc)entry	(Manner Refl)(Pers 3rd)(Num PL)	LU \"void\"	\"ihrer\" \"ihrer\"		(Case Gen)	\"sich\" \"sich\"		(Case Dat)	\"sich\" \"sich\"		(Case Acc)entry	(Manner Rezipr)(Num PL)	LU \"void\"	\"einander\" \"einander\"	(Case Gen)	\"einander\" \"einander\"	(Case Dat)	\"einander\" \"einander\"	(Case Acc)	deleted-forms	(Case Gen); 	Steht für uns, euch, sich (PL): einander unterstützen (Acc), einander begegnen (Dat); Duden 543, 176, 179;	Mit Präp (miteinander, aneinander, übereinander) gem. Duden WB s.v. = Adv (stimmt das immer? z.B. bei übereinander reden?); evtl. nur 3. Pers. SG u. PL. Dat u. Acc, da andere Formen identisch mit Personalpronomen; Duden 541" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Reflexive-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 545, 546; Adj (o. Pron.?) meinige, deinige etc. via Suffixing mit -ig zu Weak-Decl-Only-Adj (o. Possessivpron?)citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat -)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak); Strong = attributiv (ICat -): \"mein Auto ist rot\", oder nicht attributiv ohne def. Artikel (Case Nom)(ICat er) u. (Case Acc)(ICat es): \"meines ist rot/es ist mein(e)s\"; Weak = nicht attributiv mit def. Artikel: \"der/die/das meine\" \"des/der deinen\", \"dem/der seinen\" etc.; siehe Duden 547paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)ISRules; Delete e Stemm: unsere u. unsre, euere u. eure, eueres u. eures, unserer u. unsrer\"(.*)e(r)/\\1\\2\" (ICat Pron-Stem)	\"e.*\" (ICat Pron-Suffix) value; Delete e-Suffix, unseren u. unsern, euerem u. euerm\".*er\" (ICat Pron-Stem)			\"e([nm])/\\1\" (ICat Pron-Suffix) value; meines u. meins\"[mds]ein\" (ICat Pron-Stem)		\"es/s\" (Gender N)(Case Nom)|(Gender N)(Case Acc) valueentry	(Manner Poss)(Pers 1st)(Num SG)		LU \"void\"	\"mein\" \"mein\"entry	(Manner Poss)(Pers 2nd)(Num SG)		LU \"void\"	\"dein\" \"dein\"entry	(Manner Poss)(Pers 3rd)(Gender M)(Num SG)	LU \"void\"	\"sein\" \"sein\"entry	(Manner Poss)(Pers 3rd)(Gender N)(Num SG)	LU \"void\"	\"sein\" \"sein\"entry	(Manner Poss)(Pers 3rd)(Gender F)(Num SG)	LU \"void\"	\"ihr\" \"ihr\"entry	(Manner Poss)(Pers 1st)(Num PL)		LU \"void\"	\"unser\" \"unser\" \"unsr\"entry	(Manner Poss)(Pers 2nd)(Num PL)		LU \"void\"	\"euer\" \"euer\" \"eur\"entry	(Manner Poss)(Pers 3rd)(Num PL)		LU \"void\"	\"ihr\" \"ihr\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Possessive-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Demonstr-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 549citation-forms(ICat Demonstr-Pron.der/die/das)(Case Nom)word-forms(ICat Demonstr-Pron.der/die/das)(Case Nom)(ICat Demonstr-Pron.der/die/das)(Case Gen)(ICat Demonstr-Pron.der/die/das)(Case Dat)(ICat Demonstr-Pron.der/die/das)(Case Acc)paradigms(Cat Pron)entry	(Manner Demonstr)(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"		(Case Nom)(ICat Ana/Cataphoric)	\"dessen\" \"dessen\"	(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"dessen\" \"dessen\"	(Case Gen)(ICat Cataphoric)	\"dem\" \"dem\"		(Case Dat)(ICat Ana/Cataphoric)	\"den\" \"den\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"		(Case Nom)(ICat Ana/Cataphoric)	\"deren\" \"deren\"		(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"derer\" \"derer\"		(Case Gen)(ICat Cataphoric)	\"der\" \"der\"		(Case Dat)(ICat Ana/Cataphoric)	\"die\" \"die\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"		(Case Nom)(ICat Ana/Cataphoric)	\"dessen\" \"dessen\"	(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"dessen\" \"dessen\"	(Case Gen)(ICat Cataphoric)	\"dem\" \"dem\"		(Case Dat)(ICat Ana/Cataphoric)	\"das\" \"das\"		(Case Acc)(ICat Ana/Cataphoric)entry	(Manner Demonstr)(Num PL)	LU \"void\"	\"die\" \"die\"		(Case Nom)(ICat Ana/Cataphoric)	\"deren\" \"deren\"		(Case Gen)(ICat Anaphoric) ; Duden, 550.2	\"derer\" \"derer\"		(Case Gen)(ICat Cataphoric)	\"denen\" \"denen\"		(Case Dat)(ICat Ana/Cataphoric)	\"die\" \"die\"		(Case Acc)(ICat Ana/Cataphoric)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |der/die/das|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 551citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)ISRules\".*dies\" (ICat Pron-Stem)	\"es/\" (Case Nom)(Gender N)|(Case Acc)(Gender N) value ; (eben)dieses u. (eben)diesentry	(Manner Demonstr)	LU \"void\"	\"dies\" \"dies\"entry	(Manner Demonstr)	LU \"void\"	\"jen\" \"jen\"; ebenfalls: ebendieser, ebenjener" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |dieser/jener|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 555citation-forms(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender M)(Case Nom)word-forms(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender M)(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender F)(ICat Demonstr-Pron.Art+Pron-Stem)(Num SG)(Gender N)(ICat Demonstr-Pron.Art+Pron-Stem)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Demonstr)	LU \"void\"	\"derjenige\" \"derjenige\"		(Num SG)(Gender M)(Case Nom)	\"desjenigen\" \"desjenigen\"	(Num SG)(Gender M)(Case Gen)	\"demjenigen\" \"demjenigen\"	(Num SG)(Gender M)(Case Dat)	\"denjenigen\" \"denjenigen\"	(Num SG)(Gender M)(Case Acc)	\"diejenige\" \"diejenige\"		(Num SG)(Gender F)(Case Nom)	\"derjenigen\" \"derjenigen\"	(Num SG)(Gender F)(Case Gen)	\"derjenigen\" \"derjenigen\"	(Num SG)(Gender F)(Case Dat)	\"diejenige\" \"diejenige\"		(Num SG)(Gender F)(Case Acc)	\"dasjenige\" \"dasjenige\"		(Num SG)(Gender N)(Case Nom)	\"desjenigen\" \"desjenigen\"	(Num SG)(Gender N)(Case Gen)	\"demjenigen\" \"demjenigen\"	(Num SG)(Gender N)(Case Dat)	\"dasjenige\" \"dasjenige\"		(Num SG)(Gender N)(Case Acc)	\"diejenigen\" \"diejenigen\"	(Num PL)(Case Nom)	\"derjenigen\" \"derjenigen\"	(Num PL)(Case Gen)	\"derjenigen\" \"derjenigen\"	(Num PL)(Case Dat)	\"diejenigen\" \"diejenigen\"	(Num PL)(Case Acc);ebenso: derselbe u. selbe;!!!: adäquatere Lösung mit Aufteilung in Art+Pron-Stem+Pron-Suffix \"der+jen(+)ig+e\", \"des+jen(+)ig+en\" etc. (evtl. durch WFRule Art+Pron-Stem) wäre vorzuziehen; verlangte aber umfangreiche Spezifikation von Formativen, d.h. SPezifikation von Art und Pron-Suffix für jede einzelne Wortform." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |derselbe/derjenige|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Rel/Interrog-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 559, eigenen Regel, da teilw. (Case Gen) andere Formen als Artikel und Demonstrativpronomencitation-forms(ICat Rel-Pron)(Case Nom)word-forms(ICat Rel-Pron)(Case Nom)(ICat Rel-Pron)(Case Gen)(ICat Rel-Pron)(Case Dat)(ICat Rel-Pron)(Case Acc)paradigms(Cat Pron) ; Individually Added Features werden bei paradigms-restrictions nicht berücksichtigt (Manner Relative) o. (Gen M)(Num SG)entry	(Manner Relative)(Gender M)(Num SG)	LU \"void\"	\"der\" \"der\"		(Case Nom)	\"dessen\" \"dessen\"	(Case Gen)	\"dem\" \"dem\"		(Case Dat)	\"den\" \"den\"		(Case Acc)entry	(Manner Relative)(Gender F)(Num SG)	LU \"void\"	\"die\" \"die\"		(Case Nom)	\"deren\" \"deren\"		(Case Gen)	\"der\" \"der\"		(Case Dat)	\"die\" \"die\"		(Case Acc)entry	(Manner Relative)(Gender N)(Num SG)	LU \"void\"	\"das\" \"das\"		(Case Nom)	\"dessen\" \"dessen\"	(Case Gen)	\"dem\" \"dem\"		(Case Dat)	\"das\" \"das\"		(Case Acc)entry	(Manner Relative)(Num PL)	LU \"void\"	\"die\" \"die\"	(Case Nom)	\"deren\" \"deren\"	(Case Gen)	\"den\" \"den\"	(Case Dat)	\"die\" \"die\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |der/die/das|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS ";Duden 563citation-forms(ICat Rel-Pron)(Case Nom)word-forms(ICat Rel-Pron)(Case Nom)(ICat Rel-Pron)(Case Gen)(ICat Rel-Pron)(Case Dat)(ICat Rel-Pron)(Case Acc)paradigms(Cat Pron)entry	(Manner Relative)(Manner Interrog)(Gender M)(Gender F)	\"wer\" \"wer\"		(Case Nom)	\"wessen\" \"wessen\"	(Case Gen)	\"wem\" \"wem\"		(Case Dat)	\"wen\" \"wen\"		(Case Acc)entry	(Manner Relative)(Manner Interrog)(Gender N)	\"was\" \"was\"		(Case Nom)	\"wessen\" \"wessen\"	(Case Gen)	\"was\" \"was\"		(Case Dat)	\"was\" \"was\"		(Case Acc)	deleted-forms	(Case Dat) ; Duden 563: was im Dat nur umgangsspr. o. literarisch" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |wer/was|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 561; welcher ebenfalls interrrog.; Feature (Manner Interrog) individually added; zu Case Gen: Duden 561.1 u. 561.3 = Adj.Strong-Decl, sonst deklination wie \"dieser\"citation-forms(ICat Pron-Stem)		(ICat Pron-Suffix.Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Relative)	LU \"void\"	\"welch\" \"welch\"	deleted-forms	(Case Gen) ; Duden 561.1entry	(Manner Interrog)	LU \"void\"	\"welch\" \"welch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |welcher|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Indefinite-Pronoun|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 565, ; Gen SG Mask. u. Neutr. ebenfalls Strong-Decl, Duden 565.2; sonst Deklination wie \"dieser\"citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)paradigms(Decl Invar) ; Duden 565.3(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Indef)	LU \"void\"	\"all\" \"all\"entry	(Manner Indef)	LU \"void\" ; Duden 574	\"manch\" \"manch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |all/manch|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 567, Deklination wie \"dieser\", nur SGcitation-forms(ICat Pron-Stem)		(ICat Pron-Suffix.Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)paradigms(Gender M)(Gender F)(Gender N)ISRules\"(.*)ein\" (ICat Pron-Stem)		\"es/s\" (Gender N)(Case Nom)|(Gender N)(Case Acc) value ; eines u. eins, irgendeines u. irgendeinentry	(Manner Indef)	LU \"void\"	\"ein\" \"ein\"; ebenfalls: irgendein, mit Nom Mask SG, Nom + Akk Neutr SG je zweite, ungebeugte Form \"irgendein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |einer|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 568citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)(Case Nom); PL-Form als Zitatform wie in Duden R; in Duden WB Zitatform= \"etlich...\" resp. \"einig...\"word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)entry	(Manner Indef)	LU \"void\"	\"einig\" \"einig\"entry	(Manner Indef)	LU \"void\"	\"etlich\" \"etlich\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |einige/etliche|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS ";Duden 570citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender M)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Mixed)(Num SG)(Gender N); gemischte Deklination bei; ein jeder, eines jeden, einem jeden etc. Duden 570paradigms(Decl Strong)(Gender M)(Decl Strong)(Gender F)(Decl Strong)(Gender N)(Decl Mixed)(Gender M)(Decl Mixed)(Gender F)(Decl Mixed)(Gender N)entry	(Manner Indef)	LU \"void\"	\"jed\" \"jed\"; in Verbindung ein jeder, eines jeden etc. Adj. Mixed-Decl.; muß noch in Paradigma aufgenommen werden; jeglicher, jedweder = veraltend; falls dennoch aufnehmen, eigene IRule mit Suffixen (Num SG)(Decl-Strong) Genitiv (ICat en)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jeder|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 570, innerhalb der Pronomen idiosynkratisches Deklinationsparadigmacitation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jedermann)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jedermann)paradigms(Cat Pron)entry	(Manner Indef)	LU \"void\"	\"jedermann\" \"jedermann\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jedermann|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 571citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jemand)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-jemand)paradigms(Cat Pron)ISRules\".*mand\" (ICat Pron-Stem)	\"es/s\" (ICat Pron-Suffix) value ; niemandes u. niemands\".*mand\" (ICat Pron-Stem)	\"e[mn]/\" (ICat Pron-Suffix) value ; jemandem u. jemand, niemanden u. niemandentry	(Manner Indef)	LU \"void\"	\"jemand\" \"jemand\"entry	(Manner Indef)	LU \"void\"	\"niemand\" \"niemand\"; eigene Deklinationsklasse, obwohl strong-Suffixe, da features für gender nicht erwünscht." :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |jemand/niemand|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 572citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat -)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Nom)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Gen)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num SG)(Gender N)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(ICat Decl-Strong)(Num PL)paradigms(Num SG)(Gender M)(Num SG)(Gender F)(Num SG)(Gender N)(Num PL)ISRules\"kein\" (ICat Pron-Stem)		\"es/s\" (Num SG)(Gender N)(Case Nom)|(Num SG)(Gender N)(Case Acc) valueentry	(Manner Indef)	LU \"void\"	\"kein\" \"kein\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |kein|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 575, nur PLcitation-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)(Case Nom)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix.Decl-Strong)(Num PL)paradigms(Num PL)entry	(Manner Indef)	LU \"void\"	\"mehrer\" \"mehrer\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |mehrere|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; Duden 578, Deklination wie Adj.citation-forms(ICat Pron-Stem)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Nom)(ICat er)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender M)(Case Acc)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Nom)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Gen)(ICat en)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Dat)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num SG)(Gender N)(Case Acc)(ICat es)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Strong)(Num PL)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender M)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender F)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num SG)(Gender N)(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Weak)(Num PL);    schwache Dekl. d.h. zwischen Def. Art. und Subst. nicht gebräuchlich, Duden S. 290, Fußnote 1;;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender M)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender F)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num SG)(Gender N)(Decl Mixed);;;    (ICat Pron-Stem)	(ICat Pron-Suffix)(Num PL)(Decl Mixed)paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)entry	(Manner Indef)	LU \"void\"	\"sämtlich\" \"sämtlich\"entry	(Manner Indef)	LU \"void\"	\"ander\" \"ander\" \"andr\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |saemtlich|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)word-forms(ICat Pron-Stem)	(ICat Pron-Suffix)(Decl Invar)entry	(Manner Demonstr)	LU \"void\" ; Duden 557	\"selbst\" \"selbst\"entry	(Manner Demonstr)	LU \"void\" ; Duden 557	\"selber\" \"selber\"entry	(Manner Indef)(Num SG)(Gender N)	LU \"void\" ; Duden 569	\"etwas\" \"etwas\"entry	(Manner Indef)(Num SG)(Gender N)	LU \"void\" ; Duden 569	\"nichts\" \"nichts\"entry	(Manner Indef)(Num SG)(Case Nom)	LU \"void\" ; Duden 573	\"man\" \"man\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|IIRule| . |Pron-Invar|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pers-Pron|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Refl-Pron|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives(ICat der/die/das)	_	(Case Nom)(ICat Ana/Cataphoric)	_	(Case Gen)(ICat Anaphoric)	_	(Case Gen)(ICat Cataphoric)	_	(Case Dat)(ICat Ana/Cataphoric)	_	(Case Acc)(ICat Ana/Cataphoric)(ICat Art+Pron-Stem)(Num SG)(Gender M)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num SG)(Gender F)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num SG)(Gender N)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)(ICat Art+Pron-Stem)(Num PL)	_	(Case Nom)	_	(Case Gen)	_	(Case Dat)	_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Demonstr-Pron|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_	(Case Nom)_	(Case Gen)_	(Case Dat)_	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Rel-Pron|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pron-Stem|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Pron-Suffix|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"\" \"\"		(Case Nom)(ICat -)	\"er\" \"er\"	(Case Nom)(ICat er)	\"es\" \"es\"	(Case Gen)(ICat es)	\"en\" \"en\"	(Case Gen)(ICat en)	\"em\" \"em\" \"m\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"\" \"\"			(Case Nom)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Nom)(ICat es)	\"es\" \"es\"		(Case Gen)(ICat es)	\"en\" \"en\"		(Case Gen)(ICat en)	\"em\" \"em\" \"m\"		(Case Dat)	\"\" \"\"			(Case Acc)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Acc)(ICat es)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc); Deklination entspricht starker adjektivischer Deklination (Decl Strong); spezielle Features (evtl andere Benennung):; (ICat -) = substantivierter Gebrauch, Duden 547 (Pron.Poss), 572 (kein); (Gender M)(Case Nom)(ICat er), (Gender N)(Case Nom)(ICat es), (Gender N)(Case Acc)(ICat es) = normale starke Deklination; (Case Gen)(ICat es) = pronominale Deklination; (Case Gen)(ICat en) = adjektivische Deklination" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Strong|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num PL)	\"en\" \"en\" \"n\"	(Case Nom)	\"en\" \"en\" \"n\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Weak|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"er\" \"er\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"es\" \"es\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"es\" \"es\"	(Case Acc)(Num PL)	\"en\" \"en\"	(Case Nom)	\"en\" \"en\"	(Case Gen)	\"en\" \"en\"	(Case Dat)	\"en\" \"en\"	(Case Acc); = Adjective Mixed Declension" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Mixed|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Decl| . |Invar|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"	(Case Nom)\"s\" \"s\"	(Case Gen)\"\" \"\"	(Case Dat)\"\" \"\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-jedermann|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives\"\" \"\"		(Case Nom)\"es\" \"es\" \"s\"	(Case Gen)\"em\" \"em\" \"\"	(Case Dat)\"en\" \"en\" \"\"	(Case Acc)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-jemand|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Adv|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Adv)word-forms(ICat Adv)entry	(Manner Modal)	LU \"void\"	\"sehr\" \"sehr\"entry	(Manner Temporal)	LU \"void\"	\"heute\" \"heute\"entry	(Manner Temporal)	LU \"void\"	\"noch\" \"noch\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Adv|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Adv|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Prep|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Prep)word-forms(ICat Prep)entry	LU \"void\"	\"an\" \"an\"entry	LU \"void\"	\"auf\" \"auf\"entry	LU \"void\"	\"aus\" \"aus\"entry	LU \"void\"	\"bei\" \"bei\"entry	LU \"void\"	\"durch\" \"durch\"entry	LU \"void\"	\"für\" \"für\"entry	LU \"void\"	\"hinter\" \"hinter\"entry	LU \"void\"	\"in\" \"in\"entry	LU \"void\"	\"mit\" \"mit\"entry	LU \"void\"	\"neben\" \"neben\"entry	LU \"void\"	\"über\" \"über\"entry	LU \"void\"	\"unter\" \"unter\"entry	LU \"void\"	\"um\" \"um\"entry	LU \"void\"	\"von\" \"von\"entry	LU \"void\"	\"vor\" \"vor\"entry	LU \"void\"	\"zu\" \"zu\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Prep|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Prep|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|Cat| . |Conjunct|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "citation-forms(ICat Conjunct)word-forms(ICat Conjunct)entry	LU \"void\"	\"und\" \"und\"entry	LU \"void\"	\"dass\" \"dass\"entry	LU \"void\"	\"zu\" \"zu\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |Conjunct|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "underspecified IFormatives_" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Conjunct|)) :MOD2-P NIL) NIL NIL NIL #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified IFormatives(Num SG)(Gender M)	\"\" \"\"		(Case Nom)(ICat -)	\"er\" \"er\"	(Case Nom)(ICat er)	\"es\" \"es\"	(Case Gen)(ICat es)	\"en\" \"en\"	(Case Gen)(ICat en)	\"em\" \"em\" \"m\"	(Case Dat)	\"en\" \"en\" \"n\"	(Case Acc)(Num SG)(Gender F)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"er\" \"er\"	(Case Dat)	\"e\" \"e\"		(Case Acc)(Num SG)(Gender N)	\"\" \"\"			(Case Nom)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Nom)(ICat es)	\"es\" \"es\"		(Case Gen)(ICat es)	\"en\" \"en\"		(Case Gen)(ICat en)	\"em\" \"em\" \"m\"		(Case Dat)	\"\" \"\"			(Case Acc)(ICat -)	\"es\" \"es\" \"s\" \"\"	(Case Acc)(ICat es)(Num PL)	\"e\" \"e\"		(Case Nom)	\"er\" \"er\"	(Case Gen)	\"en\" \"en\" \"n\"	(Case Dat)	\"e\" \"e\"		(Case Acc); Deklination entspricht starker adjektivischer Deklination (Decl Strong); spezielle Features (evtl andere Benennung):; (ICat -) = substantivierter Gebrauch, Duden 547 (Pron.Poss), 572 (kein); (Gender M)(Case Nom)(ICat er), (Gender N)(Case Nom)(ICat es), (Gender N)(Case Acc)(ICat es) = normale starke Deklination; (Case Gen)(ICat es) = pronominale Deklination; (Case Gen)(ICat en) = adjektivische Deklination" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|ICat| . |Decl-Strong|)) :MOD2-P NIL) #[INFLECTION-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "; linke, rechte, obere, untere, mittlere, oberste, äussere, äusserstecitation-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Weak)(Num SG)(Gender M)(Case Nom)word-forms(ICat A-Stem)	(ICat A-Suffix)(Decl Strong)(ICat A-Stem)	(ICat A-Suffix)(Decl Weak)paradigms(Decl Strong)(Num SG)(Gender M)(Decl Strong)(Num SG)(Gender F)(Decl Strong)(Num SG)(Gender N)(Decl Strong)(Num PL)(Decl Weak)(Num SG)(Gender M)(Decl Weak)(Num SG)(Gender F)(Decl Weak)(Num SG)(Gender N)(Decl Weak)(Num PL)entry	\"link\" \"link\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RIRule| . |A-Attributive-Only|)) :MOD2-P NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*000000000000000000000000000001111001111100000000001000000000000000000000000000000000000000000000000000000001110011111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 2 44 0 55 63 98 101 104) (0 1 4) (1 19 10 6 7 3 12) (4 5 17 21 13 14 15 18) (2 8 33 40 41) (8 9 11 16 20 22 23 24 25 26 27 28) (33 34) (41 42 43) (44 45 46 47 48 49 111 51 52 53 54) (55 56 59) (56 57 58) (59 60 61 62) (63 64 65 66 67 71 75 85 86 87 88 89 90 91) (67 68 69 70) (71 72 73 74) (75 76 77 78 79 80 81 82 83 84) (91 92 110 93 94 95 96 97) (98 99 100) (101 102 103) (104 105 106)) :COLLAPSED-SUBTREES (0 1 4 2 8 33 41 44 55 56 59 63 67 71 75 91 98 101 104))) #[WORD-FORMATION-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Derivation|)) :MOD2-P T) NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Prefixing|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Non-Detachable)(Cat V)	(RIRule No-Detachable-Prefix)|(IIRule No-Detachable-Prefix) >	2	(ICat V-Stem)WFSRules\"°(.*)/\\1\" (ICat V-Stem)\"(.*)/°\\1\" (WFCat V-Prefix)target(?IRule ?)	1 2	(ICat V-Stem)source-constraint1	\"ver\"(RIRule No-Detachable-Prefix)	2	\"änder\"entry	(Aux haben)	LU \"void\"	\"°veränder\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |Non-Detachable-Prefix|)) :MOD2-P NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |Detachable-Prefix|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Detachable)(RIRule No-Detachable-Prefix)	2	(ICat V-Stem)target(RIRule Detachable-Prefix)	separable	1	(ICat Detachable-Prefix)	2	(ICat V-Stem)source-constraint1	\"ab\"(RIRule No-Detachable-Prefix)	2	\"änder\"entry	(Aux haben)	LU \"void\"	\"ab\"	(ICat Detachable-Prefix)	\"änder\"	(ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |V_Regular|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "source1	(WFCat V-Prefix.Detachable)(IIRule No-Detachable-Prefix)	2	(ICat V-Stem)target(IIRule Detachable-Prefix)	separable	1	(ICat Detachable-Prefix)	2	(ICat V-Stem)source-constraint1	\"an\"(IIRule No-Detachable-Prefix)	2	\"b#ei#ss\"entry	(Aux haben)	LU \"void\"	\"an\"		(ICat Detachable-Prefix)	\"b#ei#ss\"	(ICat V-Stem)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|RWFRule| . |V_Irregular|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |V-Prefix|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified WFFormatives\"be\" \"be\"\"ent\" \"ent\"\"er\" \"er\"\"miss\" \"miss\"\"ver\" \"ver\"\"zer\" \"zer\"\"durch\" \"durch\"\"hinter\" \"hinter\"\"über\" \"über\"\"um\" \"um\"\"unter\" \"unter\"\"wider\" \"wider\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Non-Detachable|)) :MOD2-P NIL) #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "fully specified WFFormatives\"ab\" \"ab\"\"an\" \"an\"\"auf\" \"auf\"\"aus\" \"aus\"\"bei\" \"bei\"\"ein\" \"ein\"\"fehl\" \"fehl\"\"los\" \"los\"\"nach\" \"nach\"\"vor\" \"vor\"\"wieder\" \"wieder\"\"zu\" \"zu\"\"zurecht\" \"zurecht\"\"durch\" \"durch\"\"hinter\" \"hinter\"\"über\" \"über\"\"um\" \"um\"\"unter\" \"unter\"\"wider\" \"wider\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . |Detachable||WFCat| . |To-V|)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[WF-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|WFCat| . V-T\o-V)) :MOD2-P T) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*11111111111111101111001111111111000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 15) (15 342) (342 384) (384 20) (20 21 32 35) (32 33 34) (35 36 37)) :COLLAPSED-SUBTREES (15 342 384 20 32 35))) #[KEY-WORDS-WINDOW ( :WINDOW-CONTENTS "pp = (Cat V)(Mod Part)(Temp Perf)inf = (Cat V)(Mod Inf)(Temp Pres)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[TRANSFORMATIONS-WINDOW ( :WINDOW-CONTENTS "PPV-Inversion(VP PP V) -> (VP V PP)VV-Inversion(VP V-1 V-2) -> (VP V-2 V-1)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[PERIPHR-INFL-WINDOW ( :WINDOW-CONTENTS "Auxiliary-Perfect(Cat V)(Mod Ind)(Temp Pres) + pp = (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Perf)(Cat V)(Mod Ind)(Temp Impf) + pp = (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Plusq)Auxiliary-Future(Cat V)(Mod Ind)(Temp Pres) + inf = (POS 1)(CFORM 2)(PERC 1)(Cat V)(Mod Ind)(Temp Fut)" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[PM-TEST-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[TEST-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[MESSAGE-WINDOW ( :WINDOW-CONTENTS "> PM Compilation ok. It took 20 secondsich werde gehener wird schlagendu wirst alt seinwir werden diesen menschen kennendass du gehen wirstdass wir schlagen werdener wird ins gras beissendass er ins gras beissen wirdzudassundzuvorvonumunterübernebenmitinhinterfürdurchbeiausaufannochheutesehrmannichtsetwasselberselbstmanchalleineretlicheeinigejederjedermannniemandjemandkeinmehrereandersämtlichdiedasdiederwaswerwelcherwelcherdiedasdiederjenerdieserderjenigeihreuerunserihrseinseindeinmeineinandersicheuchunssichsichsichdichmichsieihrwiressieerduicheindiedasdiederseinanbeissenwerdenschlagenkommengehenbeissenabändernwendensendenrennennennenkennenbrennenhabenändernverändernlinkequittrosarundfadegrünaltgutnahehochberglehrlinggartenstaatgrasbilddeckmenschkraftmutterblumeomaherzcompilation took 1 minute, 28 secondsCF-Compile successfully completed" :HELP-LOC NIL :APPL-LABELS NIL :MOD2-P T) #[CLASS-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . VP)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . PP+V)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "SYNTAX-TREE(VP (PP Pep NP) V)MODIFICATIONSV >TRANSFORMATIONSPPV-InversionEXAMPLEin das gras <beissen>in	(Cat Prep)das	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Acc)gras	(Cat N)(Gender N)(Num SG)(Case Acc)beissen	(Cat V)^(Form Passive)-" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PHClass| . |[Prep+NP]+V|)) :MOD2-P NIL) NIL #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PIClass| . |Auxiliary|)) :MOD2-P T) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "SYNTAX-TREE(VP V V)MODIFICATIONSV >TRANSFORMATIONSVV-InversionPERIPHR-INFLAuxiliary-PerfectEXAMPLE<haben> pphaben (Cat V)pp (Cat V)(Aux haben)-EXAMPLE<sein> ppsein (Cat V)pp (Cat V)(Aux sein)-" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PIClass| . |Perfect|)) :MOD2-P NIL) #[CLASS-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "SYNTAX-TREE(VP V V)MODIFICATIONSV >TRANSFORMATIONSVV-InversionPERIPHR-INFLAuxiliary-FutureEXAMPLE<werden> infwerden	(Cat V)-" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|PIClass| . |Future|)) :MOD2-P NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 134 138) (134 135) (135 136) (138 139 140)) :COLLAPSED-SUBTREES (134 135 138))) #[CLITIC-WINDOW ( :TREE-COLLECTION #[WM-TREE-COLLECTION ( :ELEMENTS #(NIL NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Prep|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Article|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"das\"	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Acc)(CElement Clit-Form)	\"s\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |das|)) :MOD2-P NIL) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"den\"	(Cat Art)(Manner Def)(Num SG)(Gender M)(Case Acc)(CElement Clit-Form)	\"n\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |den|)) :MOD2-P NIL) NIL NIL NIL NIL NIL NIL NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat V) {{\".*[^esz]\"}} + (CElement Pron.es-Clit-Form) = (Cat V), (CElement Pron.es-Full-Form)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |Verb+es|)) :MOD2-P NIL) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement an)	\"an\"	(Cat Prep)(CElement in)	\"in\"	(Cat Prep)(CElement von)	\"von\"	(Cat Prep)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Full-Form|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement an)	\"a\"(CElement in)	\"i\"(CElement von)	\"vo\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Clit-Form|)) :MOD2-P NIL) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "%separable + (CElement Conjunct.zu) + (Cat V)(Mod Inf)(Temp Pres) = (CElement Conjunct.zu), %separable + (Cat V)(Mod Inf)(Temp Pres); einzustudieren = zu einstudieren" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |zu+V-Separable|)) :MOD2-P NIL) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement es-Full-Form)		\"es\" (Cat Pron)(Pers 3rd)(Num SG)(Gender N)(CElement es-Clit-Form)		\"’s\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Pron|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement zu)	\"zu\" (Cat Conjunct)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Conjunct|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat V)(Aux haben)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.haben) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.haben)(Cat V)(Aux sein)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.sein) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.sein)(Cat V)(Mod Part)(Temp Perf), (CElement Conjunct.zu), (CElement Auxiliary.werden) = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.werden); gegessen zu haben = zu gegessen haben, gegangen zu sein = zu gegangen sein, gesehen zu werden = zu gesehen werden(Cat V)(Mod Inf)(Temp Pres), (CElement Conjunct.zu), (CElement Auxiliary.werden) = (CElement Conjunct.zu), (Cat V)(Mod Inf)(Temp Pres), (CElement Auxiliary.werden); essen zu werden = zu essen werden(Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.worden), (CElement Conjunct.zu)  = (CElement Conjunct.zu), (Cat V)(Mod Part)(Temp Perf), (CElement Auxiliary.worden); gegessen worden zu sein = zu gegessen worden sein" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |zu+Complex_Inf|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement haben)	\"haben\" (Cat V)(Aux haben)(Mod Inf)(Temp Pres)(CElement sein)		\"sein\" (Cat V)(Aux sein)(Mod Inf)(Temp Pres)(CElement werden)	\"werden\" (Cat V)(Aux sein)(Mod Inf )(Temp Pres)(CElement worden)	\"worden\" (Cat V)(Aux sein)(Mod Part)(Temp Perf)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Auxiliary|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"der\"	(Cat Art)(Manner Def)(Gender F)(Num SG)(Case Dat)(CElement Clit-Form)	\"r\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |der|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |dem|)) :MOD2-P T) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"dem\"	(Cat Art)(Manner Def)(Gender M)(Num SG)(Case Dat)(CElement Clit-Form)	\"m\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Masc|)) :MOD2-P NIL) #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(CElement Full-Form)	\"dem\"	(Cat Art)(Manner Def)(Gender N)(Num SG)(Case Dat)(CElement Clit-Form)	\"m\"" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CElement| . |Neut|)) :MOD2-P NIL) NIL #[CLITIC-NODE-TEXT-WINDOW ( :WINDOW-CONTENTS "(Cat Prep) {\"an\", \"auf\", \"durch\", \"für\", \"hinter\", \"in\", \"über\", \"um\", \"unter\", \"vor\"} + (CElement Article.das.Clit-Form) = (Cat Prep), (CElement Article.das.Full-Form)(Cat Prep) {\"bei\", \"hinter\", \"über\", \"unter\", \"zu\"} + (CElement Article.dem.Masc.Clit-Form) = (Cat Prep), (CElement Article.dem.Masc.Full-Form)(Cat Prep) {\"bei\", \"hinter\", \"über\", \"unter\", \"zu\"} + (CElement Article.dem.Neut.Clit-Form) = (Cat Prep), (CElement Article.dem.Neut.Full-Form)(Cat Prep) {\"hinter\", \"über\", \"unter\"} +  (CElement Article.den.Clit-Form) = (Cat Prep), (CElement Article.den.Full-Form)(Cat Prep) {\"zu\"} +  (CElement Article.der.Clit-Form) = (Cat Prep), (CElement Article.der.Full-Form)(CElement Prep.Clit-Form) + (CElement Article.dem.Masc.Clit-Form) = (CElement Prep.Full-Form), (CElement Article.dem.Masc.Full-Form)(CElement Prep.Clit-Form) + (CElement Article.dem.Neut.Clit-Form) = (CElement Prep.Full-Form), (CElement Article.dem.Neut.Full-Form)" :HELP-LOC NIL :APPL-LABELS NIL :NODE-NAME ((|CRule| . |Prep+Article|)) :MOD2-P NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*0000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 50 :TREE ((ROOT 2 3 21 22 24 30 14 19 23) (3 4 6 25 26) (2 16 17) (26 27 28)) :COLLAPSED-SUBTREES (3 2 26)))) :DATA-OBJECTS (#[LEXICAL-STRING-MAP ( :SYSTEM-CHARACTERS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\! NIL #\# NIL NIL NIL NIL NIL NIL NIL NIL NIL #\- NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\A NIL #\C #\D #\E NIL NIL #\H #\I NIL NIL NIL NIL #\N #\O NIL NIL NIL #\S #\T #\U NIL NIL NIL NIL NIL NIL NIL NIL NIL #\_ NIL #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\za #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z NIL NIL NIL NIL) :SORT-EXCEPTIONS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ss" . 1) ("ue" . 1) NIL NIL NIL NIL NIL ("oe" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ae" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-LIGATURES #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL ((#\s . 0)) NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-NORMALS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (27 . 0) (31 . 0) (28 . 0) (26 . 0) (20 . 2) (14 . 4) (14 . 3) NIL NIL NIL (14 . 2) (4 . 4) (30 . 0) NIL NIL (4 . 3) (4 . 2) (0 . 5) (0 . 4) (0 . 3) (0 . 2) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 0) NIL (2 . 1) (3 . 1) (4 . 0) NIL NIL (7 . 1) (8 . 0) NIL NIL NIL NIL (13 . 1) (14 . 0) NIL NIL NIL (18 . 1) (19 . 1) (20 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL (29 . 0) NIL (0 . 1) (1 . 0) (2 . 0) (3 . 0) (4 . 1) (5 . 0) (6 . 0) (7 . 0) (8 . 1) (9 . 0) (10 . 0) (11 . 0) (12 . 0) (13 . 0) (14 . 1) (15 . 0) (16 . 0) (17 . 0) (18 . 0) (19 . 0) (20 . 1) (21 . 0) (22 . 0) (23 . 0) (24 . 0) (25 . 0) NIL NIL NIL NIL)) #[SURFACE-STRING-MAP ( :SYSTEM-CHARACTERS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\- NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\A NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\O NIL NIL NIL NIL NIL #\U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\za #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z NIL NIL NIL NIL) :SORT-EXCEPTIONS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ss" . 1) ("ue" . 1) ("oe" . 1) ("ae" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-LIGATURES #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL ((#\s . 0)) NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-NORMALS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (28 . 0) (26 . 0) (20 . 2) (14 . 2) (0 . 2) NIL NIL NIL NIL NIL NIL NIL (27 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (14 . 0) NIL NIL NIL NIL NIL (20 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 1) (1 . 0) (2 . 0) (3 . 0) (4 . 0) (5 . 0) (6 . 0) (7 . 0) (8 . 0) (9 . 0) (10 . 0) (11 . 0) (12 . 0) (13 . 0) (14 . 1) (15 . 0) (16 . 0) (17 . 0) (18 . 0) (19 . 0) (20 . 1) (21 . 0) (22 . 0) (23 . 0) (24 . 0) (25 . 0) NIL NIL NIL NIL)) #[C-LEXICAL-STRING-MAP ( :SYSTEM-CHARACTERS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\! NIL #\# NIL NIL NIL NIL NIL NIL NIL NIL NIL #\- NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\A NIL #\C #\D #\E NIL NIL #\H #\I NIL NIL NIL NIL #\N #\O NIL NIL NIL #\S #\T #\U NIL NIL NIL NIL NIL NIL NIL NIL NIL #\_ NIL #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\za #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z NIL NIL NIL NIL) :SORT-EXCEPTIONS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ss" . 1) ("ue" . 1) NIL NIL NIL NIL NIL ("oe" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ae" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-LIGATURES #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL ((#\s . 0)) NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-NORMALS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (27 . 0) (31 . 0) (28 . 0) (26 . 0) (20 . 2) (14 . 4) (14 . 3) NIL NIL NIL (14 . 2) (4 . 4) (30 . 0) NIL NIL (4 . 3) (4 . 2) (0 . 5) (0 . 4) (0 . 3) (0 . 2) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 0) NIL (2 . 1) (3 . 1) (4 . 0) NIL NIL (7 . 1) (8 . 0) NIL NIL NIL NIL (13 . 1) (14 . 0) NIL NIL NIL (18 . 1) (19 . 1) (20 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL (29 . 0) NIL (0 . 1) (1 . 0) (2 . 0) (3 . 0) (4 . 1) (5 . 0) (6 . 0) (7 . 0) (8 . 1) (9 . 0) (10 . 0) (11 . 0) (12 . 0) (13 . 0) (14 . 1) (15 . 0) (16 . 0) (17 . 0) (18 . 0) (19 . 0) (20 . 1) (21 . 0) (22 . 0) (23 . 0) (24 . 0) (25 . 0) NIL NIL NIL NIL) :MOD2-P NIL) #[C-SURFACE-STRING-MAP ( :SYSTEM-CHARACTERS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\- NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\A NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\O NIL NIL NIL NIL NIL #\U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\% NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\$ NIL NIL NIL NIL #\# NIL NIL NIL NIL NIL NIL NIL #\" NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\! NIL NIL NIL) :INTERNAL-CHARACTERS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\325 #\247 #\237 #\232 #\212 NIL NIL NIL NIL NIL NIL NIL #\- NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\A NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\O NIL NIL NIL NIL NIL #\U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z NIL NIL NIL NIL) :SORT-EXCEPTIONS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ("ss" . 1) ("ue" . 1) ("oe" . 1) ("ae" . 1) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-LIGATURES #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ((#\e . 0)) NIL NIL NIL ((#\s . 0)) NIL ((#\e . 0)) NIL NIL NIL NIL NIL NIL NIL NIL NIL) :SORT-NORMALS #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (28 . 0) (26 . 0) (20 . 2) (14 . 2) (0 . 2) NIL NIL NIL NIL NIL NIL NIL (27 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (14 . 0) NIL NIL NIL NIL NIL (20 . 0) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (0 . 1) (1 . 0) (2 . 0) (3 . 0) (4 . 0) (5 . 0) (6 . 0) (7 . 0) (8 . 0) (9 . 0) (10 . 0) (11 . 0) (12 . 0) (13 . 0) (14 . 1) (15 . 0) (16 . 0) (17 . 0) (18 . 0) (19 . 0) (20 . 1) (21 . 0) (22 . 0) (23 . 0) (24 . 0) (25 . 0) NIL NIL NIL NIL) :MOD2-P NIL) #[INTERNAL-DATA ( :ATTRIBUTES #]((|Degree| (|Pos| . 22) (|Comp| . 23) (|Super| . 24)) (|IIRule| (|N-Irregular| . 138) (ENS/EN . 139) (|A-Irreg| . 140) (|No-Detachable-Prefix| . 141) (|Detachable-Prefix| . 142) (|sein| . 143) (|Pron-Invar| . 144) (|saemtlich| . 145) (|mehrere| . 146) (|kein| . 147) (|jemand/niemand| . 148) (|jedermann| . 149) (|jeder| . 150) (|einige/etliche| . 151) (|einer| . 152) (|all/manch| . 153) (|Indefinite-Pronoun| . 154) (|welcher| . 155) (|wer/was| . 156) (|Rel/Interrog-Pronoun| . 157) (|derselbe/derjenige| . 158) (|dieser/jener| . 159) (|der/die/das| . 160) (|Demonstr-Pronoun| . 161) (|Possessive-Pronoun| . 162) (|Reflexive-Pronoun| . 163) (|Personal-Pronoun| . 164) (|Indefinite-Article| . 165) (|Definite-Article| . 166)) (|Gender| (M . 44) (F . 45) (N . 46)) (|Num| (SG . 42) (PL . 43)) (|Lexeme| (\a . 57) (\b . 58) (\c . 59) (\d . 60)) (|ICat| (|A-Stem| . 61) (|A-Suffix| . 62) (|Adv| . 63) (|Anaphoric| . 64) (|Ana/Cataphoric| . 65) (|Art-Stem| . 66) (|Art-Suffix| . 67) (|Art+Pron-Stem| . 68) (|Cataphoric| . 69) (|Conjunct| . 70) (|Decl-jedermann| . 71) (|Decl-jemand| . 72) (|Decl-Strong| . 73) (|Def-Article| . 74) (|Degr-Mark| . 75) (|der/die/das| . 76) (|Detachable-Prefix| . 77) (|Demonstr-Pron| . 78) (|Foreign| . 79) (|Interj| . 80) (|N-Stem| . 81) (|N-Suffix| . 82) (|Pers-Pron| . 83) (|Prep| . 84) (|Pron-Stem| . 85) (|Pron-Suffix| . 86) (|Reg| . 87) (|Refl-Pron| . 88) (|Rel-Pron| . 89) (|V-Irregular| . 90) (|V-Prefix| . 91) (|V-Regular| . 92) (|V-Stem| . 93) (|V-Suffix| . 94) (E . 95) (EN . 96) (ER . 97) (ES . 98) (S . 99) (- . 100) (|en| . 101) (|er| . 102) (|es| . 103)) (|ISRule| (|Stressed-e/surface-e| . 299) (|Delete_Special_Part_2_Character| . 300) (|Delete_ge_Part-2| . 301) (|Verbs_e-Deletion_Stem| . 302) (|Verbs_Return_Imper-Exeption| . 303) (|Verbs_e-Deletion_Imper| . 304) (|Verbs_Imper-Exception| . 305) (|Verbs_e-Deletion_Suffix| . 306) (|Verbs_s-Deletion| . 307) (|Verbs_Delete_Avoid_Insertion_Character| . 308) (|Verbs_e-Insertion| . 309) (|Replace-D/d| . 310) (|Replace-T/t| . 311) (|Replace-SCH/sch| . 312) (|Adj_Super_Insert-e_after_Vow+h| . 313) (|Adj_Super_Insert-e_after_Diphth| . 314) (|Adj_Super_Insert-e_after_[dt]| . 315) (|Adj_Super_Insert-e_after_Cons+sch| . 316) (|Adj_Super_Insert-e_after_Vow+sch| . 317) (|Adj_Super_Avoid_Insert-e_With_isch| . 318) (|Adj_Super_Insert-e_after_[sxz]| . 319) (|Adj_Comp_Delete-e_e[ln]-Stem| . 320) (|Adj_Delete-e_e-Stem| . 321) (|Adj_Delete-e_Vow+er-Stem| . 322) (|Adj_Delete-e_el-Stem| . 323) (|N_Double_Dat_SG_Form| . 324) (|N_Double_Gen_SG_Form| . 325) (|N-e-Deletion_Dat_SG_after_Vow+h| . 326) (|N-e-Deletion_Dat_SG_after_Diphth| . 327) (|N_e-Deletion_after_e[lrn]-Stem| . 328) (|N_e-Deletion_after_e-Stem| . 329) (|N_Change_U/u| . 330) (|N_Change_O/o| . 331) (|N_Change_A/a| . 332) (|N_PL_Umlaut_U/ue| . 333) (|N_PL_Umlaut_O/oe| . 334) (|N_PL_Umlaut_A/ae| . 335)) (|Mod| (|Inf| . 30) (|Ind| . 31) (|Conj-1| . 32) (|Conj-2| . 33) (|Imper| . 34) (|Part| . 35)) (|Cat| (N . 1) (A . 2) (V . 3) (|Art| . 4) (|Pron| . 5) (|Adv| . 6) (|Prep| . 7) (|Conjunct| . 8) (|Interj| . 9)) (|Case| (|Nom| . 47) (|Gen| . 48) (|Dat| . 49) (|Acc| . 50)) (|Manner| (|Def| . 10) (|Demonstr| . 11) (|Indef| . 12) (|Interrog| . 13) (|Local| . 14) (|Modal| . 15) (|Personal| . 16) (|Poss| . 17) (|Refl| . 18) (|Relative| . 19) (|Rezipr| . 20) (|Temporal| . 21)) (|Pers| (|1st| . 39) (|2nd| . 40) (|3rd| . 41)) (|RIRule| (|N-Regular| . 104) (ES/E . 105) (S/E . 106) ([E]S/[E]N . 107) (S/- . 108) ([E]S/ER . 109) (S/S . 110) ([E]N/[E]N . 111) (-/E . 112) (-/- . 113) (-/[E]N . 114) (-/S . 115) (|Nominalized_A| . 116) (|Gender-M| . 117) (|Gender-F| . 118) (|Gender-N| . 119) (|Foreign| . 120) (|S/EN_Replace_Foreign_Suffix| . 121) (|-/EN_Replace_Foreign_Suffix| . 122) (|SG_S/PL_Foreign_Suffix| . 123) (|SG_-/PL_Foreign_Suffix| . 124) (|A-Regular| . 125) (|A-Regular-Undeclined-e-Optional| . 126) (|A-Two_Comp_Forms| . 127) (|A-Invariable| . 128) (|A-Predicative-Only| . 129) (|A-Attributive-Only| . 130) (|A-Foreign-Stem-er| . 131) (|No-Detachable-Prefix| . 132) (|Detachable-Prefix| . 133) (|Adv| . 134) (|Prep| . 135) (|Conjunct| . 136) (|Interj| . 137)) (|Temp| (|Pres| . 36) (|Impf| . 37) (|Perf| . 38)) (|WFCat| (|Derivation| . 167) (|To-N| . 168) (|To-A| . 169) (|To-V| . 170) (|To-Adv| . 171) (N-T\o-N . 172) (A-T\o-N . 173) (V-T\o-N . 174) (N-T\o-A . 175) (A-T\o-A . 176) (V-T\o-A . 177) (|Adv-To-A| . 178) (N-T\o-V . 179) (A-T\o-V . 180) (V-T\o-V . 181) (|N-To-Adv| . 182) (|A-To-Adv| . 183) (|V-To-Adv| . 184) (|Conversion| . 185) (|Prefixing| . 186) (|Suffixing| . 187) (|Prefixing+Conversion| . 188) (|Prefixing+Suffixing| . 189) (|Compounding| . 190) (|N-Comp| . 191) (|A-Comp| . 192) (|V-Comp| . 193) (|Adv-Comp| . 194) (N+N . 195) (A+N . 196) (V+N . 197) (|Adv+N| . 198) (N+A . 199) (A+A . 200) (V+A . 201) (N+V . 202) (A+V . 203) (|Adv+V| . 204) (|N-Prefix| . 205) (|A-Prefix| . 206) (|V-Prefix| . 207) (|N-Suffix| . 208) (|A-Suffix| . 209) (|V-Suffix| . 210) (|Adv-Suffix| . 211) (|Umlaut| . 212) (|No-Umlaut| . 213) (|ge-Participle| . 214) (|Hyphen| . 215) (|Detachable| . 216) (|Non-Detachable| . 217) (|Pseudo-Part| . 218) (|Linking-Element| . 219) (|Pre-+Suffixing| . 220) (|With-Linking-Element| . 221) (|With-Impf-Stem| . 222) (|With-PL-Form| . 223) (|Foreign| . 224) (|German| . 225)) (|Var| (|Standard| . 53) (|Foreign| . 54) (|Scient| . 55) (|Pop| . 56)) (|Aux| (|sein| . 51) (|haben| . 52)) (|Decl| (|Undeclined| . 25) (|Invar| . 26) (|Strong| . 27) (|Mixed| . 28) (|Weak| . 29)) (|RWFRule| (|A_Comparative| . 226) (|A_Positive| . 227) (|A_Positive+N| . 228) (|A_Superlative+N| . 229) (|A+A_No-Hyphen| . 230) (|A+Adv| . 231) (|A+Hyphen+A| . 232) (|Ablaut-Stem| . 233) (|Adv+Adv| . 234) (|Adv+ig| . 235) (|Adv+Noun| . 236) (|Adv+Prep| . 237) (|Detachable-Prefix| . 238) (|Foreign-Suffix| . 239) (|ge+_| . 240) (|ge+_+e| . 241) (|Impf-Stem| . 242) (|Infinitive| . 243) (|Linking-Element| . 244) (|N+Adv| . 245) (|N+A_No_Linking_Element| . 246) (N+\e+A . 247) (|N+es+A| . 248) (|N+[e]n+A| . 249) (|N+ens+A| . 250) (|N+er+A| . 251) (N+\s+A . 252) (|N+N_No_Linking_Element| . 253) (N+\e+N . 254) (|N+[e]n+N| . 255) (|N+ens+N| . 256) (|N+er+N| . 257) (|N+es+N| . 258) (N+\s+N . 259) (|No-Umlaut| . 260) (|Non-Detachable-Prefix| . 261) (|Part-Perf| . 262) (|Part-Pres| . 263) (|PL-Form+Suffix| . 264) (|Prefix| . 265) (|Prep+Adv| . 266) (|Pres-Stem| . 267) (|Pseudo-Participles| . 268) (|Suffixing| . 269) (|Target_Gender_F| . 270) (|Target_Gender_M| . 271) (|Target_Gender_N| . 272) (|Target_Detachable| . 273) (|Umlaut| . 274) (|V_Detachable_Pref| . 275) (|V_Detachable_Prefix| . 276) (|V_No_Detachable_Pref| . 277) (|V_No_Detachable_Prefix| . 278) (|V_Irregular| . 279) (|V_Regular| . 280) (V+\e+A . 281) (|V+A_No_Linking_Element| . 282) (V+\e+N . 283) (|V+N_No_Linking-Element| . 284) (|Target_S/-| . 285) (|Target_ES/E| . 286) (|N+s+Suffix| . 287) (|N+Suffix| . 288) (|A+er+Suffix| . 289)) (|WFSRule| (|Delete-No-ge-participle-character| . 290) (|Compound-fff/ff| . 291) (|Compound-lll/ll| . 292) (|Compound-mmm/mm| . 293) (|Compound-nnn/nn| . 294) (|Compound-ppp/pp| . 295) (|Compound-rrr/rr| . 296) (|Compound-ttt/tt| . 297) (|en+lich/ent+lich| . 298))) #'EQ :ATTRIBUTE-SORT-ORDER (|Cat| |Manner| |Degree| |Decl| |Mod| |Temp| |Pers| |Num| |Gender| |Case| |Aux| |Var| |Lexeme| |ICat| |RIRule| |IIRule| |WFCat| |RWFRule| |WFSRule| |ISRule|) :VALUES-TABLE #]NIL #'EQ :DEPENDENCIES ((((|Cat| . V)) |Aux|) (((|Cat| . N)) |Gender|)) :ISRULES (#S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_A/ae| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\15\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_O/oe| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_U/ue| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_Change_A/a| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_Change_O/o| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_Change_U/u| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_e-Deletion_after_e-Stem| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*e") (((|ICat| . |N-Stem|)))) (("e\\(.*\\)" NIL "\\1") (((|ICat| . |N-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_e-Deletion_after_e[lrn]-Stem| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[^ie]e[lrn]") (((|ICat| . |N-Stem|)))) (("e\\(.*\\)" NIL "\\1") (((|ICat| . |N-Suffix|)) ((|Decl| . |Strong|)) ((|Decl| . |Weak|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N-e-Deletion_Dat_SG_after_Diphth| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[a5e][iu]") (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N-e-Deletion_Dat_SG_after_Vow+h| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[a5eio+u%]h") (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |N_Double_Gen_SG_Form| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[^sxz]") (((|ICat| . |N-Stem|)))) (("es" NIL "s") (((|ICat| . |N-Suffix|) (|Case| . |Gen|) (|Num| . SG))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |N_Double_Dat_SG_Form| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Adj_Delete-e_el-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)e\\(l\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Delete-e_Vow+er-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*[ae]u\\)e\\(r\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Delete-e_e-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)e" NIL "\\1") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Comp_Delete-e_e[ln]-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*[^ie]\\)e\\([rn]\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |Degr-Mark|) (|Degree| . |Comp|))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_[sxz]| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[sxz]k?") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Super_Avoid_Insert-e_With_isch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*i\\)sch" NIL "\\1SCH") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Vow+sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[aeiou]r?sch\\|.*friSCH") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Cons+sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[^aeiour]sch") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_[dt]| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[dt]") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Diphth| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[ae][iu]") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Vow+h| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[a5ieou%]h") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Replace-SCH/sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)SCH" NIL "\\1sch") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Replace-T/t| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)T" NIL "\\1t") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Replace-D/d| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)D" NIL "\\1d") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_e-Insertion| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[bdfgkpst][mn]\\|.*[dt]\\|.*ch[mn]") (((|ICat| . |V-Stem|)))) (("\\([st].*\\)" NIL "e\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_Delete_Avoid_Insertion_Character| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("!\\(s?t.*\\)" NIL "\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_s-Deletion| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[sxz]") (((|ICat| . |V-Stem|)))) (("st" NIL "t") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Suffix| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[^ei]e[lr]") (((|ICat| . |V-Stem|)))) (("e\\(nd\\|[nt]\\|st\\)" NIL "\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_Imper-Exception| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*ch[mn]\\|.*[bdfgkpst][mn]\\|.*[^ei]e[lr]")) (("e" NIL "e!") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Imper| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG T) #S(GLOBAL-ISRULE :NAME |Verbs_Return_Imper-Exeption| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("e!" NIL "e") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Stem| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("\\(.*[^ei]\\)e\\(l\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|)))) (("e") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Delete_ge_Part-2| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("ge" NIL "") (((|ICat| . |V-Prefix|)))) (("\\(.*\\)\"\\(.*\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Delete_Special_Part_2_Character| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("\\(.*\\)\"\\(.*\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(GLOBAL-ISRULE :NAME |Stressed-e/surface-e| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)0\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))) (((|ICat| . |A-Stem|))) (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL)) :WFSRULES (#S(GLOBAL-WFSRULE :NAME |en+lich/ent+lich| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[^ei]en\\)" NIL "\\1t")) (("lich") (((|WFCat| . |A-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Delete-No-ge-participle-character| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\"\\(.*\\)" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|WFCat| . |N-Suffix|))) (((|WFCat| . |V-Suffix|))) (((|WFCat| . |A-Suffix|))))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-fff/ff| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]f\\)f" NIL "\\1")) (("f[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-lll/ll| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]l\\)l" NIL "\\1")) (("l[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-mmm/mm| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]m\\)m" NIL "\\1")) (("m[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-nnn/nn| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]n\\)n" NIL "\\1")) (("n[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-ppp/pp| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]p\\)p" NIL "\\1")) (("p[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-rrr/rr| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]r\\)r" NIL "\\1")) (("r[aeiouAOU#].*"))) :VALUE-FLAG NIL) #S(GLOBAL-WFSRULE :NAME |Compound-ttt/tt| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]t\\)t" NIL "\\1")) (("t[aeiouAOU#].*"))) :VALUE-FLAG NIL)) :FUNCTIONS #[WMFUNCTIONS ( :TABLE #]NIL #'EQ :MOD2-P NIL) :SEPARABLE-ELTS #[COLLECTION-HASH ( :COLLECTION #](("ab" . #S(SEPARABLE :CAT NIL :IXS (708))) ("an" . #S(SEPARABLE :CAT NIL :IXS (712)))) #'EQUAL :TYP EQUAL) :TRIE #[INTERNAL-TRIE ( :LETTER-TREE (ROOT 749 (#\# (#\b (#\e (#\r 953)))) (#\% (#\l (#\t 794)) (#\n (#\d (#\e (#\r 804)) (#\r 805)))) (#\a (#\b 838) (#\l (#\l 934) (#\t 793)) (#\n 860 (#\d (#\e (#\r 924)) (#\r 925))) (#\u (#\f 944) (#\s 945))) (#\b (#\e 966 (#\i 946 (#\s (#\s 839))) (#\r (#\g 776)) (#\s (#\s 786) (#\t 787))) (#\i 863 (#\l (#\d 765)) (#\n 862) (#\s (#\s 840))) (#\l (#\# (#\m 757)) (#\u (#\m 756 (#\e 755)))) (#\r (#\% (#\n (#\d 813))) (#\a (#\n (#\d 812) (#\n 811))) (#\e (#\n (#\n 810))))) (#\d 859 (#\a (#\s 874 (#\j (#\e (#\n (#\i (#\g (#\e 909)))))) (#\s 960))) (#\e (#\c (#\k 764)) (#\i (#\n 898 (#\e (#\r 881)))) (#\m 871 (#\j (#\e (#\n (#\i (#\g (#\e (#\n 905)))))))) (#\n 872 (#\e (#\n 916)) (#\j (#\e (#\n (#\i (#\g (#\e (#\n 906)))))))) (#\r 869 (#\e (#\n 914) (#\r 915)) (#\j (#\e (#\n (#\i (#\g (#\e 903 (#\n 908)))))))) (#\s 870 (#\j (#\e (#\n (#\i (#\g (#\e (#\n 904))))))) (#\s (#\e (#\n 913))))) (#\i (#\c (#\h 883)) (#\e 873 (#\j (#\e (#\n (#\i (#\g (#\e 907 (#\n 910))))))) (#\s 911)) (#\r 882)) (#\u 880 (#\r (#\c (#\h 947))))) (#\e 752 (#\i (#\n 875 (#\a (#\n (#\d (#\e (#\r 896))))) (#\i (#\g 932)))) (#\m 788) (#\n 758 (#\d 835) (#\t 965)) (#\r 768 (#\n 769)) (#\s 750 (#\t 791)) (#\t 826 (#\e 828 (#\n 832) (#\s (#\t 830)) (#\t 834)) (#\l (#\i (#\c (#\h 933)))) (#\w (#\a (#\s 938)))) (#\u (#\c (#\h 893)) (#\e (#\r 892)) (#\r 901))) (#\f (#\# (#\r 948)) (#\a (#\d 796 (#\e 797))) (#\e (#\h (#\l 971)))) (#\g (#\% (#\n (#\g 844)) (#\r (#\t 774 (#\e (#\n 773))))) (#\a (#\n (#\g 843)) (#\r (#\t 772 (#\e (#\n 771))))) (#\e 837 (#\h 841)) (#\i (#\n (#\g 842))) (#\r (#\# (#\n 795)) (#\% (#\s 767)) (#\a (#\s 766))) (#\u (#\t 785))) (#\h (#\$ (#\c (#\h 780)) (#\h 779)) (#\% (#\t 809)) (#\a 807 (#\b 806) (#\t 808)) (#\e (#\r (#\z 747 (#\e (#\n 748)))) (#\u (#\t (#\e 942)))) (#\i (#\n (#\t (#\e (#\r 949))))) (#\o (#\c (#\h 777)) (#\h 778))) (#\i (#\c (#\h 876)) (#\h (#\m 885) (#\n 886 (#\e (#\n 894))) (#\r 889 (#\e (#\r 888)))) (#\n 950) (#\s 864)) (#\j (#\e (#\d 931 (#\e (#\r (#\m (#\a (#\n (#\n 930))))))) (#\m (#\a (#\n (#\d 928)))) (#\n 912))) (#\k (#\$ (#\m (#\m 848))) (#\% (#\m 847)) (#\a (#\m 846) (#\n (#\n 815))) (#\e (#\i (#\n 927)) (#\n (#\n 814 (#\t 816)))) (#\o (#\m (#\m 845))) (#\r (#\% (#\f (#\t 762))) (#\a (#\f (#\t 761))))) (#\l (#\e (#\h (#\r (#\l (#\i (#\n (#\g 775))))))) (#\i (#\n (#\k 802))) (#\o (#\s 970))) (#\m 902 (#\# (#\t (#\t (#\e (#\r 760))))) (#\a (#\n 940 (#\c (#\h 935)))) (#\e (#\h (#\r (#\e (#\r 926)))) (#\i (#\n 897 (#\e (#\r 877)))) (#\n (#\s (#\c (#\h 763))))) (#\i (#\c (#\h 879)) (#\r 878) (#\s (#\s 964)) (#\t 951)) (#\u (#\t (#\t (#\e (#\r 759)))))) (#\n 753 (#\% (#\c (#\h 784)) (#\h 783)) (#\a (#\c (#\h 969)) (#\h 781 (#\e 782)) (#\n (#\n 818))) (#\d 836) (#\e (#\b (#\e (#\n 952))) (#\n (#\n 817))) (#\i (#\c (#\h (#\t (#\s 939)))) (#\e (#\m (#\a (#\n (#\d 929)))))) (#\o (#\c (#\h 943)))) (#\o (#\m (#\a 754))) (#\q (#\u (#\i (#\t (#\t 801))))) (#\r 789 (#\# (#\n (#\d 799))) (#\a (#\n (#\n 820))) (#\e (#\n (#\n 819))) (#\o (#\s (#\a 800))) (#\u (#\n (#\d 798)))) (#\s 751 (#\% (#\m (#\t (#\l (#\i (#\c (#\h 923))))))) (#\a (#\n (#\d 822))) (#\c (#\h (#\l (#\# (#\g 852)) (#\% (#\g 850)) (#\a (#\g 849)) (#\u (#\g 851))))) (#\e (#\h (#\r 941)) (#\i 861 (#\n 899 (#\e (#\r 884)))) (#\l (#\b (#\e (#\r 937)) (#\s (#\t 936)))) (#\n (#\d 821))) (#\i (#\c (#\h 895)) (#\e 887) (#\n (#\d 865))) (#\t 790 (#\a (#\a (#\t 770))))) (#\t 792 (#\e 827 (#\n 831) (#\s (#\t 829)) (#\t 833))) (#\u (#\m 955) (#\n (#\d 959) (#\s 891 (#\e (#\r 890)) (#\r 900)) (#\t (#\e (#\r 954))))) (#\v (#\e (#\r 963 (#\% (#\n (#\d (#\e (#\r 803))))))) (#\o (#\n 956) (#\r 957))) (#\w (#\# (#\r (#\d 857))) (#\% (#\n (#\d 825)) (#\r 867)) (#\a (#\n (#\d 824)) (#\r 866) (#\s 922)) (#\e (#\l (#\c (#\h 917))) (#\m 920) (#\n 921 (#\d 823)) (#\r 918 (#\d 853)) (#\s 868 (#\s (#\e (#\n 919))))) (#\i (#\d (#\e (#\r 961))) (#\e (#\d (#\e (#\r 968)))) (#\r 854 (#\d 855))) (#\o (#\r (#\d 858))) (#\u (#\r (#\d 856)))) (#\z (#\e (#\r 962)) (#\u 958 (#\r (#\e (#\c (#\h (#\t 967))))))))) :COLLECTION #[INTERNAL-COLLECTION ( :ELEMENTS #(#S(RIRULE :NAME (|Conjunct|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :PARADIGMS NIL :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (7 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Conjunct|)) :ENTRIES (2 4 6) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 336 :UI-GENSYM #:UI20 :FS-GENSYM #:FS21) #S(IUI-FORMATIVE :LEXICAL-STRING "und" :SURFACE-VARIANTS ("und") :U-FORMATIVE 7) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS ((1 "und")) :P-REPLACEMENTS ((1 "und")) :TRIE-ENTRIES (959) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("und" (|Cat| . |Conjunct|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "dass" :SURFACE-VARIANTS ("dass") :U-FORMATIVE 7) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS ((3 "dass")) :P-REPLACEMENTS ((3 "dass")) :TRIE-ENTRIES (960) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("dass" (|Cat| . |Conjunct|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "zu" :SURFACE-VARIANTS ("zu") :U-FORMATIVE 7) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS ((5 "zu")) :P-REPLACEMENTS ((5 "zu")) :TRIE-ENTRIES (958) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("zu" (|Cat| . |Conjunct|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Conjunct|) (|ICat| . |Conjunct|))) #S(RIRULE :NAME (|Prep|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :PARADIGMS NIL :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (41 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Prep|)) :ENTRIES (10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 337 :UI-GENSYM #:UI22 :FS-GENSYM #:FS23) #S(IUI-FORMATIVE :LEXICAL-STRING "an" :SURFACE-VARIANTS ("an") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((9 "an")) :P-REPLACEMENTS ((9 "an")) :TRIE-ENTRIES (860) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("an" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "auf" :SURFACE-VARIANTS ("auf") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((11 "auf")) :P-REPLACEMENTS ((11 "auf")) :TRIE-ENTRIES (944) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("auf" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "aus" :SURFACE-VARIANTS ("aus") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((13 "aus")) :P-REPLACEMENTS ((13 "aus")) :TRIE-ENTRIES (945) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("aus" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "bei" :SURFACE-VARIANTS ("bei") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((15 "bei")) :P-REPLACEMENTS ((15 "bei")) :TRIE-ENTRIES (946) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("bei" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "durch" :SURFACE-VARIANTS ("durch") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((17 "durch")) :P-REPLACEMENTS ((17 "durch")) :TRIE-ENTRIES (947) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("durch" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "f%r" :SURFACE-VARIANTS ("f#r") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((19 "f#r")) :P-REPLACEMENTS ((19 "f#r")) :TRIE-ENTRIES (948) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("f#r" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "hinter" :SURFACE-VARIANTS ("hinter") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((21 "hinter")) :P-REPLACEMENTS ((21 "hinter")) :TRIE-ENTRIES (949) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("hinter" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "in" :SURFACE-VARIANTS ("in") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((23 "in")) :P-REPLACEMENTS ((23 "in")) :TRIE-ENTRIES (950) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("in" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "mit" :SURFACE-VARIANTS ("mit") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((25 "mit")) :P-REPLACEMENTS ((25 "mit")) :TRIE-ENTRIES (951) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mit" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "neben" :SURFACE-VARIANTS ("neben") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((27 "neben")) :P-REPLACEMENTS ((27 "neben")) :TRIE-ENTRIES (952) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("neben" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "%ber" :SURFACE-VARIANTS ("#ber") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((29 "#ber")) :P-REPLACEMENTS ((29 "#ber")) :TRIE-ENTRIES (953) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("#ber" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "unter" :SURFACE-VARIANTS ("unter") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((31 "unter")) :P-REPLACEMENTS ((31 "unter")) :TRIE-ENTRIES (954) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("unter" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "um" :SURFACE-VARIANTS ("um") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((33 "um")) :P-REPLACEMENTS ((33 "um")) :TRIE-ENTRIES (955) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("um" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "von" :SURFACE-VARIANTS ("von") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((35 "von")) :P-REPLACEMENTS ((35 "von")) :TRIE-ENTRIES (956) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("von" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "vor" :SURFACE-VARIANTS ("vor") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((37 "vor")) :P-REPLACEMENTS ((37 "vor")) :TRIE-ENTRIES (957) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("vor" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "zu" :SURFACE-VARIANTS ("zu") :U-FORMATIVE 41) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS ((39 "zu")) :P-REPLACEMENTS ((39 "zu")) :TRIE-ENTRIES (958) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("zu" (|Cat| . |Prep|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Prep|) (|ICat| . |Prep|))) #S(RIRULE :NAME (|Adv|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :PARADIGMS NIL :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (49 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Adv|)) :ENTRIES (44 46 48) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 338 :UI-GENSYM #:UI24 :FS-GENSYM #:FS25) #S(IUI-FORMATIVE :LEXICAL-STRING "sehr" :SURFACE-VARIANTS ("sehr") :U-FORMATIVE 49) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS ((43 "sehr")) :P-REPLACEMENTS ((43 "sehr")) :TRIE-ENTRIES (941) :IA-FEATURES ((|Manner| . |Modal|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sehr" (|Cat| . |Adv|) (|Manner| . |Modal|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "heute" :SURFACE-VARIANTS ("heute") :U-FORMATIVE 49) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS ((45 "heute")) :P-REPLACEMENTS ((45 "heute")) :TRIE-ENTRIES (942) :IA-FEATURES ((|Manner| . |Temporal|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("heute" (|Cat| . |Adv|) (|Manner| . |Temporal|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "noch" :SURFACE-VARIANTS ("noch") :U-FORMATIVE 49) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS ((47 "noch")) :P-REPLACEMENTS ((47 "noch")) :TRIE-ENTRIES (943) :IA-FEATURES ((|Manner| . |Temporal|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("noch" (|Cat| . |Adv|) (|Manner| . |Temporal|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Adv|) (|ICat| . |Adv|))) #S(IIRULE :NAME (|Pron-Invar|) :CITATION-FORMS (((PH) ((383 (""))))) :WORD-FORMS (((PH) ((383 (""))))) :PARADIGMS NIL :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|) (|Decl| . |Invar|)) :ENTRIES (52 54 56 58 60) :TRIE-ENTRIES (749) :WFRULES-TRIGGERED 339 :UI-GENSYM #:UI26 :FS-GENSYM #:FS27) #S(IUI-FORMATIVE :LEXICAL-STRING "selbst" :SURFACE-VARIANTS ("selbst") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS ((51 "selbst")) :P-REPLACEMENTS ((51 "selbst")) :TRIE-ENTRIES (936) :IA-FEATURES ((|Manner| . |Demonstr|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("selbst" (|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Demonstr|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "selber" :SURFACE-VARIANTS ("selber") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS ((53 "selber")) :P-REPLACEMENTS ((53 "selber")) :TRIE-ENTRIES (937) :IA-FEATURES ((|Manner| . |Demonstr|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("selber" (|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Demonstr|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "etwas" :SURFACE-VARIANTS ("etwas") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS ((55 "etwas")) :P-REPLACEMENTS ((55 "etwas")) :TRIE-ENTRIES (938) :IA-FEATURES ((|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("etwas" (|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "nichts" :SURFACE-VARIANTS ("nichts") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS ((57 "nichts")) :P-REPLACEMENTS ((57 "nichts")) :TRIE-ENTRIES (939) :IA-FEATURES ((|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("nichts" (|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "man" :SURFACE-VARIANTS ("man") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS ((59 "man")) :P-REPLACEMENTS ((59 "man")) :TRIE-ENTRIES (940) :IA-FEATURES ((|Manner| . |Indef|) (|Num| . SG) (|Case| . |Nom|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("man" (|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Case| . |Nom|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |all/manch|) :CITATION-FORMS (((PH) ((383 (""))))) :WORD-FORMS (((PH) ((383 ("")))) ((PH) ((310 ("er")))) ((PH) ((311 ("es")) (312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((321 ("es")) (322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((326 ("e")) (327 ("er")) (328 ("en")) (329 ("e"))))) :PARADIGMS (((((|Decl| . |Invar|)))) ((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0) (10 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (63 65) :TRIE-ENTRIES (751 752 753 902 788 758 750 768 749) :WFRULES-TRIGGERED 340 :UI-GENSYM #:UI28 :FS-GENSYM #:FS29) #S(IUI-FORMATIVE :LEXICAL-STRING "all" :SURFACE-VARIANTS ("all") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (61 . 0) :CF-REPLACEMENTS ((62 "all")) :P-REPLACEMENTS ((62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all") (62 "all")) :TRIE-ENTRIES (934) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("all" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "manch" :SURFACE-VARIANTS ("manch") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (61 . 0) :CF-REPLACEMENTS ((64 "manch")) :P-REPLACEMENTS ((64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch") (64 "manch")) :TRIE-ENTRIES (935) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("manch" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |einer|) :CITATION-FORMS (((PH) ((331 ("er"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((332 ("es")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("s" "es")))) ((PH) ((342 ("es")))) ((PH) ((344 ("em")))) ((PH) ((346 ("s" "es"))))) :PARADIGMS (((((|Gender| . M)))) ((((|Gender| . F)))) ((((|Gender| . N))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Indefinite-Pronoun einer)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)ein") (((|ICat| . |Pron-Stem|)))) (("es" NIL "s") (((|Gender| . N) (|Case| . |Nom|))) (((|Gender| . N) (|Case| . |Acc|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|) (|Num| . SG)) :ENTRIES (68) :TRIE-ENTRIES (749 751 752 753 758 902 788 750 768) :WFRULES-TRIGGERED 341 :UI-GENSYM #:UI30 :FS-GENSYM #:FS31) #S(IUI-FORMATIVE :LEXICAL-STRING "ein" :SURFACE-VARIANTS ("ein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (66 . 0) :CF-REPLACEMENTS ((67 "ein")) :P-REPLACEMENTS ((67 "ein") (67 "ein") (67 "ein") (67 "ein") (67 "ein") (67 "ein") (67 "ein") (67 "ein") (67 "ein")) :TRIE-ENTRIES (875) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("einer" (|Cat| . |Pron|) (|Num| . SG) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |einige/etliche|) :CITATION-FORMS (((PH) ((347 ("e"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((333 ("en")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("es")))) ((PH) ((343 ("en")))) ((PH) ((344 ("em")))) ((PH) ((346 ("es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :PARADIGMS (((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (71 73) :TRIE-ENTRIES (749 751 750 753 902 788 758 768 752) :WFRULES-TRIGGERED 342 :UI-GENSYM #:UI32 :FS-GENSYM #:FS33) #S(IUI-FORMATIVE :LEXICAL-STRING "einig" :SURFACE-VARIANTS ("einig") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (69 . 0) :CF-REPLACEMENTS ((70 "einig")) :P-REPLACEMENTS ((70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig") (70 "einig")) :TRIE-ENTRIES (932) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("einige" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "etlich" :SURFACE-VARIANTS ("etlich") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (69 . 0) :CF-REPLACEMENTS ((72 "etlich")) :P-REPLACEMENTS ((72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich") (72 "etlich")) :TRIE-ENTRIES (933) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("etliche" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |jeder|) :CITATION-FORMS (((PH) ((310 ("er"))))) :WORD-FORMS (((PH) ((310 ("er")))) ((PH) ((311 ("es")) (312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((321 ("es")) (322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((367 ("er")) (368 ("en")) (369 ("en")) (370 ("en")))) ((PH) ((371 ("e")) (372 ("en")) (373 ("en")) (374 ("e")))) ((PH) ((375 ("es")) (376 ("en")) (377 ("en")) (378 ("es"))))) :PARADIGMS (((((|Decl| . |Strong|) (|Gender| . M)))) ((((|Decl| . |Strong|) (|Gender| . F)))) ((((|Decl| . |Strong|) (|Gender| . N)))) ((((|Decl| . |Mixed|) (|Gender| . M)))) ((((|Decl| . |Mixed|) (|Gender| . F)))) ((((|Decl| . |Mixed|) (|Gender| . N))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0) (10 0 0) (11 0 0))) :COMMON-FEATURES ((|Num| . SG) (|Cat| . |Pron|)) :ENTRIES (76) :TRIE-ENTRIES (749 751 752 753 902 788 758 750 768) :WFRULES-TRIGGERED 343 :UI-GENSYM #:UI34 :FS-GENSYM #:FS35) #S(IUI-FORMATIVE :LEXICAL-STRING "jed" :SURFACE-VARIANTS ("jed") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (74 . 0) :CF-REPLACEMENTS ((75 "jed")) :P-REPLACEMENTS ((75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed") (75 "jed")) :TRIE-ENTRIES (931) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("jeder" (|Num| . SG) (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |jedermann|) :CITATION-FORMS (((PH) ((384 (""))))) :WORD-FORMS (((PH) ((384 ("")) (385 ("s")) (386 ("")) (387 (""))))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (79) :TRIE-ENTRIES (751 749) :WFRULES-TRIGGERED 344 :UI-GENSYM #:UI36 :FS-GENSYM #:FS37) #S(IUI-FORMATIVE :LEXICAL-STRING "jedermann" :SURFACE-VARIANTS ("jedermann") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (77 . 0) :CF-REPLACEMENTS ((78 "jedermann")) :P-REPLACEMENTS ((78 "jedermann")) :TRIE-ENTRIES (930) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("jedermann" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |jemand/niemand|) :CITATION-FORMS (((PH) ((388 (""))))) :WORD-FORMS (((PH) ((388 ("")) (389 ("s" "es")) (390 ("" "em")) (391 ("" "en"))))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Indefinite-Pronoun jemand/niemand)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*mand") (((|ICat| . |Pron-Stem|)))) (("es" NIL "s") (((|ICat| . |Pron-Suffix|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Indefinite-Pronoun jemand/niemand)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*mand") (((|ICat| . |Pron-Stem|)))) (("e[mn]" NIL "") (((|ICat| . |Pron-Suffix|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (82 84) :TRIE-ENTRIES (758 788 751 750 749) :WFRULES-TRIGGERED 345 :UI-GENSYM #:UI38 :FS-GENSYM #:FS39) #S(IUI-FORMATIVE :LEXICAL-STRING "jemand" :SURFACE-VARIANTS ("jemand") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (80 . 0) :CF-REPLACEMENTS ((81 "jemand")) :P-REPLACEMENTS ((81 "jemand")) :TRIE-ENTRIES (928) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("jemand" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "niemand" :SURFACE-VARIANTS ("niemand") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (80 . 0) :CF-REPLACEMENTS ((83 "niemand")) :P-REPLACEMENTS ((83 "niemand")) :TRIE-ENTRIES (929) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("niemand" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |kein|) :CITATION-FORMS (((PH) ((330 (""))))) :WORD-FORMS (((PH) ((330 ("")) (331 ("er")))) ((PH) ((332 ("es")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((340 ("")) (341 ("s" "es")))) ((PH) ((342 ("es")))) ((PH) ((344 ("em")))) ((PH) ((345 ("")) (346 ("s" "es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :PARADIGMS (((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Indefinite-Pronoun kein)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("kein") (((|ICat| . |Pron-Stem|)))) (("es" NIL "s") (((|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) (((|Num| . SG) (|Gender| . N) (|Case| . |Acc|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (87) :TRIE-ENTRIES (751 752 753 758 902 788 750 768 749) :WFRULES-TRIGGERED 346 :UI-GENSYM #:UI40 :FS-GENSYM #:FS41) #S(IUI-FORMATIVE :LEXICAL-STRING "kein" :SURFACE-VARIANTS ("kein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (85 . 0) :CF-REPLACEMENTS ((86 "kein")) :P-REPLACEMENTS ((86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein") (86 "kein")) :TRIE-ENTRIES (927) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("kein" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |mehrere|) :CITATION-FORMS (((PH) ((347 ("e"))))) :WORD-FORMS (((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :PARADIGMS (((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Num| . PL) (|Cat| . |Pron|)) :ENTRIES (90) :TRIE-ENTRIES (753 758 768 752) :WFRULES-TRIGGERED 347 :UI-GENSYM #:UI42 :FS-GENSYM #:FS43) #S(IUI-FORMATIVE :LEXICAL-STRING "mehrer" :SURFACE-VARIANTS ("mehrer") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (88 . 0) :CF-REPLACEMENTS ((89 "mehrer")) :P-REPLACEMENTS ((89 "mehrer")) :TRIE-ENTRIES (926) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mehrere" (|Num| . PL) (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Indefinite-Pronoun| |saemtlich|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((310 ("er")))) ((PH) ((312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((326 ("e")) (327 ("er")) (328 ("en")) (329 ("e")))) ((PH) ((351 ("e")) (352 ("en")) (353 ("en")) (354 ("en")))) ((PH) ((355 ("e")) (356 ("en")) (357 ("en")) (358 ("e")))) ((PH) ((359 ("e")) (360 ("en")) (361 ("en")) (362 ("e")))) ((PH) ((363 ("en")) (364 ("en")) (365 ("en")) (366 ("en"))))) :PARADIGMS (((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Strong|) (|Num| . PL)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Weak|) (|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0) (10 0 0) (11 0 0) (12 0 0) (13 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (93 95) :TRIE-ENTRIES (749 751 750 752 753 902 788 758 768) :WFRULES-TRIGGERED 348 :UI-GENSYM #:UI44 :FS-GENSYM #:FS45) #S(IUI-FORMATIVE :LEXICAL-STRING "s5mtlich" :SURFACE-VARIANTS ("s%mtlich") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (91 . 0) :CF-REPLACEMENTS ((92 "s%mtlich")) :P-REPLACEMENTS ((92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich") (92 "s%mtlich")) :TRIE-ENTRIES (923) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("s%mtlich" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ander" :SURFACE-VARIANTS ("ander" "andr") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (91 . 0) :CF-REPLACEMENTS ((94 "ander")) :P-REPLACEMENTS ((94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander") (94 "ander")) :TRIE-ENTRIES (925 924) :IA-FEATURES ((|Manner| . |Indef|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ander" (|Cat| . |Pron|) (|Manner| . |Indef|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Rel/Interrog-Pronoun| |der/die/das|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (304 ((0 0 0) (0 0 0)) (0 0 0)) (305 NIL (1 0 0)) (306 NIL (2 0 0)) (307 NIL (3 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (101 106 111 116) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 349 :UI-GENSYM #:UI46 :FS-GENSYM #:FS47) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "den" :SURFACE-VARIANTS ("den") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS ((97 "der")) :P-REPLACEMENTS ((97 "der") (98 "dessen") (99 "dem") (100 "den")) :TRIE-ENTRIES (872 871 913 869) :IA-FEATURES ((|Manner| . |Relative|) (|Gender| . M) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("der" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . M) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "deren" :SURFACE-VARIANTS ("deren") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS ((102 "die")) :P-REPLACEMENTS ((102 "die") (103 "deren") (104 "der") (105 "die")) :TRIE-ENTRIES (869 914 873) :IA-FEATURES ((|Manner| . |Relative|) (|Gender| . F) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . F) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS ((107 "das")) :P-REPLACEMENTS ((107 "das") (108 "dessen") (109 "dem") (110 "das")) :TRIE-ENTRIES (871 913 874) :IA-FEATURES ((|Manner| . |Relative|) (|Gender| . N) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("das" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . N) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "deren" :SURFACE-VARIANTS ("deren") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "den" :SURFACE-VARIANTS ("den") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS ((112 "die")) :P-REPLACEMENTS ((112 "die") (113 "deren") (114 "den") (115 "die")) :TRIE-ENTRIES (872 914 873) :IA-FEATURES ((|Manner| . |Relative|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Rel/Interrog-Pronoun| |wer/was|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (304 ((0 0 0) (0 0 0)) (0 0 0)) (305 NIL (1 0 0)) (306 NIL (2 0 0)) (307 NIL (3 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (122 127) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 350 :UI-GENSYM #:UI48 :FS-GENSYM #:FS49) #S(IUI-FORMATIVE :LEXICAL-STRING "wer" :SURFACE-VARIANTS ("wer") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "wessen" :SURFACE-VARIANTS ("wessen") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "wem" :SURFACE-VARIANTS ("wem") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "wen" :SURFACE-VARIANTS ("wen") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (117 . 0) :CF-REPLACEMENTS ((118 "wer")) :P-REPLACEMENTS ((118 "wer") (119 "wessen") (120 "wem") (121 "wen")) :TRIE-ENTRIES (921 920 919 918) :IA-FEATURES ((|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . M) (|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU NIL :LEXEME-ID ("wer" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . M) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "was" :SURFACE-VARIANTS ("was") :U-FORMATIVE 304) #S(IUI-FORMATIVE :LEXICAL-STRING "wessen" :SURFACE-VARIANTS ("wessen") :U-FORMATIVE 305) #S(IUI-FORMATIVE :LEXICAL-STRING "was" :SURFACE-VARIANTS ("was") :U-FORMATIVE 306) #S(IUI-FORMATIVE :LEXICAL-STRING "was" :SURFACE-VARIANTS ("was") :U-FORMATIVE 307) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (117 . 0) :CF-REPLACEMENTS ((123 "was")) :P-REPLACEMENTS ((123 "was") (124 "wessen") (125 "was") (126 "was")) :TRIE-ENTRIES (919 922) :IA-FEATURES ((|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . N)) :DELETED-FORMS (((((|Case| . |Dat|))))) :SRULES (NIL) :LU NIL :LEXEME-ID ("was" (|Cat| . |Pron|) (|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Rel/Interrog-Pronoun| |welcher|) :CITATION-FORMS (((PH) ((331 ("er"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((332 ("es")) (333 ("en")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("es")))) ((PH) ((342 ("es")) (343 ("en")))) ((PH) ((344 ("em")))) ((PH) ((346 ("es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :PARADIGMS (((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (130 132) :TRIE-ENTRIES (749 751 752 753 902 788 758 750 768) :WFRULES-TRIGGERED 351 :UI-GENSYM #:UI50 :FS-GENSYM #:FS51) #S(IUI-FORMATIVE :LEXICAL-STRING "welch" :SURFACE-VARIANTS ("welch") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (128 . 0) :CF-REPLACEMENTS ((129 "welch")) :P-REPLACEMENTS ((129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch") (129 "welch")) :TRIE-ENTRIES (917) :IA-FEATURES ((|Manner| . |Relative|)) :DELETED-FORMS (((((|Case| . |Gen|))))) :SRULES (NIL) :LU ("void") :LEXEME-ID ("welcher" (|Cat| . |Pron|) (|Manner| . |Relative|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "welch" :SURFACE-VARIANTS ("welch") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (128 . 0) :CF-REPLACEMENTS ((131 "welch")) :P-REPLACEMENTS ((131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch") (131 "welch")) :TRIE-ENTRIES (917) :IA-FEATURES ((|Manner| . |Interrog|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("welcher" (|Cat| . |Pron|) (|Manner| . |Interrog|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Demonstr-Pronoun| |der/die/das|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH PH)) ((PH)) ((PH))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (283 ((0 0 0) (0 0 0)) (0 0 0)) (284 NIL (1 0 0)) (285 NIL (1 0 1)) (286 NIL (2 0 0)) (287 NIL (3 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (139 145 151 157) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 352 :UI-GENSYM #:UI52 :FS-GENSYM #:FS53) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 283) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 284) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 285) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 286) #S(IUI-FORMATIVE :LEXICAL-STRING "den" :SURFACE-VARIANTS ("den") :U-FORMATIVE 287) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS ((134 "der")) :P-REPLACEMENTS ((134 "der") (135 "dessen") (136 "dessen") (137 "dem") (138 "den")) :TRIE-ENTRIES (872 871 913 869) :IA-FEATURES ((|Manner| . |Demonstr|) (|Gender| . M) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("der" (|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . M) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 283) #S(IUI-FORMATIVE :LEXICAL-STRING "deren" :SURFACE-VARIANTS ("deren") :U-FORMATIVE 284) #S(IUI-FORMATIVE :LEXICAL-STRING "derer" :SURFACE-VARIANTS ("derer") :U-FORMATIVE 285) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 286) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 287) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS ((140 "die")) :P-REPLACEMENTS ((140 "die") (141 "deren") (142 "derer") (143 "der") (144 "die")) :TRIE-ENTRIES (869 915 914 873) :IA-FEATURES ((|Manner| . |Demonstr|) (|Gender| . F) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . F) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 283) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 284) #S(IUI-FORMATIVE :LEXICAL-STRING "dessen" :SURFACE-VARIANTS ("dessen") :U-FORMATIVE 285) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 286) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 287) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS ((146 "das")) :P-REPLACEMENTS ((146 "das") (147 "dessen") (148 "dessen") (149 "dem") (150 "das")) :TRIE-ENTRIES (871 913 874) :IA-FEATURES ((|Manner| . |Demonstr|) (|Gender| . N) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("das" (|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . N) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 283) #S(IUI-FORMATIVE :LEXICAL-STRING "deren" :SURFACE-VARIANTS ("deren") :U-FORMATIVE 284) #S(IUI-FORMATIVE :LEXICAL-STRING "derer" :SURFACE-VARIANTS ("derer") :U-FORMATIVE 285) #S(IUI-FORMATIVE :LEXICAL-STRING "denen" :SURFACE-VARIANTS ("denen") :U-FORMATIVE 286) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 287) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS ((152 "die")) :P-REPLACEMENTS ((152 "die") (153 "deren") (154 "derer") (155 "denen") (156 "die")) :TRIE-ENTRIES (916 915 914 873) :IA-FEATURES ((|Manner| . |Demonstr|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Demonstr-Pronoun| |dieser/jener|) :CITATION-FORMS (((PH) ((331 ("er") ("er"))))) :WORD-FORMS (((PH) ((331 ("er") ("er")))) ((PH) ((332 ("es") ("es")))) ((PH) ((334 ("em") ("em")))) ((PH) ((335 ("en") ("en")))) ((PH) ((336 ("e") ("e")) (337 ("er") ("er")) (338 ("er") ("er")) (339 ("e") ("e")))) ((PH) ((341 ("es") ("" "es")))) ((PH) ((342 ("es") ("es")))) ((PH) ((344 ("em") ("em")))) ((PH) ((346 ("es") ("" "es")))) ((PH) ((347 ("e") ("e")) (348 ("er") ("er")) (349 ("en") ("en")) (350 ("e") ("e"))))) :PARADIGMS (((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Demonstr-Pronoun dieser/jener)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*dies") (((|ICat| . |Pron-Stem|)))) (("es" NIL "") (((|Case| . |Nom|) (|Gender| . N))) (((|Case| . |Acc|) (|Gender| . N))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (160 162) :TRIE-ENTRIES (749 751 752 753 758 902 788 750 768) :WFRULES-TRIGGERED 353 :UI-GENSYM #:UI54 :FS-GENSYM #:FS55) #S(IUI-FORMATIVE :LEXICAL-STRING "dies" :SURFACE-VARIANTS ("dies") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (158 . 1) :CF-REPLACEMENTS ((159 "dies")) :P-REPLACEMENTS ((159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies") (159 "dies")) :TRIE-ENTRIES (911) :IA-FEATURES ((|Manner| . |Demonstr|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("dieser" (|Cat| . |Pron|) (|Manner| . |Demonstr|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "jen" :SURFACE-VARIANTS ("jen") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (158 . 0) :CF-REPLACEMENTS ((161 "jen")) :P-REPLACEMENTS ((161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen") (161 "jen")) :TRIE-ENTRIES (912) :IA-FEATURES ((|Manner| . |Demonstr|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("jener" (|Cat| . |Pron|) (|Manner| . |Demonstr|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Demonstr-Pronoun| |derselbe/derjenige|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH PH)) ((PH PH PH PH)) ((PH PH PH PH)) ((PH PH PH PH))) :PARADIGMS (((((|Num| . SG) (|Gender| . M)))) ((((|Num| . SG) (|Gender| . F)))) ((((|Num| . SG) (|Gender| . N)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (288 ((0 0 0) (0 0 0)) (0 0 0)) (289 NIL (0 0 1)) (290 NIL (0 0 2)) (291 NIL (0 0 3)) (292 NIL (1 0 0)) (293 NIL (1 0 1)) (294 NIL (1 0 2)) (295 NIL (1 0 3)) (296 NIL (2 0 0)) (297 NIL (2 0 1)) (298 NIL (2 0 2)) (299 NIL (2 0 3)) (300 NIL (3 0 0)) (301 NIL (3 0 1)) (302 NIL (3 0 2)) (303 NIL (3 0 3))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (180) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 354 :UI-GENSYM #:UI56 :FS-GENSYM #:FS57) #S(IUI-FORMATIVE :LEXICAL-STRING "derjenige" :SURFACE-VARIANTS ("derjenige") :U-FORMATIVE 288) #S(IUI-FORMATIVE :LEXICAL-STRING "desjenigen" :SURFACE-VARIANTS ("desjenigen") :U-FORMATIVE 289) #S(IUI-FORMATIVE :LEXICAL-STRING "demjenigen" :SURFACE-VARIANTS ("demjenigen") :U-FORMATIVE 290) #S(IUI-FORMATIVE :LEXICAL-STRING "denjenigen" :SURFACE-VARIANTS ("denjenigen") :U-FORMATIVE 291) #S(IUI-FORMATIVE :LEXICAL-STRING "diejenige" :SURFACE-VARIANTS ("diejenige") :U-FORMATIVE 292) #S(IUI-FORMATIVE :LEXICAL-STRING "derjenigen" :SURFACE-VARIANTS ("derjenigen") :U-FORMATIVE 293) #S(IUI-FORMATIVE :LEXICAL-STRING "derjenigen" :SURFACE-VARIANTS ("derjenigen") :U-FORMATIVE 294) #S(IUI-FORMATIVE :LEXICAL-STRING "diejenige" :SURFACE-VARIANTS ("diejenige") :U-FORMATIVE 295) #S(IUI-FORMATIVE :LEXICAL-STRING "dasjenige" :SURFACE-VARIANTS ("dasjenige") :U-FORMATIVE 296) #S(IUI-FORMATIVE :LEXICAL-STRING "desjenigen" :SURFACE-VARIANTS ("desjenigen") :U-FORMATIVE 297) #S(IUI-FORMATIVE :LEXICAL-STRING "demjenigen" :SURFACE-VARIANTS ("demjenigen") :U-FORMATIVE 298) #S(IUI-FORMATIVE :LEXICAL-STRING "dasjenige" :SURFACE-VARIANTS ("dasjenige") :U-FORMATIVE 299) #S(IUI-FORMATIVE :LEXICAL-STRING "diejenigen" :SURFACE-VARIANTS ("diejenigen") :U-FORMATIVE 300) #S(IUI-FORMATIVE :LEXICAL-STRING "derjenigen" :SURFACE-VARIANTS ("derjenigen") :U-FORMATIVE 301) #S(IUI-FORMATIVE :LEXICAL-STRING "derjenigen" :SURFACE-VARIANTS ("derjenigen") :U-FORMATIVE 302) #S(IUI-FORMATIVE :LEXICAL-STRING "diejenigen" :SURFACE-VARIANTS ("diejenigen") :U-FORMATIVE 303) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (163 . 0) :CF-REPLACEMENTS ((164 "derjenige")) :P-REPLACEMENTS ((164 "derjenige") (165 "desjenigen") (166 "demjenigen") (167 "denjenigen") (168 "diejenige") (169 "derjenigen") (170 "derjenigen") (171 "diejenige") (172 "dasjenige") (173 "desjenigen") (174 "demjenigen") (175 "dasjenige") (176 "diejenigen") (177 "derjenigen") (178 "derjenigen") (179 "diejenigen")) :TRIE-ENTRIES (910 909 908 907 906 905 904 903) :IA-FEATURES ((|Manner| . |Demonstr|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("derjenige" (|Cat| . |Pron|) (|Manner| . |Demonstr|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Possessive-Pronoun|) :CITATION-FORMS (((PH) ((330 ("") ("") (""))))) :WORD-FORMS (((PH) ((309 ("") ("") ("")) (310 ("er") ("er") ("er")))) ((PH) ((311 ("es") ("es") ("es")))) ((PH) ((313 ("m" "em") ("em") ("em")))) ((PH) ((314 ("n" "en") ("en") ("en")))) ((PH) ((315 ("e") ("e") ("e")) (316 ("er") ("er") ("er")) (317 ("er") ("er") ("er")) (318 ("e") ("e") ("e")))) ((PH) ((319 ("") ("") ("")) (320 ("es") ("es") ("s" "es")))) ((PH) ((321 ("es") ("es") ("es")))) ((PH) ((323 ("m" "em") ("em") ("em")))) ((PH) ((324 ("") ("") ("")) (325 ("es") ("es") ("s" "es")))) ((PH) ((326 ("e") ("e") ("e")) (327 ("er") ("er") ("er")) (328 ("n" "en") ("en") ("en")) (329 ("e") ("e") ("e")))) ((PH) ((351 ("e") ("e") ("e")) (352 ("n" "en") ("en") ("en")) (353 ("n" "en") ("en") ("en")) (354 ("n" "en") ("en") ("en")) (355 ("e") ("e") ("e")) (356 ("n" "en") ("en") ("en")) (357 ("n" "en") ("en") ("en")) (358 ("e") ("e") ("e")) (359 ("e") ("e") ("e")) (360 ("n" "en") ("en") ("en")) (361 ("n" "en") ("en") ("en")) (362 ("e") ("e") ("e")) (363 ("n" "en") ("en") ("en")) (364 ("n" "en") ("en") ("en")) (365 ("n" "en") ("en") ("en")) (366 ("n" "en") ("en") ("en"))))) :PARADIGMS (((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Strong|) (|Num| . PL)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Weak|) (|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Possessive-Pronoun)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)e\\(r\\)" NIL "\\1\\2") (((|ICat| . |Pron-Stem|)))) (("e.*") (((|ICat| . |Pron-Suffix|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Possessive-Pronoun)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*er") (((|ICat| . |Pron-Stem|)))) (("e\\([nm]\\)" NIL "\\1") (((|ICat| . |Pron-Suffix|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Possessive-Pronoun)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("[mds]ein") (((|ICat| . |Pron-Stem|)))) (("es" NIL "s") (((|Gender| . N) (|Case| . |Nom|))) (((|Gender| . N) (|Case| . |Acc|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (308 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 0 0) (8 0 0) (9 0 0) (10 0 0))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (183 185 187 189 191 193 195 197) :TRIE-ENTRIES (751 752 753 758 902 788 750 768 749) :WFRULES-TRIGGERED 355 :UI-GENSYM #:UI58 :FS-GENSYM #:FS59) #S(IUI-FORMATIVE :LEXICAL-STRING "mein" :SURFACE-VARIANTS ("mein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS ((182 "mein")) :P-REPLACEMENTS ((182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein") (182 "mein")) :TRIE-ENTRIES (897) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mein" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "dein" :SURFACE-VARIANTS ("dein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS ((184 "dein")) :P-REPLACEMENTS ((184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein") (184 "dein")) :TRIE-ENTRIES (898) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("dein" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "sein" :SURFACE-VARIANTS ("sein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS ((186 "sein")) :P-REPLACEMENTS ((186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein") (186 "sein")) :TRIE-ENTRIES (899) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . M) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sein" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . M) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "sein" :SURFACE-VARIANTS ("sein") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS ((188 "sein")) :P-REPLACEMENTS ((188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein") (188 "sein")) :TRIE-ENTRIES (899) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . N) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sein" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . N) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ihr" :SURFACE-VARIANTS ("ihr") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 1) :CF-REPLACEMENTS ((190 "ihr")) :P-REPLACEMENTS ((190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr") (190 "ihr")) :TRIE-ENTRIES (889) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . F) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ihr" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . F) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "unser" :SURFACE-VARIANTS ("unser" "unsr") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (975 974 973 972 971 970 969 968 967 966 965 964 963 962 961 960 959 958 957 956 955 954 953 952 951 950 949 948 947 946 945 944 943 942 941 940 939 938 937 936 935 934 933 932 931 930 929 928 927 926 925 924 923 922 921 920 918 916 915 913 912 911 910 909 908 907 906 905 904 903 902 901 900 899 898 897 896 895 894 893 892 891 890 889 888 887 886 885 884 883 882 881 880 879 878 877 876 875 874 873 872 871 870 869 868 867 866 865 864 863 862 861 860 859 858 857 856 854 852 851 849 848 847 846 845 844 843 842 841 840 839 838 837 836 835 834 833 832 831 830 829 828 827 826 825 824 823 822 821 820 819 818 817 816 815 814 813 812 811 810 809 808 807 806 805 804 803 802 801 800 799 798 797 796 795 794 793 792 790 788 787 785 784 783 782 781 780 779 778 777 776 775 774 773 772 771 770 769 768 767 766 765 764 763 762 761 760 759 758 757 756 755 754 753 752 751 750 749 748 747 746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 726 724 723 721 720 719 718 717 716 715 714 713 712 711 710 709 708 707 706 705 704 703 702 701 700 699 698 697 696 695 694 693 692 691 690 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673 672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633 632 630 628 627 625 624 623 622 621 620 619 618 617 616 615 614 613 612 611 610 609 608 607 606 605 604 603 602 601 600 599 598 597 596 595 594 593 592 591 590 589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574 573 572 571 570 569 568 566 564 563 561 560 559 558 557 556 555 554 553 552 551 550 549 548 547 546 545 544 543 542 541 540 539 538 537 536 535 534 533 532 531 530 527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499 498 495 494 493 492 491 490 489 488 487 486 485 484 483 482 481 480 479 478 477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449 448 447 446 445 444 443 442 441 440 438 436 435 433 432 431 430 429 428 427 426 425 424 423 422 421 420 419 418 417 416 415 414 413 412 411 410 409 408 407 406 405 404 403 402 401 400 399 398 397 396 395 394 393 392 391 390 389 388 387 386 385 384 383 382 381 380 379 378 377 376 374 372 371 369 368 367 366 365 364 363 362 361 360 359 358 357 356 355 354 353 352 351 350 349 348 347 346 345 344 343 342 341 340 339 338 335 334 333 332 331 330 329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309 308 307 306 305 304 303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 288 287 286 285 284 283 282 281 280 278 276 275 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 255 254 253 252 251 250 249 248 247 246 245 244 243 242 241 240 239 238 237 236 235 234 233 232 231 230 229 228 227 226 225 224 223 222 221 220 219 218 217 216 214 212 211 209 208 207 206 205 204 203 202 201 200 199 198 197 196 195 194 193 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 175 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 158 157 156 155 154 153 152 150 148 147 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 111 110 109 108 107 106 103 102 101 100 99 98 97 96 94 92 91 89 88 87 86 85 84 83 82 79 78 77 76 75 74 69 68 67 64 62 61 55 54 53 51 50 49 48 47 46 43 42 41 40 39 38 35 34 33 32 31 30 27 26 25 24 23 22 18 16 15 12 10 9 3 2 1) :IRULE (181 . 0) :CF-REPLACEMENTS ((192 "unser")) :P-REPLACEMENTS ((192 "unser" "unsr" "unser") (192 "unsr" "unser") (192 "unser" "unsr" "unser") (192 "unser" "unsr" "unser") (192 "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser") (192 "unser" "unsr" "unser") (192 "unsr" "unser") (192 "unser" "unsr" "unser") (192 "unser" "unsr" "unser") (192 "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser") (192 "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser" "unsr" "unser")) :TRIE-ENTRIES (900 890) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("unser" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "euer" :SURFACE-VARIANTS ("euer" "eur") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (975 974 973 972 971 970 969 968 967 966 965 964 963 962 961 960 959 958 957 956 955 954 953 952 951 950 949 948 947 946 945 944 943 942 941 940 939 938 937 936 935 934 933 932 931 930 929 928 927 926 925 924 923 922 921 920 918 916 915 913 912 911 910 909 908 907 906 905 904 903 902 901 900 899 898 897 896 895 894 893 892 891 890 889 888 887 886 885 884 883 882 881 880 879 878 877 876 875 874 873 872 871 870 869 868 867 866 865 864 863 862 861 860 859 858 857 856 854 852 851 849 848 847 846 845 844 843 842 841 840 839 838 837 836 835 834 833 832 831 830 829 828 827 826 825 824 823 822 821 820 819 818 817 816 815 814 813 812 811 810 809 808 807 806 805 804 803 802 801 800 799 798 797 796 795 794 793 792 790 788 787 785 784 783 782 781 780 779 778 777 776 775 774 773 772 771 770 769 768 767 766 765 764 763 762 761 760 759 758 757 756 755 754 753 752 751 750 749 748 747 746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 726 724 723 721 720 719 718 717 716 715 714 713 712 711 710 709 708 707 706 705 704 703 702 701 700 699 698 697 696 695 694 693 692 691 690 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673 672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633 632 630 628 627 625 624 623 622 621 620 619 618 617 616 615 614 613 612 611 610 609 608 607 606 605 604 603 602 601 600 599 598 597 596 595 594 593 592 591 590 589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574 573 572 571 570 569 568 566 564 563 561 560 559 558 557 556 555 554 553 552 551 550 549 548 547 546 545 544 543 542 541 540 539 538 537 536 535 534 533 532 531 530 527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499 498 495 494 493 492 491 490 489 488 487 486 485 484 483 482 481 480 479 478 477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449 448 447 446 445 444 443 442 441 440 438 436 435 433 432 431 430 429 428 427 426 425 424 423 422 421 420 419 418 417 416 415 414 413 412 411 410 409 408 407 406 405 404 403 402 401 400 399 398 397 396 395 394 393 392 391 390 389 388 387 386 385 384 383 382 381 380 379 378 377 376 374 372 371 369 368 367 366 365 364 363 362 361 360 359 358 357 356 355 354 353 352 351 350 349 348 347 346 345 344 343 342 341 340 339 338 335 334 333 332 331 330 329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309 308 307 306 305 304 303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 288 287 286 285 284 283 282 281 280 278 276 275 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 255 254 253 252 251 250 249 248 247 246 245 244 243 242 241 240 239 238 237 236 235 234 233 232 231 230 229 228 227 226 225 224 223 222 221 220 219 218 217 216 214 212 211 209 208 207 206 205 204 203 202 201 200 199 198 197 196 195 194 193 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 175 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 158 157 156 155 154 153 152 150 148 147 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 111 110 109 108 107 106 103 102 101 100 99 98 97 96 94 92 91 89 88 87 86 85 84 83 82 79 78 77 76 75 74 69 68 67 64 62 61 55 54 53 51 50 49 48 47 46 43 42 41 40 39 38 35 34 33 32 31 30 27 26 25 24 23 22 18 16 15 12 10 9 3 2 1) :IRULE (181 . 0) :CF-REPLACEMENTS ((194 "euer")) :P-REPLACEMENTS ((194 "euer" "eur" "euer") (194 "eur" "euer") (194 "euer" "eur" "euer") (194 "euer" "eur" "euer") (194 "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer") (194 "euer" "eur" "euer") (194 "eur" "euer") (194 "euer" "eur" "euer") (194 "euer" "eur" "euer") (194 "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer") (194 "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer" "eur" "euer")) :TRIE-ENTRIES (901 892) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("euer" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ihr" :SURFACE-VARIANTS ("ihr") :U-FORMATIVE 308) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 1) :CF-REPLACEMENTS ((196 "ihr")) :P-REPLACEMENTS ((196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr") (196 "ihr")) :TRIE-ENTRIES (889) :IA-FEATURES ((|Manner| . |Poss|) (|Pers| . |3rd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ihr" (|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Reflexive-Pronoun|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (282 ((0 0 0) (0 0 0)) (0 0 2)) (280 NIL (0 0 0)) (281 NIL (0 0 1))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (202 206 210 214 218 222 226 230 234) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 356 :UI-GENSYM #:UI60 :FS-GENSYM #:FS61) #S(IUI-FORMATIVE :LEXICAL-STRING "meiner" :SURFACE-VARIANTS ("meiner") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "mir" :SURFACE-VARIANTS ("mir") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "mich" :SURFACE-VARIANTS ("mich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((201 "mich")) :P-REPLACEMENTS ((199 "meiner") (200 "mir") (201 "mich")) :TRIE-ENTRIES (878 877 879) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "deiner" :SURFACE-VARIANTS ("deiner") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "dir" :SURFACE-VARIANTS ("dir") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "dich" :SURFACE-VARIANTS ("dich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((205 "dich")) :P-REPLACEMENTS ((203 "deiner") (204 "dir") (205 "dich")) :TRIE-ENTRIES (882 881 883) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("dich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "seiner" :SURFACE-VARIANTS ("seiner") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((209 "sich")) :P-REPLACEMENTS ((207 "seiner") (208 "sich") (209 "sich")) :TRIE-ENTRIES (884 895) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ihrer" :SURFACE-VARIANTS ("ihrer") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((213 "sich")) :P-REPLACEMENTS ((211 "ihrer") (212 "sich") (213 "sich")) :TRIE-ENTRIES (888 895) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "seiner" :SURFACE-VARIANTS ("seiner") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((217 "sich")) :P-REPLACEMENTS ((215 "seiner") (216 "sich") (217 "sich")) :TRIE-ENTRIES (884 895) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "unser" :SURFACE-VARIANTS ("unser") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "uns" :SURFACE-VARIANTS ("uns") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "uns" :SURFACE-VARIANTS ("uns") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((221 "uns")) :P-REPLACEMENTS ((219 "unser") (220 "uns") (221 "uns")) :TRIE-ENTRIES (890 891) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("uns" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "euer" :SURFACE-VARIANTS ("euer") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "euch" :SURFACE-VARIANTS ("euch") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "euch" :SURFACE-VARIANTS ("euch") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((225 "euch")) :P-REPLACEMENTS ((223 "euer") (224 "euch") (225 "euch")) :TRIE-ENTRIES (892 893) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("euch" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ihrer" :SURFACE-VARIANTS ("ihrer") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "sich" :SURFACE-VARIANTS ("sich") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((229 "sich")) :P-REPLACEMENTS ((227 "ihrer") (228 "sich") (229 "sich")) :TRIE-ENTRIES (888 895) :IA-FEATURES ((|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sich" (|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "einander" :SURFACE-VARIANTS ("einander") :U-FORMATIVE 280) #S(IUI-FORMATIVE :LEXICAL-STRING "einander" :SURFACE-VARIANTS ("einander") :U-FORMATIVE 281) #S(IUI-FORMATIVE :LEXICAL-STRING "einander" :SURFACE-VARIANTS ("einander") :U-FORMATIVE 282) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS ((233 "einander")) :P-REPLACEMENTS ((231 "einander") (232 "einander") (233 "einander")) :TRIE-ENTRIES (896) :IA-FEATURES ((|Manner| . |Rezipr|) (|Num| . PL)) :DELETED-FORMS (((((|Case| . |Gen|))))) :SRULES (NIL) :LU ("void") :LEXEME-ID ("einander" (|Cat| . |Pron|) (|Manner| . |Rezipr|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Personal-Pronoun|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH PH))) :PARADIGMS (((((|Cat| . |Pron|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (276 ((0 0 0) (0 0 0)) (0 0 0)) (277 NIL (0 0 1)) (278 NIL (0 0 2)) (279 NIL (0 0 3))) :COMMON-FEATURES ((|Cat| . |Pron|)) :ENTRIES (240 245 250 255 260 265 270 275) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 357 :UI-GENSYM #:UI62 :FS-GENSYM #:FS63) #S(IUI-FORMATIVE :LEXICAL-STRING "ich" :SURFACE-VARIANTS ("ich") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "meiner" :SURFACE-VARIANTS ("meiner") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "mir" :SURFACE-VARIANTS ("mir") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "mich" :SURFACE-VARIANTS ("mich") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((236 "ich")) :P-REPLACEMENTS ((236 "ich") (237 "meiner") (238 "mir") (239 "mich")) :TRIE-ENTRIES (879 878 877 876) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ich" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "du" :SURFACE-VARIANTS ("du") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "deiner" :SURFACE-VARIANTS ("deiner") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "dir" :SURFACE-VARIANTS ("dir") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "dich" :SURFACE-VARIANTS ("dich") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((241 "du")) :P-REPLACEMENTS ((241 "du") (242 "deiner") (243 "dir") (244 "dich")) :TRIE-ENTRIES (883 882 881 880) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("du" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "seiner" :SURFACE-VARIANTS ("seiner") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "ihm" :SURFACE-VARIANTS ("ihm") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "ihn" :SURFACE-VARIANTS ("ihn") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((246 "er")) :P-REPLACEMENTS ((246 "er") (247 "seiner") (248 "ihm") (249 "ihn")) :TRIE-ENTRIES (886 885 884 768) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("er" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "sie" :SURFACE-VARIANTS ("sie") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "ihrer" :SURFACE-VARIANTS ("ihrer") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "ihr" :SURFACE-VARIANTS ("ihr") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "sie" :SURFACE-VARIANTS ("sie") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((251 "sie")) :P-REPLACEMENTS ((251 "sie") (252 "ihrer") (253 "ihr") (254 "sie")) :TRIE-ENTRIES (889 888 887) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sie" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "seiner" :SURFACE-VARIANTS ("seiner") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "ihm" :SURFACE-VARIANTS ("ihm") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((256 "es")) :P-REPLACEMENTS ((256 "es") (257 "seiner") (258 "ihm") (259 "es")) :TRIE-ENTRIES (885 884 750) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("es" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "wir" :SURFACE-VARIANTS ("wir") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "unser" :SURFACE-VARIANTS ("unser") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "uns" :SURFACE-VARIANTS ("uns") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "uns" :SURFACE-VARIANTS ("uns") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((261 "wir")) :P-REPLACEMENTS ((261 "wir") (262 "unser") (263 "uns") (264 "uns")) :TRIE-ENTRIES (891 890 854) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("wir" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "ihr" :SURFACE-VARIANTS ("ihr") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "euer" :SURFACE-VARIANTS ("euer") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "euch" :SURFACE-VARIANTS ("euch") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "euch" :SURFACE-VARIANTS ("euch") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((266 "ihr")) :P-REPLACEMENTS ((266 "ihr") (267 "euer") (268 "euch") (269 "euch")) :TRIE-ENTRIES (893 892 889) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ihr" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "sie" :SURFACE-VARIANTS ("sie") :U-FORMATIVE 276) #S(IUI-FORMATIVE :LEXICAL-STRING "ihrer" :SURFACE-VARIANTS ("ihrer") :U-FORMATIVE 277) #S(IUI-FORMATIVE :LEXICAL-STRING "ihnen" :SURFACE-VARIANTS ("ihnen") :U-FORMATIVE 278) #S(IUI-FORMATIVE :LEXICAL-STRING "sie" :SURFACE-VARIANTS ("sie") :U-FORMATIVE 279) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS ((271 "sie")) :P-REPLACEMENTS ((271 "sie") (272 "ihrer") (273 "ihnen") (274 "sie")) :TRIE-ENTRIES (894 888 887) :IA-FEATURES ((|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("sie" (|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pers-Pron|) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pers-Pron|) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pers-Pron|) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pers-Pron|) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Refl-Pron|) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Refl-Pron|) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Refl-Pron|) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |der/die/das|) (|Case| . |Nom|) (|ICat| . |Ana/Cataphoric|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |der/die/das|) (|Case| . |Gen|) (|ICat| . |Anaphoric|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |der/die/das|) (|Case| . |Gen|) (|ICat| . |Cataphoric|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |der/die/das|) (|Case| . |Dat|) (|ICat| . |Ana/Cataphoric|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |der/die/das|) (|Case| . |Acc|) (|ICat| . |Ana/Cataphoric|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . PL) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . PL) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . PL) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Demonstr-Pron|) (|ICat| . |Art+Pron-Stem|) (|Num| . PL) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Rel-Pron|) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Rel-Pron|) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Rel-Pron|) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Rel-Pron|) (|Case| . |Acc|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Stem|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|) (|ICat| . |er|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|) (|ICat| . |en|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em" "m") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|) (|ICat| . |en|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em" "m") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|) (|ICat| . |er|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|) (|ICat| . |en|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em" "m") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|) (|ICat| . |en|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em" "m") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|) (|ICat| . -))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|) (|ICat| . |es|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-Strong|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Mixed|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|Decl| . |Invar|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jedermann|) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jedermann|) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jedermann|) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jedermann|) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jemand|) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jemand|) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jemand|) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "") :FEATURE-SET ((|Cat| . |Pron|) (|ICat| . |Pron-Suffix|) (|ICat| . |Decl-jemand|) (|Case| . |Acc|))) #S(IIRULE :NAME (|Indefinite-Article|) :CITATION-FORMS (((PH) ((396 (""))))) :WORD-FORMS (((PH) ((396 ("")) (397 ("es")) (398 ("em")) (399 ("en")) (400 ("e")) (401 ("er")) (402 ("er")) (403 ("e")) (404 ("")) (405 ("es")) (406 ("em")) (407 (""))))) :PARADIGMS (((((|Gender| . M)))) ((((|Gender| . F)))) ((((|Gender| . N))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (395 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Manner| . |Indef|) (|Cat| . |Art|)) :ENTRIES (394) :TRIE-ENTRIES (768 752 758 788 750 749) :WFRULES-TRIGGERED 358 :UI-GENSYM #:UI64 :FS-GENSYM #:FS65) #S(IUI-FORMATIVE :LEXICAL-STRING "ein" :SURFACE-VARIANTS ("ein") :U-FORMATIVE 395) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (392 . 0) :CF-REPLACEMENTS ((393 "ein")) :P-REPLACEMENTS ((393 "ein")) :TRIE-ENTRIES (875) :IA-FEATURES ((|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ein" (|Manner| . |Indef|) (|Cat| . |Art|) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Stem|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Indef|) (|ICat| . |Art-Suffix|) (|Gender| . N) (|Case| . |Acc|))) #S(IIRULE :NAME (|Definite-Article|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :PARADIGMS (((((|Cat| . |Art|) (|Manner| . |Def|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (429 ((0 0 0) (0 0 0)) (0 0 0)) (430 NIL (1 0 0)) (431 NIL (2 0 0)) (432 NIL (3 0 0))) :COMMON-FEATURES ((|Manner| . |Def|) (|Cat| . |Art|)) :ENTRIES (413 418 423 428) :TRIE-ENTRIES NIL :WFRULES-TRIGGERED 359 :UI-GENSYM #:UI66 :FS-GENSYM #:FS67) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 429) #S(IUI-FORMATIVE :LEXICAL-STRING "des" :SURFACE-VARIANTS ("des") :U-FORMATIVE 430) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 431) #S(IUI-FORMATIVE :LEXICAL-STRING "den" :SURFACE-VARIANTS ("den") :U-FORMATIVE 432) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS ((409 "der")) :P-REPLACEMENTS ((409 "der") (410 "des") (411 "dem") (412 "den")) :TRIE-ENTRIES (872 871 870 869) :IA-FEATURES ((|Gender| . M) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("der" (|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . M) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 429) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 430) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 431) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 432) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS ((414 "die")) :P-REPLACEMENTS ((414 "die") (415 "der") (416 "der") (417 "die")) :TRIE-ENTRIES (869 873) :IA-FEATURES ((|Gender| . F) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . F) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 429) #S(IUI-FORMATIVE :LEXICAL-STRING "des" :SURFACE-VARIANTS ("des") :U-FORMATIVE 430) #S(IUI-FORMATIVE :LEXICAL-STRING "dem" :SURFACE-VARIANTS ("dem") :U-FORMATIVE 431) #S(IUI-FORMATIVE :LEXICAL-STRING "das" :SURFACE-VARIANTS ("das") :U-FORMATIVE 432) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS ((419 "das")) :P-REPLACEMENTS ((419 "das") (420 "des") (421 "dem") (422 "das")) :TRIE-ENTRIES (871 870 874) :IA-FEATURES ((|Gender| . N) (|Num| . SG)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("das" (|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . N) (|Num| . SG)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 429) #S(IUI-FORMATIVE :LEXICAL-STRING "der" :SURFACE-VARIANTS ("der") :U-FORMATIVE 430) #S(IUI-FORMATIVE :LEXICAL-STRING "den" :SURFACE-VARIANTS ("den") :U-FORMATIVE 431) #S(IUI-FORMATIVE :LEXICAL-STRING "die" :SURFACE-VARIANTS ("die") :U-FORMATIVE 432) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS ((424 "die")) :P-REPLACEMENTS ((424 "die") (425 "der") (426 "den") (427 "die")) :TRIE-ENTRIES (872 869 873) :IA-FEATURES ((|Num| . PL)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("die" (|Manner| . |Def|) (|Cat| . |Art|) (|Num| . PL)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Def|) (|ICat| . |Def-Article|) (|Case| . |Nom|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Def|) (|ICat| . |Def-Article|) (|Case| . |Gen|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Def|) (|ICat| . |Def-Article|) (|Case| . |Dat|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . |Art|) (|Manner| . |Def|) (|ICat| . |Def-Article|) (|Case| . |Acc|))) #S(IIRULE :NAME (|sein|) :CITATION-FORMS (((PH) ((449 ("n"))))) :WORD-FORMS (((PH) ((449 ("n")))) ((PH) ((450 ("")) (451 ("st")) (452 ("t")) (453 ("")) (454 ("d")) (455 ("")))) ((PH) ((456 ("")) (457 ("st")) (458 ("")) (459 ("en")) (460 ("t")) (461 ("en")))) ((PH) ((462 ("")) (463 ("st" "est")) (464 ("")) (465 ("en")) (466 ("et")) (467 ("en")))) ((PH) ((468 ("e")) (469 ("st" "est")) (470 ("e")) (471 ("en")) (472 ("t" "et")) (473 ("en")))) ((PH) ((474 ("")) (475 ("d")))) ((PH) ((476 ("end")))) (((478 ("ge"))) (PH) ((477 ("en"))))) :PARADIGMS (((((|Mod| . |Inf|)))) ((((|Mod| . |Ind|) (|Temp| . |Pres|)))) ((((|Mod| . |Ind|) (|Temp| . |Impf|)))) ((((|Mod| . |Conj-1|) (|Temp| . |Pres|)))) ((((|Mod| . |Conj-2|) (|Temp| . |Impf|)))) ((((|Mod| . |Imper|)))) ((((|Mod| . |Part|) (|Temp| . |Pres|)))) ((((|Mod| . |Part|) (|Temp| . |Perf|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(sein)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "bin") (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "bi") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "is") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "sind") (((|ICat| . |V-Stem|)))) (("en" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei") (((|ICat| . |V-Stem|)))) (("t" NIL "d") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . PL))) (((|Mod| . |Imper|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|Mod| . |Inf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-7" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei") (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|Mod| . |Conj-1|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-8" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei") (((|ICat| . |V-Stem|)))) (("est" NIL "st") (((|Mod| . |Conj-1|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(sein)-9" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "war") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-10" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("war" NIL "w5r") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-11" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("w5r") (((|ICat| . |V-Stem|)))) (("e\\(s?t\\)" NIL "\\1") (((|Mod| . |Conj-2|) (|Pers| . |2nd|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(sein)-12" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei") (((|ICat| . |V-Stem|)))) (("t" NIL "d") (((|Mod| . |Imper|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(sein)-13" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("sei" NIL "wes") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Perf|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (448 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 1 0))) :COMMON-FEATURES ((|Cat| . V)) :ENTRIES (435) :TRIE-ENTRIES (837 835 833 831 829 827 859 826 792 791 790 749 752 753 758) :WFRULES-TRIGGERED 360 :UI-GENSYM #:UI68 :FS-GENSYM #:FS69) #S(IUI-FORMATIVE :LEXICAL-STRING "sei" :SURFACE-VARIANTS ("sei" "bin" "bi" "is" "sind" "war" "w%r" "wes") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (36 35 33 32 31 30 28 27 26 25 24 23 21 20 19 18 17 16 14 13 12 11 10 9 7 6 5 4 3 2) :IRULE (433 . 0) :CF-REPLACEMENTS ((434 "sei")) :P-REPLACEMENTS ((434 "sei") (434 "bin" "bi" "is" "sind" "sei" "sind") (434 "war") (434 "sei") (434 "w%r") (434 "sei") (434 "sei") (434 "wes")) :TRIE-ENTRIES (868 867 866 865 864 863 862 861) :IA-FEATURES ((|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("sein") :LEXEME-ID ("sein" (|Cat| . V) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|Detachable-Prefix|) :CITATION-FORMS (((PH) (PH) ((449 ("en"))))) :WORD-FORMS (((PH) (PH) ((449 ("en")))) ((PH) (PH) ((450 ("e")) (451 ("t")) (452 ("t")) (453 ("en")) (454 ("t")) (455 ("en")))) ((PH) (PH) ((456 ("")) (457 ("est" "t")) (458 ("")) (459 ("en")) (460 ("t")) (461 ("en")))) ((PH) (PH) ((462 ("e")) (463 ("est")) (464 ("e")) (465 ("en")) (466 ("et")) (467 ("en")))) ((PH) (PH) ((468 ("e")) (469 ("est")) (470 ("e")) (471 ("en")) (472 ("et")) (473 ("en")))) ((PH) (PH) ((476 ("end")))) ((PH) ((478 ("ge"))) (PH) ((477 ("en"))))) :PARADIGMS (((((|Mod| . |Inf|)))) ((((|Mod| . |Ind|) (|Temp| . |Pres|)))) ((((|Mod| . |Ind|) (|Temp| . |Impf|)))) ((((|Mod| . |Conj-1|) (|Temp| . |Pres|)))) ((((|Mod| . |Conj-2|) (|Temp| . |Impf|)))) ((((|Mod| . |Imper|)))) ((((|Mod| . |Part|) (|Temp| . |Pres|)))) ((((|Mod| . |Part|) (|Temp| . |Perf|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*t") (((|ICat| . |V-Stem|)))) (("et" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*st") (((|ICat| . |V-Stem|)))) (("est" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*[dt]") (((|ICat| . |V-Stem|)))) (("e\\(s?t\\)" NIL "\\1") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[Ex']..#.*") (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*b#iAe#t\\)t" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*f#Aya#l\\)l" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-7" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*g#eia#\\)h" NIL "\\1ng") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-8" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*k#oAo#m\\)m" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-9" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*sch#aUa#f\\)f" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-10" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*schr#EAo#\\)ck" NIL "\\1k") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-11" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#yOo#\\)d" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-12" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#iAe#\\)tz" NIL "\\1ss") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-13" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*st#e2a#\\)h" NIL "\\1nd") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-14" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*tr#EAo#f\\)f" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-15" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*t#uAa#\\)" NIL "\\1t") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-16" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*z#yOo#\\)h" NIL "\\1g") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-17" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*tr#EAe#\\)t" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-18" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*n#EAo#\\)hm" NIL "\\1mm") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))) (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-19" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*#ei#\\)[dt]" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-20" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*#ei#\\)f" NIL "\\1ff") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-21" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#AU#\\)f" NIL "\\1ff") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-22" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*m#+Oo#\\)g" NIL "\\1ch") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-23" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) ((".*" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-24" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*m#%Uu#ss\\|.*w#iUu#ss") (((|ICat| . |V-Stem|)))) (("t" NIL "st") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-25" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) (("\\([^e].*\\)" NIL "te\\1") (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-26" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) (("\\(e.*\\)" NIL "t\\1") (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-27" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) (("" NIL "te") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-28" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) (("en" NIL "t") (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-29" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#A..#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-30" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#A[uU]#\\(.*\\)" NIL "\\15u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-31" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[E']..#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-32" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#x..#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-33" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*st\\)#oyo#\\(ss\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-34" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*d\\)#%Uu#\\(rf\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-35" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#+Oo#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-36" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*m\\)#%Uu#\\(ss\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-37" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*w\\)#ooo#\\(ll\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-38" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*w\\)#iUu#\\(ss\\)" NIL "\\1ei\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-39" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#ei#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-40" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#Ei#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-41" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.i.#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-42" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.y.#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-43" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#Au#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-44" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[A42].#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-45" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[Aa]U#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-46" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.O.#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-47" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.U.#\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-48" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*sch\\)#EAo#\\(lt\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-49" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*schw\\)#+Oo#\\(r\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-50" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.A.#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-51" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[Aa]U#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-52" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.O.#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-53" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.U.#\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-54" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.2.#\\(r[bf]\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-55" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[42].#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-56" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.4.#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-57" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.2.#\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-58" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..a#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-59" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..o#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-60" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..u#\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-61" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..e#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-62" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[aA]..#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-63" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[aA][uU]#\\(.*\\)" NIL "\\1au\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-64" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[eEx]..#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-65" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[eE]i#\\(.*\\)" NIL "\\1ei\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-66" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#y..#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-67" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#'..#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-68" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#\\([5io+u%]\\)..#\\(.*\\)" NIL "\\1\\2\\3") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-69" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[^rst][dt]") (((|ICat| . |V-Stem|)))) (("e\\(st\\)" NIL "\\1") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-70" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[sz]") (((|ICat| . |V-Stem|)))) (("t" NIL "est") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-71" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*sch") (((|ICat| . |V-Stem|)))) (("st" NIL "est") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-72" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[5+%].*[sxz]") (((|ICat| . |V-Stem|)))) (("es?\\(t\\)" NIL "\\1") (((|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-73" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[5+%].*[^sxzdt]") (((|ICat| . |V-Stem|)))) (("e\\(s?t\\)" NIL "\\1") (((|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-74" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*ie") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-75" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)tu") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|ICat| . |V-Suffix|)) ((|Mod| . |Conj-1|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-76" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)ta") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-77" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)wird" NIL "\\1wir")) (("st") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-78" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)wird")) (("t" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-79" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)wurd")) (("" NIL "e") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (479 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0)) (448 ((0 1 0) (0 1 0)) (0 1 0) (1 1 0) (2 1 0) (3 1 0) (4 1 0) (5 1 0) (6 2 0))) :COMMON-FEATURES ((|Cat| . V)) :ENTRIES (712) :TRIE-ENTRIES (837 835 833 831 829 827 859 826 792 791 790 749 752 753 758) :WFRULES-TRIGGERED 361 :UI-GENSYM #:UI70 :FS-GENSYM #:FS71) #S(IIRULE :NAME (|No-Detachable-Prefix|) :CITATION-FORMS (((PH) ((449 ("en") ("en") ("en") ("en"))))) :WORD-FORMS (((PH) ((449 ("en") ("en") ("en") ("en")))) ((PH) ((450 ("e") ("e") ("e") ("e")) (451 ("st") ("st") ("st") ("t")) (452 ("") ("t") ("t") ("t")) (453 ("en") ("en") ("en") ("en")) (454 ("et") ("t") ("t") ("t")) (455 ("en") ("en") ("en") ("en")))) ((PH) ((456 ("e") ("") ("") ("")) (457 ("est") ("st") ("st") ("est" "t")) (458 ("e") ("") ("") ("")) (459 ("en") ("en") ("en") ("en")) (460 ("et") ("t") ("t") ("t")) (461 ("en") ("en") ("en") ("en")))) ((PH) ((462 ("e") ("e") ("e") ("e")) (463 ("est") ("est") ("est") ("est")) (464 ("e") ("e") ("e") ("e")) (465 ("en") ("en") ("en") ("en")) (466 ("et") ("et") ("et") ("et")) (467 ("en") ("en") ("en") ("en")))) ((PH) ((468 ("e") ("e") ("e") ("e")) (469 ("est") ("st" "est") ("est") ("est")) (470 ("e") ("e") ("e") ("e")) (471 ("en") ("en") ("en") ("en")) (472 ("et") ("t" "et") ("et") ("et")) (473 ("en") ("en") ("en") ("en")))) ((PH) ((474 ("e") ("" "e") ("" "e") ("" "e")) (475 ("et") ("t") ("t") ("t")))) ((PH) ((476 ("end") ("end") ("end") ("end")))) (((478 ("" "ge") ("ge") ("ge") ("ge"))) (PH) ((477 ("en") ("en") ("en") ("en"))))) :PARADIGMS (((((|Mod| . |Inf|)))) ((((|Mod| . |Ind|) (|Temp| . |Pres|)))) ((((|Mod| . |Ind|) (|Temp| . |Impf|)))) ((((|Mod| . |Conj-1|) (|Temp| . |Pres|)))) ((((|Mod| . |Conj-2|) (|Temp| . |Impf|)))) ((((|Mod| . |Imper|)))) ((((|Mod| . |Part|) (|Temp| . |Pres|)))) ((((|Mod| . |Part|) (|Temp| . |Perf|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*t") (((|ICat| . |V-Stem|)))) (("et" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*st") (((|ICat| . |V-Stem|)))) (("est" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[AEx]..#.*[dt]") (((|ICat| . |V-Stem|)))) (("e\\(s?t\\)" NIL "\\1") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#[Ex']..#.*") (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*b#iAe#t\\)t" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*f#Aya#l\\)l" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-7" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*g#eia#\\)h" NIL "\\1ng") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-8" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*k#oAo#m\\)m" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-9" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*b#AUa#\\)ck" NIL "\\1k") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-10" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*sch#aUa#f\\)f" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-11" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*schr#EAo#\\)ck" NIL "\\1k") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-12" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#yOo#\\)d" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-13" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#iAe#\\)tz" NIL "\\1ss") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-14" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*st#e2a#\\)h" NIL "\\1nd") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-15" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*tr#EAo#f\\)f" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-16" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*t#uAa#\\)" NIL "\\1t") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-17" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*z#yOo#\\)h" NIL "\\1g") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-18" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*br#iAa#\\)ng" NIL "\\1ch") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-19" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*d#eAa#\\)nk" NIL "\\1ch") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-20" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*tr#EAe#\\)t" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-21" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*n#EAo#\\)hm" NIL "\\1mm") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))) (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-22" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*#ei#\\)[dt]" NIL "\\1tt") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-23" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*#ei#\\)f" NIL "\\1ff") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-24" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*s#AU#\\)f" NIL "\\1ff") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-25" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*m#+Oo#\\)g" NIL "\\1ch") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-26" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*") (((|ICat| . |V-Stem|)))) ((".*" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-27" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*m#%Uu#ss\\|.*w#iUu#ss") (((|ICat| . |V-Stem|)))) (("t" NIL "st") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-28" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*\\|.*br#iAa#ch\\|.*d#eAa#ch") (((|ICat| . |V-Stem|)))) (("\\([^e].*\\)" NIL "te\\1") (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-29" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*\\|.*br#iAa#ch\\|.*d#eAa#ch") (((|ICat| . |V-Stem|)))) (("\\(e.*\\)" NIL "t\\1") (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-30" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*\\|.*br#iAa#ch\\|.*d#eAa#ch") (((|ICat| . |V-Stem|)))) (("" NIL "te") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-31" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*#%Uu#.*\\|.*#+Oo#.*\\|.*#ooo#.*\\|.*#iUu#.*\\|.*br#iAa#ch\\|.*d#eAa#ch") (((|ICat| . |V-Stem|)))) (("en" NIL "t") (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-32" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#A..#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-33" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#A[uU]#\\(.*\\)" NIL "\\15u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-34" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[E']..#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-35" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#x..#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-36" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*st\\)#oyo#\\(ss\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-37" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*d\\)#%Uu#\\(rf\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-38" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#+Oo#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-39" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*m\\)#%Uu#\\(ss\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-40" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*w\\)#ooo#\\(ll\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-41" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*w\\)#iUu#\\(ss\\)" NIL "\\1ei\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-42" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#ei#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-43" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#Ei#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-44" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.i.#\\(.*\\)" NIL "\\1i\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-45" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.y.#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-46" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#Au#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-47" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[A42].#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-48" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[Aa]U#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-49" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[O&].#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-50" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.U.#\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-51" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*sch\\)#EAo#\\(lt\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-52" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*schw\\)#+&o#\\(r\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-53" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.A.#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-54" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[Aa]U#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-55" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[O&].#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-56" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.U.#\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-57" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.2.#\\(r[bf]\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-58" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.[42].#\\(.*\\)" NIL "\\15\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-59" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.4.#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-60" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#.2.#\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-61" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..a#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-62" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..o#\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-63" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..u#\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-64" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#..e#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-65" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[aA]..#\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-66" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[aA][uU]#\\(.*\\)" NIL "\\1au\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-67" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[eEx]..#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-68" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#[eE]i#\\(.*\\)" NIL "\\1ei\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-69" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#y..#\\(.*\\)" NIL "\\1ie\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-70" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#'..#\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-71" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#\\([5io+u%]\\).*#\\(.*\\)" NIL "\\1\\2\\3") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-72" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[^rst][dt]") (((|ICat| . |V-Stem|)))) (("e\\(st\\)" NIL "\\1") (((|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-73" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[sz]") (((|ICat| . |V-Stem|)))) (("t" NIL "est") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-74" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*sch") (((|ICat| . |V-Stem|)))) (("st" NIL "est") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-75" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[5+%].*[sxz]") (((|ICat| . |V-Stem|)))) (("es?\\(t\\)" NIL "\\1") (((|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-76" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*[5+%].*[^sxzdt]") (((|ICat| . |V-Stem|)))) (("e\\(s?t\\)" NIL "\\1") (((|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-77" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*ie") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-78" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)tu") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|ICat| . |V-Suffix|)) ((|Mod| . |Conj-1|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-79" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)ta") (((|ICat| . |V-Stem|)))) (("en" NIL "n") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-80" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("ge")) (("ess" NIL "gess") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-81" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)hiess" NIL "\\1heiss") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-82" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*stand\\|.*tat") (((|ICat| . |V-Stem|)))) (("t" NIL "et") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . PL))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (448 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 1 0))) :COMMON-FEATURES ((|Cat| . V)) :ENTRIES (439 441 443 445 447) :TRIE-ENTRIES (837 835 833 831 829 827 859 826 792 791 790 749 752 753 758) :WFRULES-TRIGGERED 362 :UI-GENSYM #:UI72 :FS-GENSYM #:FS73) #S(IUI-FORMATIVE :LEXICAL-STRING "b#ei#ss" :SURFACE-VARIANTS ("beiss" "biss") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES (712) :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 3) :CF-REPLACEMENTS ((438 "beiss")) :P-REPLACEMENTS ((438 "beiss") (438 "beiss") (438 "biss") (438 "beiss") (438 "biss") (438 "beiss") (438 "beiss") (438 "biss")) :TRIE-ENTRIES (840 839) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("beissen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "g#eia#h" :SURFACE-VARIANTS ("geh" "ging" "gang" "g%ng") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 2) :CF-REPLACEMENTS ((440 "geh")) :P-REPLACEMENTS ((440 "geh") (440 "geh") (440 "ging") (440 "geh") (440 "ging") (440 "geh") (440 "geh") (440 "gang")) :TRIE-ENTRIES (844 843 842 841) :IA-FEATURES ((|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("gehen" (|Cat| . V) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "k#oAo#mm" :SURFACE-VARIANTS ("komm" "kam" "k%m" "k$mm") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 1) :CF-REPLACEMENTS ((442 "komm")) :P-REPLACEMENTS ((442 "komm") (442 "komm") (442 "kam") (442 "komm") (442 "k%m") (442 "komm") (442 "komm") (442 "komm")) :TRIE-ENTRIES (848 847 846 845) :IA-FEATURES ((|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("kommen" (|Cat| . V) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "schl#AUa#g" :SURFACE-VARIANTS ("schlag" "schl%g" "schlug" "schl#g") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (18 17 15 14 12 11 9 7 6 4 3 2) :IRULE (437 . 1) :CF-REPLACEMENTS ((444 "schlag")) :P-REPLACEMENTS ((444 "schlag") (444 "schlag" "schl%g" "schlag") (444 "schlug") (444 "schlag") (444 "schl#g") (444 "schlag") (444 "schlag") (444 "schlag")) :TRIE-ENTRIES (852 851 850 849) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("schlagen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "w#EUo#rd" :SURFACE-VARIANTS ("werd" "wir" "wird" "wurd" "w#rd" "word") :U-FORMATIVE 448) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (24 23 22 20 19 18 16 15 14 12 10 9 8 7 5 4 3 2) :IRULE (437 . 0) :CF-REPLACEMENTS ((446 "werd")) :P-REPLACEMENTS ((446 "werd") (446 "werd" "wir" "wird" "werd") (446 "wurd") (446 "werd") (446 "w#rd") (446 "werd") (446 "werd") (446 "word")) :TRIE-ENTRIES (858 857 856 855 854 853) :IA-FEATURES ((|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES ((#S(ENTRY-ISRULE :NAME "IEntry-werden ((Cat . V) (Aux . sein))-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("wird" NIL "wir")) (("st") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-werden ((Cat . V) (Aux . sein))-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("wird")) (("t" NIL "") (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-werden ((Cat . V) (Aux . sein))-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("wurd")) (("" NIL "e") (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-werden ((Cat . V) (Aux . sein))-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("wird" NIL "werd")) (("" NIL "e") (((|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-werden ((Cat . V) (Aux . sein))-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("ge" NIL "")) (("word")) (NIL (((|Temp| . |Perf|))))) :VALUE-FLAG T))) :LU ("void") :LEXEME-ID ("werden" (|Cat| . V) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Stem|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Inf|) (|Temp| . |Pres|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "st" :SURFACE-VARIANTS ("st" "est" "t" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et" "d") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("" "te" "e") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "st" :SURFACE-VARIANTS ("st" "t" "est" "test") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("" "te" "e") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n" "ten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et" "tet") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "ten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "est" :SURFACE-VARIANTS ("est" "st" "t") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "et" :SURFACE-VARIANTS ("et" "t") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "te") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "est" :SURFACE-VARIANTS ("st" "est" "t" "test") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "te") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "ten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "et" :SURFACE-VARIANTS ("t" "et" "tet") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "ten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et" "d") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "end" :SURFACE-VARIANTS ("end") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Part|) (|Temp| . |Pres|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n" "t") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Suffix|) (|Mod| . |Part|) (|Temp| . |Perf|))) #S(FSI-FORMATIVE :LEXICAL-STRING "ge" :SURFACE-VARIANTS ("ge" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |V-Prefix|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Irregular|) (|ICat| . |Detachable-Prefix|))) #S(RIRULE :NAME (|Detachable-Prefix|) :CITATION-FORMS (((PH) (PH) ((499 ("n"))))) :WORD-FORMS (((PH) (PH) ((499 ("n")))) ((PH) (PH) ((500 ("e")) (501 ("st")) (502 ("t")) (503 ("n")) (504 ("t")) (505 ("n")))) ((PH) (PH) ((506 ("te")) (507 ("test")) (508 ("te")) (509 ("ten")) (510 ("tet")) (511 ("ten")))) ((PH) (PH) ((512 ("e")) (513 ("st")) (514 ("e")) (515 ("n")) (516 ("t")) (517 ("n")))) ((PH) (PH) ((518 ("te")) (519 ("test")) (520 ("te")) (521 ("ten")) (522 ("tet")) (523 ("ten")))) ((PH) (PH) ((526 ("nd")))) ((PH) ((528 ("ge"))) (PH) ((527 ("t"))))) :PARADIGMS (((((|Mod| . |Inf|)))) ((((|Mod| . |Ind|) (|Temp| . |Pres|)))) ((((|Mod| . |Ind|) (|Temp| . |Impf|)))) ((((|Mod| . |Conj-1|) (|Temp| . |Pres|)))) ((((|Mod| . |Conj-2|) (|Temp| . |Impf|)))) ((((|Mod| . |Imper|)))) ((((|Mod| . |Part|) (|Temp| . |Pres|)))) ((((|Mod| . |Part|) (|Temp| . |Perf|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(nd\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (("e\\(t.*\\)" NIL "\\1") (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(nn\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(Detachable-Prefix)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (529 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0)) (498 ((0 1 0) (0 1 0)) (0 1 0) (1 1 0) (2 1 0) (3 1 0) (4 1 0) (5 1 0) (6 2 0))) :COMMON-FEATURES ((|Cat| . V)) :ENTRIES (708) :TRIE-ENTRIES (749 837 836 835 834 833 832 831 830 829 828 827 826 792 791 790 752 753 758) :WFRULES-TRIGGERED 363 :UI-GENSYM #:UI74 :FS-GENSYM #:FS75) #S(RIRULE :NAME (|No-Detachable-Prefix|) :CITATION-FORMS (((PH) ((499 ("en") ("en") ("n") ("n"))))) :WORD-FORMS (((PH) ((499 ("en") ("en") ("n") ("n")))) ((PH) ((500 ("e") ("e") ("e") ("e")) (501 ("est") ("st") ("st") ("st")) (502 ("et") ("t") ("t") ("t")) (503 ("en") ("en") ("n") ("n")) (504 ("et") ("t") ("t") ("t")) (505 ("en") ("en") ("n") ("n")))) ((PH) ((506 ("te" "ete") ("te") ("te") ("te")) (507 ("test" "etest") ("test") ("test") ("test")) (508 ("te" "ete") ("te") ("te") ("te")) (509 ("ten" "eten") ("ten") ("ten") ("ten")) (510 ("tet" "etet") ("tet") ("tet") ("tet")) (511 ("ten" "eten") ("ten") ("ten") ("ten")))) ((PH) ((512 ("e") ("e") ("e") ("e")) (513 ("est") ("est") ("st") ("st")) (514 ("e") ("e") ("e") ("e")) (515 ("en") ("en") ("n") ("n")) (516 ("et") ("et") ("t") ("t")) (517 ("en") ("en") ("n") ("n")))) ((PH) ((518 ("ete") ("te") ("te") ("te")) (519 ("etest") ("test") ("test") ("test")) (520 ("ete") ("te") ("te") ("te")) (521 ("eten") ("ten") ("ten") ("ten")) (522 ("etet") ("tet") ("tet") ("tet")) (523 ("eten") ("ten") ("ten") ("ten")))) ((PH) ((524 ("" "e") ("" "e") ("e") ("e")) (525 ("et") ("t") ("t") ("t")))) ((PH) ((526 ("end") ("end") ("nd") ("nd")))) (((528 ("ge") ("ge") ("ge") (""))) (PH) ((527 ("t" "et") ("t") ("t") ("t"))))) :PARADIGMS (((((|Mod| . |Inf|)))) ((((|Mod| . |Ind|) (|Temp| . |Pres|)))) ((((|Mod| . |Ind|) (|Temp| . |Impf|)))) ((((|Mod| . |Conj-1|) (|Temp| . |Pres|)))) ((((|Mod| . |Conj-2|) (|Temp| . |Impf|)))) ((((|Mod| . |Imper|)))) ((((|Mod| . |Part|) (|Temp| . |Pres|)))) ((((|Mod| . |Part|) (|Temp| . |Perf|))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(nd\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (("e\\(t.*\\)" NIL "\\1") (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(nn\\)" NIL "\\1a\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Impf|))) (((|Temp| . |Perf|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(No-Detachable-Prefix)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)#eaa#\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (498 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0) (4 0 0) (5 0 0) (6 0 0) (7 1 0))) :COMMON-FEATURES ((|Cat| . V)) :ENTRIES (715 483 485 487 489 491 493 495 497) :TRIE-ENTRIES (837 836 835 749 834 833 832 831 830 829 828 827 826 792 791 790 752 753 758) :WFRULES-TRIGGERED 364 :UI-GENSYM #:UI76 :FS-GENSYM #:FS77) #S(IUI-FORMATIVE :LEXICAL-STRING "5nder" :SURFACE-VARIANTS ("%nder" "%ndr") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES (708 715) :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 2) :CF-REPLACEMENTS ((482 "%nder")) :P-REPLACEMENTS ((482 "%nder") (482 "%nder") (482 "%nder") (482 "%nder") (482 "%nder") (482 "%nder") (482 "%nder") (482 "%nder")) :TRIE-ENTRIES (805 804) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("%ndern" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "hab" :SURFACE-VARIANTS ("hab" "ha" "hat" "h%t") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (18 17 15 14 12 11 9 7 6 4 3 2) :IRULE (481 . 1) :CF-REPLACEMENTS ((484 "hab")) :P-REPLACEMENTS ((484 "hab") (484 "hab" "ha" "hab") (484 "hat") (484 "hab") (484 "h%t") (484 "hab") (484 "hab") (484 "hab")) :TRIE-ENTRIES (809 808 807 806) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES ((#S(ENTRY-ISRULE :NAME "IEntry-haben ((Cat . V) (Aux . haben))-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("hab" NIL "ha") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) (((|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-haben ((Cat . V) (Aux . haben))-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("hab" NIL "hat") (((|ICat| . |V-Stem|)))) (NIL (((|Temp| . |Impf|))))) :VALUE-FLAG NIL) #S(ENTRY-ISRULE :NAME "IEntry-haben ((Cat . V) (Aux . haben))-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("hat" NIL "h5t") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Conj-2|))))) :VALUE-FLAG NIL))) :LU ("void") :LEXEME-ID ("haben" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "br#eaa#nn" :SURFACE-VARIANTS ("brenn" "brann" "brand" "br%nd") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS ((486 "brenn")) :P-REPLACEMENTS ((486 "brenn") (486 "brenn") (486 "brann") (486 "brenn") (486 "brenn") (486 "brenn") (486 "brenn") (486 "brann")) :TRIE-ENTRIES (813 812 811 810) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("brennen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "k#eaa#nn" :SURFACE-VARIANTS ("kenn" "kann" "kennt") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS ((488 "kenn")) :P-REPLACEMENTS ((488 "kenn") (488 "kenn") (488 "kann") (488 "kenn") (488 "kenn") (488 "kenn") (488 "kenn") (488 "kann")) :TRIE-ENTRIES (816 815 814) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("kennen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "n#eaa#nn" :SURFACE-VARIANTS ("nenn" "nann") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS ((490 "nenn")) :P-REPLACEMENTS ((490 "nenn") (490 "nenn") (490 "nann") (490 "nenn") (490 "nenn") (490 "nenn") (490 "nenn") (490 "nann")) :TRIE-ENTRIES (818 817) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("nennen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "r#eaa#nn" :SURFACE-VARIANTS ("renn" "rann") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS ((492 "renn")) :P-REPLACEMENTS ((492 "renn") (492 "renn") (492 "rann") (492 "renn") (492 "renn") (492 "renn") (492 "renn") (492 "rann")) :TRIE-ENTRIES (820 819) :IA-FEATURES ((|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("rennen" (|Cat| . V) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "s#eaa#nd" :SURFACE-VARIANTS ("send" "sand") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (169 168 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 129 128 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 105 104 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 81 80 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 57 56 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 33 32 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 9 8) :IRULE (481 . 0) :CF-REPLACEMENTS ((494 "send")) :P-REPLACEMENTS ((494 "send") (494 "send") (494 "sand" "send" "sand" "send" "sand" "send" "sand" "send" "sand" "send" "sand" "send") (494 "send") (494 "send") (494 "send") (494 "send") (494 "sand" "send")) :TRIE-ENTRIES (822 821) :IA-FEATURES ((|Aux| . |haben|) (|Aux| . |sein|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("senden" (|Cat| . V) (|Aux| . |haben|) (|Aux| . |sein|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "w#eaa#nd" :SURFACE-VARIANTS ("wend" "wand" "w%nd") :U-FORMATIVE 498) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (169 168 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 129 128 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 105 104 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 81 80 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 57 56 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 33 32 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 9 8) :IRULE (481 . 0) :CF-REPLACEMENTS ((496 "wend")) :P-REPLACEMENTS ((496 "wend") (496 "wend") (496 "wand" "wend" "wand" "wend" "wand" "wend" "wand" "wend" "wand" "wend" "wand" "wend") (496 "wend") (496 "wend") (496 "wend") (496 "wend") (496 "wand" "wend")) :TRIE-ENTRIES (825 824 823) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("wenden" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Stem|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Inf|) (|Temp| . |Pres|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "st" :SURFACE-VARIANTS ("st" "est" "t") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "te" :SURFACE-VARIANTS ("te" "ete") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "test" :SURFACE-VARIANTS ("test" "etest") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "te" :SURFACE-VARIANTS ("te" "ete") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "ten" :SURFACE-VARIANTS ("ten" "eten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "tet" :SURFACE-VARIANTS ("tet" "etet") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "ten" :SURFACE-VARIANTS ("ten" "eten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Ind|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "est" :SURFACE-VARIANTS ("est" "st") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "et" :SURFACE-VARIANTS ("et" "t") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-1|) (|Temp| . |Pres|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "te" :SURFACE-VARIANTS ("te" "ete") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "test" :SURFACE-VARIANTS ("test" "etest") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "te" :SURFACE-VARIANTS ("te" "ete") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "ten" :SURFACE-VARIANTS ("ten" "eten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |1st|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "tet" :SURFACE-VARIANTS ("tet" "etet") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "ten" :SURFACE-VARIANTS ("ten" "eten") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Conj-2|) (|Temp| . |Impf|) (|Pers| . |3rd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Pers| . |2nd|) (|Num| . SG))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Pers| . |2nd|) (|Num| . PL))) #S(FSI-FORMATIVE :LEXICAL-STRING "end" :SURFACE-VARIANTS ("end" "nd") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Part|) (|Temp| . |Pres|))) #S(FSI-FORMATIVE :LEXICAL-STRING "t" :SURFACE-VARIANTS ("t" "et") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Suffix|) (|Mod| . |Part|) (|Temp| . |Perf|))) #S(FSI-FORMATIVE :LEXICAL-STRING "ge" :SURFACE-VARIANTS ("ge" "") :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |V-Prefix|))) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . V) (|ICat| . |V-Regular|) (|ICat| . |Detachable-Prefix|))) #S(RIRULE :NAME (|A-Attributive-Only|) :CITATION-FORMS (((PH) ((574 ("e"))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :PARADIGMS (((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Strong|) (|Num| . PL)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Decl| . |Weak|) (|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . A)) :ENTRIES (532) :TRIE-ENTRIES (750 788 758 768 752) :WFRULES-TRIGGERED 365 :UI-GENSYM #:UI78 :FS-GENSYM #:FS79) #S(IUI-FORMATIVE :LEXICAL-STRING "link" :SURFACE-VARIANTS ("link") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (530 . 0) :CF-REPLACEMENTS ((531 "link")) :P-REPLACEMENTS ((531 "link") (531 "link")) :TRIE-ENTRIES (802) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU NIL :LEXEME-ID ("linke" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|A-Predicative-Only|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((590 (""))))) :PARADIGMS (((((|Decl| . |Undeclined|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . A) (|Decl| . |Undeclined|)) :ENTRIES (535) :TRIE-ENTRIES (749) :WFRULES-TRIGGERED 366 :UI-GENSYM #:UI80 :FS-GENSYM #:FS81) #S(IUI-FORMATIVE :LEXICAL-STRING "quitt" :SURFACE-VARIANTS ("quitt") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (533 . 0) :CF-REPLACEMENTS ((534 "quitt")) :P-REPLACEMENTS ((534 "quitt")) :TRIE-ENTRIES (801) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("quitt" (|Cat| . A) (|Decl| . |Undeclined|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|A-Invariable|) :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((590 (""))))) :PARADIGMS (((((|Decl| . |Undeclined|))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0))) :COMMON-FEATURES ((|Cat| . A) (|Decl| . |Undeclined|)) :ENTRIES (538) :TRIE-ENTRIES (749) :WFRULES-TRIGGERED 367 :UI-GENSYM #:UI82 :FS-GENSYM #:FS83) #S(IUI-FORMATIVE :LEXICAL-STRING "rosa" :SURFACE-VARIANTS ("rosa") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (536 . 0) :CF-REPLACEMENTS ((537 "rosa")) :P-REPLACEMENTS ((537 "rosa")) :TRIE-ENTRIES (800) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("rosa" (|Cat| . A) (|Decl| . |Undeclined|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|A-Two_Comp_Forms|) :CITATION-FORMS (((PH) ((590 (""))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 (""))) ((591 ("")))) ((PH) ((592 ("er"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 ("")))) ((PH) ((593 ("est"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((593 ("est"))) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :PARADIGMS (((((|Degree| . |Pos|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\15\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Two_Comp_Forms)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0))) :COMMON-FEATURES ((|Cat| . A)) :ENTRIES (541) :TRIE-ENTRIES (792 791 790 789 750 752 788 758 768 749) :WFRULES-TRIGGERED 368 :UI-GENSYM #:UI84 :FS-GENSYM #:FS85) #S(IUI-FORMATIVE :LEXICAL-STRING "rUnd" :SURFACE-VARIANTS ("rund" "r#nd") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (3234 3233 3232 3231 3230 3229 3228 3227 3226 3225 3224 3223 3222 3221 3220 3219 3218 3217 3216 3215 3214 3213 3212 3211 3210 3209 3208 3207 3206 3205 3202 3201 3200 3199 3198 3197 3196 3195 3194 3193 3192 3191 3190 3189 3188 3187 3186 3185 3184 3183 3182 3181 3180 3179 3178 3177 3176 3175 3174 3173 3170 3169 3168 3167 3166 3165 3164 3163 3162 3161 3160 3159 3158 3157 3156 3155 3154 3153 3152 3151 3150 3149 3148 3147 3146 3145 3144 3143 3142 3141 3138 3137 3136 3135 3134 3133 3132 3131 3130 3129 3128 3127 3126 3125 3124 3123 3122 3121 3120 3119 3118 3117 3116 3115 3114 3113 3112 3111 3110 3109 3106 3105 3104 3103 3102 3101 3100 3099 3098 3097 3096 3095 3094 3093 3092 3091 3090 3089 3088 3087 3086 3085 3084 3083 3082 3081 3080 3079 3078 3077 3074 3073 3072 3071 3070 3069 3068 3067 3066 3065 3064 3063 3062 3061 3060 3059 3058 3057 3056 3055 3054 3053 3052 3051 3050 3049 3048 3047 3046 3045 3042 3041 3040 3039 3038 3037 3036 3035 3034 3033 3032 3031 3030 3029 3028 3027 3026 3025 3024 3023 3022 3021 3020 3019 3018 3017 3016 3015 3014 3013 3010 3009 3008 3007 3006 3005 3004 3003 3002 3001 3000 2999 2998 2997 2996 2995 2994 2993 2992 2991 2990 2989 2988 2987 2986 2985 2984 2983 2982 2981 2978 2977 2976 2975 2974 2973 2972 2971 2970 2969 2968 2967 2966 2965 2964 2963 2962 2961 2960 2959 2958 2957 2956 2955 2954 2953 2952 2951 2950 2949 2946 2945 2944 2943 2942 2941 2940 2939 2938 2937 2936 2935 2934 2933 2932 2931 2930 2929 2928 2927 2926 2925 2924 2923 2922 2921 2920 2919 2918 2917 2914 2913 2912 2911 2910 2909 2908 2907 2906 2905 2904 2903 2902 2901 2900 2899 2898 2897 2896 2895 2894 2893 2892 2891 2890 2889 2888 2887 2886 2885 2882 2881 2880 2879 2878 2877 2876 2875 2874 2873 2872 2871 2870 2869 2868 2867 2866 2865 2864 2863 2862 2861 2860 2859 2858 2857 2856 2855 2854 2853 2850 2849 2848 2847 2846 2845 2844 2843 2842 2841 2840 2839 2838 2837 2836 2835 2834 2833 2832 2831 2830 2829 2828 2827 2826 2825 2824 2823 2822 2821 2818 2817 2816 2815 2814 2813 2812 2811 2810 2809 2808 2807 2806 2805 2804 2803 2802 2801 2800 2799 2798 2797 2796 2795 2794 2793 2792 2791 2790 2789 2786 2785 2784 2783 2782 2781 2780 2779 2778 2777 2776 2775 2774 2773 2772 2771 2770 2769 2768 2767 2766 2765 2764 2763 2762 2761 2760 2759 2758 2757 2754 2753 2752 2751 2750 2749 2748 2747 2746 2745 2744 2743 2742 2741 2740 2739 2738 2737 2736 2735 2734 2733 2732 2731 2730 2729 2728 2727 2726 2725 2722 2721 2720 2719 2718 2717 2716 2715 2714 2713 2712 2711 2710 2709 2708 2707 2706 2705 2704 2703 2702 2701 2700 2699 2698 2697 2696 2695 2694 2693 2690 2689 2688 2687 2686 2685 2684 2683 2682 2681 2680 2679 2678 2677 2676 2675 2674 2673 2672 2671 2670 2669 2668 2667 2666 2665 2664 2663 2662 2661 2658 2657 2656 2655 2654 2653 2652 2651 2650 2649 2648 2647 2646 2645 2644 2643 2642 2641 2640 2639 2638 2637 2636 2635 2634 2633 2632 2631 2630 2629 2626 2625 2624 2623 2622 2621 2620 2619 2618 2617 2616 2615 2614 2613 2612 2611 2610 2609 2608 2607 2606 2605 2604 2603 2602 2601 2600 2599 2598 2597 2594 2593 2592 2591 2590 2589 2588 2587 2586 2585 2584 2583 2582 2581 2580 2579 2578 2577 2576 2575 2574 2573 2572 2571 2570 2569 2568 2567 2566 2565 2562 2561 2560 2559 2558 2557 2556 2555 2554 2553 2552 2551 2550 2549 2548 2547 2546 2545 2544 2543 2542 2541 2540 2539 2538 2537 2536 2535 2534 2533 2530 2529 2528 2527 2526 2525 2524 2523 2522 2521 2520 2519 2518 2517 2516 2515 2514 2513 2512 2511 2510 2509 2508 2507 2506 2505 2504 2503 2502 2501 2498 2497 2496 2495 2494 2493 2492 2491 2490 2489 2488 2487 2486 2485 2484 2483 2482 2481 2480 2479 2478 2477 2476 2475 2474 2473 2472 2471 2470 2469 2466 2465 2464 2463 2462 2461 2460 2459 2458 2457 2456 2455 2454 2453 2452 2451 2450 2449 2448 2447 2446 2445 2444 2443 2442 2441 2440 2439 2438 2437 2434 2433 2432 2431 2430 2429 2428 2427 2426 2425 2424 2423 2422 2421 2420 2419 2418 2417 2416 2415 2414 2413 2412 2411 2410 2409 2408 2407 2406 2405 2402 2401 2400 2399 2398 2397 2396 2395 2394 2393 2392 2391 2390 2389 2388 2387 2386 2385 2384 2383 2382 2381 2380 2379 2378 2377 2376 2375 2374 2373 2370 2369 2368 2367 2366 2365 2364 2363 2362 2361 2360 2359 2358 2357 2356 2355 2354 2353 2352 2351 2350 2349 2348 2347 2346 2345 2344 2343 2342 2341 2338 2337 2336 2335 2334 2333 2332 2331 2330 2329 2328 2327 2326 2325 2324 2323 2322 2321 2320 2319 2318 2317 2316 2315 2314 2313 2312 2311 2310 2309 2306 2305 2304 2303 2302 2301 2300 2299 2298 2297 2296 2295 2294 2293 2292 2291 2290 2289 2288 2287 2286 2285 2284 2283 2282 2281 2280 2279 2278 2277 2274 2273 2272 2271 2270 2269 2268 2267 2266 2265 2264 2263 2262 2261 2260 2259 2258 2257 2256 2255 2254 2253 2252 2251 2250 2249 2248 2247 2246 2245 2242 2241 2240 2239 2238 2237 2236 2235 2234 2233 2232 2231 2230 2229 2228 2227 2226 2225 2224 2223 2222 2221 2220 2219 2218 2217 2216 2215 2214 2213 2210 2209 2208 2207 2206 2205 2204 2203 2202 2201 2200 2199 2198 2197 2196 2195 2194 2193 2192 2191 2190 2189 2188 2187 2186 2185 2184 2183 2182 2181 2180 2179 2178 2177 2176 2175 2174 2173 2172 2171 2170 2169 2168 2167 2166 2165 2164 2163 2162 2161 2160 2159 2158 2157 2156 2155 2154 2153 2152 2151 2150 2149 2148 2147 2144 2143 2142 2141 2140 2139 2138 2137 2136 2135 2134 2133 2132 2131 2130 2129 2128 2127 2126 2125 2124 2123 2122 2121 2120 2119 2118 2117 2116 2115 2114 2113 2112 2111 2110 2109 2108 2107 2106 2105 2104 2103 2102 2101 2100 2099 2098 2097 2096 2095 2094 2093 2092 2091 2090 2089 2088 2087 2086 2085 2084 2083 2082 2081 2078 2077 2076 2075 2074 2073 2072 2071 2070 2069 2068 2067 2066 2065 2064 2063 2062 2061 2060 2059 2058 2057 2056 2055 2054 2053 2052 2051 2050 2049 2048 2047 2046 2045 2044 2043 2042 2041 2040 2039 2038 2037 2036 2035 2034 2033 2032 2031 2030 2029 2028 2027 2026 2025 2024 2023 2022 2021 2020 2019 2018 2017 2016 2015 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 1973 1972 1971 1970 1969 1968 1967 1966 1965 1964 1963 1962 1961 1960 1959 1958 1957 1956 1955 1954 1953 1952 1951 1950 1949 1946 1945 1944 1943 1942 1941 1940 1939 1938 1937 1936 1935 1934 1933 1932 1931 1930 1929 1928 1927 1926 1925 1924 1923 1922 1921 1920 1919 1918 1917 1916 1915 1914 1913 1912 1911 1910 1909 1908 1907 1906 1905 1904 1903 1902 1901 1900 1899 1898 1897 1896 1895 1894 1893 1892 1891 1890 1889 1888 1887 1886 1885 1884 1883 1880 1879 1878 1877 1876 1875 1874 1873 1872 1871 1870 1869 1868 1867 1866 1865 1864 1863 1862 1861 1860 1859 1858 1857 1856 1855 1854 1853 1852 1851 1850 1849 1848 1847 1846 1845 1844 1843 1842 1841 1840 1839 1838 1837 1836 1835 1834 1833 1832 1831 1830 1829 1828 1827 1826 1825 1824 1823 1822 1821 1820 1819 1818 1817 1814 1813 1812 1811 1810 1809 1808 1807 1806 1805 1804 1803 1802 1801 1800 1799 1798 1797 1796 1795 1794 1793 1792 1791 1790 1789 1788 1787 1786 1785 1784 1783 1782 1781 1780 1779 1778 1777 1776 1775 1774 1773 1772 1771 1770 1769 1768 1767 1766 1765 1764 1763 1762 1761 1760 1759 1758 1757 1756 1755 1754 1753 1752 1751 1748 1747 1746 1745 1744 1743 1742 1741 1740 1739 1738 1737 1736 1735 1734 1733 1732 1731 1730 1729 1728 1727 1726 1725 1724 1723 1722 1721 1720 1719 1718 1717 1716 1715 1714 1713 1712 1711 1710 1709 1708 1707 1706 1705 1704 1703 1702 1701 1700 1699 1698 1697 1696 1695 1694 1693 1692 1691 1690 1689 1688 1687 1686 1685 1682 1681 1680 1679 1678 1677 1676 1675 1674 1673 1672 1671 1670 1669 1668 1667 1666 1665 1664 1663 1662 1661 1660 1659 1658 1657 1656 1655 1654 1653 1652 1651 1650 1649 1648 1647 1646 1645 1644 1643 1642 1641 1640 1639 1638 1637 1636 1635 1634 1633 1632 1631 1630 1629 1628 1627 1626 1625 1624 1623 1622 1621 1620 1619 1616 1615 1614 1613 1612 1611 1610 1609 1608 1607 1606 1605 1604 1603 1602 1601 1600 1599 1598 1597 1596 1595 1594 1593 1592 1591 1590 1589 1588 1587 1586 1585 1584 1583 1582 1581 1580 1579 1578 1577 1576 1575 1574 1573 1572 1571 1570 1569 1568 1567 1566 1565 1564 1563 1562 1561 1560 1559 1558 1557 1556 1555 1554 1553 1550 1549 1548 1547 1546 1545 1544 1543 1542 1541 1540 1539 1538 1537 1536 1535 1534 1533 1532 1531 1530 1529 1528 1527 1526 1525 1524 1523 1522 1521 1520 1519 1518 1517 1516 1515 1514 1513 1512 1511 1510 1509 1508 1507 1506 1505 1504 1503 1502 1501 1500 1499 1498 1497 1496 1495 1494 1493 1492 1491 1490 1489 1488 1487 1484 1483 1482 1481 1480 1479 1478 1477 1476 1475 1474 1473 1472 1471 1470 1469 1468 1467 1466 1465 1464 1463 1462 1461 1460 1459 1458 1457 1456 1455 1454 1453 1452 1451 1450 1449 1448 1447 1446 1445 1444 1443 1442 1441 1440 1439 1438 1437 1436 1435 1434 1433 1432 1431 1430 1429 1428 1427 1426 1425 1424 1423 1422 1421 1418 1417 1416 1415 1414 1413 1412 1411 1410 1409 1408 1407 1406 1405 1404 1403 1402 1401 1400 1399 1398 1397 1396 1395 1394 1393 1392 1391 1390 1389 1388 1387 1386 1385 1384 1383 1382 1381 1380 1379 1378 1377 1376 1375 1374 1373 1372 1371 1370 1369 1368 1367 1366 1365 1364 1363 1362 1361 1360 1359 1358 1357 1356 1355 1352 1351 1350 1349 1348 1347 1346 1345 1344 1343 1342 1341 1340 1339 1338 1337 1336 1335 1334 1333 1332 1331 1330 1329 1328 1327 1326 1325 1324 1323 1322 1321 1320 1319 1318 1317 1316 1315 1314 1313 1312 1311 1310 1309 1308 1307 1306 1305 1304 1303 1302 1301 1300 1299 1298 1297 1296 1295 1294 1293 1292 1291 1290 1289 1286 1285 1284 1283 1282 1281 1280 1279 1278 1277 1276 1275 1274 1273 1272 1271 1270 1269 1268 1267 1266 1265 1264 1263 1262 1261 1260 1259 1258 1257 1256 1255 1254 1253 1252 1251 1250 1249 1248 1247 1246 1245 1244 1243 1242 1241 1240 1239 1238 1237 1236 1235 1234 1233 1232 1231 1230 1229 1228 1227 1226 1225 1224 1223 1220 1219 1218 1217 1216 1215 1214 1213 1212 1211 1210 1209 1208 1207 1206 1205 1204 1203 1202 1201 1200 1199 1198 1197 1196 1195 1194 1193 1192 1191 1190 1189 1188 1187 1186 1185 1184 1183 1182 1181 1180 1179 1178 1177 1176 1175 1174 1173 1172 1171 1170 1169 1168 1167 1166 1165 1164 1163 1162 1161 1160 1159 1158 1157 1154 1153 1152 1151 1150 1149 1148 1147 1146 1145 1144 1143 1142 1141 1140 1139 1138 1137 1136 1135 1134 1133 1132 1131 1130 1129 1128 1127 1126 1125 1124 1123 1122 1121 1120 1119 1118 1117 1116 1115 1114 1113 1112 1111 1110 1109 1108 1107 1106 1105 1104 1103 1102 1101 1100 1099 1098 1097 1096 1095 1094 1093 1092 1091 1088 1087 1086 1085 1084 1083 1082 1081 1080 1079 1078 1077 1076 1075 1074 1073 1072 1071 1070 1069 1068 1067 1066 1065 1064 1063 1062 1061 1060 1059 1058 1057 1056 1055 1054 1053 1052 1051 1050 1049 1048 1047 1046 1045 1044 1043 1042 1041 1040 1039 1038 1037 1036 1035 1034 1033 1032 1031 1030 1029 1028 1027 1026 1025 1022 1021 1020 1019 1018 1017 1016 1015 1014 1013 1012 1011 1010 1009 1008 1007 1006 1005 1004 1003 1002 1001 1000 999 998 997 996 995 994 993 992 991 990 989 988 987 986 985 984 983 982 981 980 979 978 977 976 975 974 973 972 971 970 969 968 967 966 965 964 963 962 961 960 959 956 955 954 953 952 951 950 949 948 947 946 945 944 943 942 941 940 939 938 937 936 935 934 933 932 931 930 929 928 927 926 925 924 923 922 921 920 919 918 917 916 915 914 913 912 911 910 909 908 907 906 905 904 903 902 901 900 899 898 897 896 895 894 893 890 889 888 887 886 885 884 883 882 881 880 879 878 877 876 875 874 873 872 871 870 869 868 867 866 865 864 863 862 861 860 859 858 857 856 855 854 853 852 851 850 849 848 847 846 845 844 843 842 841 840 839 838 837 836 835 834 833 832 831 830 829 828 827 824 823 822 821 820 819 818 817 816 815 814 813 812 811 810 809 808 807 806 805 804 803 802 801 800 799 798 797 796 795 794 793 792 791 790 789 788 787 786 785 784 783 782 781 780 779 778 777 776 775 774 773 772 771 770 769 768 767 766 765 764 763 762 761 758 757 756 755 754 753 752 751 750 749 748 747 746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716 715 714 713 712 711 710 709 708 707 706 705 704 703 702 701 700 699 698 697 696 695 692 691 690 689 688 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673 672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633 632 631 630 629 626 625 624 623 622 621 620 619 618 617 616 615 614 613 612 611 610 609 608 607 606 605 604 603 602 601 600 599 598 597 596 595 594 593 592 591 590 589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574 573 572 571 570 569 568 567 566 565 564 563 560 559 558 557 556 555 554 553 552 551 550 549 548 547 546 545 544 543 542 541 540 539 538 537 536 535 534 533 532 531 530 529 528 527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499 498 497 494 493 492 491 490 489 488 487 486 485 484 483 482 481 480 479 478 477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449 448 447 446 445 444 443 442 441 440 439 438 437 436 435 434 433 432 431 428 427 426 425 424 423 422 421 420 419 418 417 416 415 414 413 412 411 410 409 408 407 406 405 404 403 402 401 400 399 398 397 396 395 394 393 392 391 390 389 388 387 386 385 384 383 382 381 380 379 378 377 376 375 374 373 372 371 370 369 368 367 366 365 362 361 360 359 358 357 356 355 354 353 352 351 350 349 348 347 346 345 344 343 342 341 340 339 338 337 336 335 334 333 332 331 330 329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309 308 307 306 305 304 303 302 301 300 299 296 295 294 293 292 291 290 289 288 287 286 285 284 283 282 281 280 279 278 277 276 275 274 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 255 254 253 252 251 250 249 248 247 246 245 244 243 242 241 240 239 238 237 236 235 234 233 230 229 228 227 226 225 224 223 222 221 220 219 218 217 216 215 214 213 212 211 210 209 208 207 206 205 204 203 202 201 200 199 198 197 196 195 194 193 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 175 174 173 172 171 170 169 168 167 164 163 162 161 160 159 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35) :IRULE (539 . 0) :CF-REPLACEMENTS ((540 "rund")) :P-REPLACEMENTS ((540 "rund") (540 "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund") (540 "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund") (540 "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund" "r#nd" "rund")) :TRIE-ENTRIES (799 798) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("rund" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|A-Regular-Undeclined-e-Optional|) :CITATION-FORMS (((PH) ((590 (""))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 (""))) ((591 ("")))) ((PH) ((592 ("er"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 ("")))) ((PH) ((593 ("est"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((593 ("est"))) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :PARADIGMS (((((|Degree| . |Pos|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(A-Regular-Undeclined-e-Optional)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)" NIL "\\1e") (((|ICat| . |A-Stem|)))) (NIL (((|Decl| . |Undeclined|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0))) :COMMON-FEATURES ((|Cat| . A)) :ENTRIES (544) :TRIE-ENTRIES (792 791 790 789 750 752 788 758 768 749) :WFRULES-TRIGGERED 369 :UI-GENSYM #:UI86 :FS-GENSYM #:FS87) #S(IUI-FORMATIVE :LEXICAL-STRING "fad" :SURFACE-VARIANTS ("fad" "fade") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (96 95 94 92 91 89 88 86 85 83 82 80 79 77 76 74 73 71 70 68 67 65 64 62 61 59 58 56 55 53 52 50 49 47 46 44 43 41 40 38 37 35 34 32 31 29 28 26 25 23 22 20 19 17 16 14 13 11 10 8 7 5 4 2 1) :IRULE (542 . 0) :CF-REPLACEMENTS ((543 "fade" "fad")) :P-REPLACEMENTS ((543 "fad" "fade" "fad") (543 "fad") (543 "fad") (543 "fad")) :TRIE-ENTRIES (797 796) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("fade" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|A-Regular|) :CITATION-FORMS (((PH) ((590 ("") (""))))) :WORD-FORMS (((PH) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") (""))) ((591 ("") ("")))) ((PH) ((592 ("er") ("er"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") ("")))) ((PH) ((593 ("st") ("est"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")))) ((PH) ((593 ("st") ("est"))) ((574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en"))))) :PARADIGMS (((((|Degree| . |Pos|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(A-Regular)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*grOss") (((|ICat| . |A-Stem|)))) (("est" NIL "t") (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\15\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Regular)-7" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0))) :COMMON-FEATURES ((|Cat| . A)) :ENTRIES (547 549) :TRIE-ENTRIES (792 791 790 789 750 752 788 758 768 749) :WFRULES-TRIGGERED 370 :UI-GENSYM #:UI88 :FS-GENSYM #:FS89) #S(IUI-FORMATIVE :LEXICAL-STRING "Alt" :SURFACE-VARIANTS ("alt" "%lt") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (545 . 1) :CF-REPLACEMENTS ((546 "alt")) :P-REPLACEMENTS ((546 "alt") (546 "%lt") (546 "%lt") (546 "%lt")) :TRIE-ENTRIES (794 793) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU NIL :LEXEME-ID ("alt" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "gr%n" :SURFACE-VARIANTS ("gr#n") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (545 . 0) :CF-REPLACEMENTS ((548 "gr#n")) :P-REPLACEMENTS ((548 "gr#n") (548 "gr#n") (548 "gr#n") (548 "gr#n")) :TRIE-ENTRIES (795) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU NIL :LEXEME-ID ("gr#n" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|A-Irreg|) :CITATION-FORMS (((PH) ((590 ("") (""))))) :WORD-FORMS (((PH) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") (""))) ((591 ("") ("")))) ((PH) ((592 ("er") ("er"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") ("")))) ((PH) ((593 ("") ("st"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")))) ((PH) ((593 ("") ("st"))) ((574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en"))))) :PARADIGMS (((((|Degree| . |Pos|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Pos|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Undeclined|)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Comp|) (|Decl| . |Weak|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Strong|) (|Num| . PL)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N)))) ((((|Degree| . |Super|) (|Decl| . |Weak|) (|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(A-Irreg)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)hOch" NIL "\\1hOh") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("nAh" NIL "nahe") (((|ICat| . |A-Stem|)))) (NIL (((|Decl| . |Undeclined|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("nAh" NIL "n5h") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))) (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-6" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-7" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("n5h" NIL "n5ch") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-8" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*nah") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|Degree| . |Super|))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-9" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("gut" NIL "bess") (((|ICat| . |A-Stem|)))) (NIL (((|Degree| . |Comp|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-10" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("gut" NIL "best") (((|ICat| . |A-Stem|)))) (("st" NIL "") (((|Degree| . |Super|))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(A-Irreg)-11" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*gut") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|Degree| . |Super|))))) :VALUE-FLAG T)) :TRIGGERING-REQUIREMENTS (NIL (557 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0) (2 0 0) (3 0 0))) :COMMON-FEATURES ((|Cat| . A)) :ENTRIES (552 554 556) :TRIE-ENTRIES (792 791 790 789 750 752 788 758 768 749) :WFRULES-TRIGGERED 371 :UI-GENSYM #:UI90 :FS-GENSYM #:FS91) #S(IUI-FORMATIVE :LEXICAL-STRING "hOch" :SURFACE-VARIANTS ("hoch" "hoh" "h$h" "h$ch") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (64 63 61 59 57 55 53 51 49 47 45 43 41 39 37 35 33 31 29 27 25 23 21 19 17 15 13 11 9 7 5 3 1) :IRULE (550 . 1) :CF-REPLACEMENTS ((551 "hoch")) :P-REPLACEMENTS ((551 "hoh" "hoch") (551 "h$h") (551 "h$ch") (551 "h$ch")) :TRIE-ENTRIES (780 779 778 777) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("hoch" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "nAh" :SURFACE-VARIANTS ("nah" "nahe" "n%h" "n%ch") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (96 95 94 92 91 89 88 86 85 83 82 80 79 77 76 74 73 71 70 68 67 65 64 62 61 59 58 56 55 53 52 50 49 47 46 44 43 41 40 38 37 35 34 32 31 29 28 26 25 23 22 20 19 17 16 14 13 11 10 8 7 5 4 2 1) :IRULE (550 . 1) :CF-REPLACEMENTS ((553 "nahe" "nah")) :P-REPLACEMENTS ((553 "nah" "nahe" "nah") (553 "n%h") (553 "n%ch") (553 "n%ch")) :TRIE-ENTRIES (784 783 782 781) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("nahe" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "guT" :SURFACE-VARIANTS ("gut" "bess" "best") :U-FORMATIVE 557) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (550 . 0) :CF-REPLACEMENTS ((555 "gut")) :P-REPLACEMENTS ((555 "gut") (555 "bess") (555 "best") (555 "best")) :TRIE-ENTRIES (787 786 785) :IA-FEATURES NIL :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("gut" (|Cat| . A)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Stem|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Strong|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . SG) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Weak|) (|Num| . PL) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . A) (|ICat| . |A-Suffix|) (|Decl| . |Undeclined|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . A) (|ICat| . |Degr-Mark|) (|Degree| . |Pos|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er" "r") :FEATURE-SET ((|Cat| . A) (|ICat| . |Degr-Mark|) (|Degree| . |Comp|))) #S(FSI-FORMATIVE :LEXICAL-STRING "st" :SURFACE-VARIANTS ("st" "est" "t" "") :FEATURE-SET ((|Cat| . A) (|ICat| . |Degr-Mark|) (|Degree| . |Super|))) #S(RIRULE :NAME (|N-Regular| ES/E) :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s" "es")) (635 ("" "e")) (636 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular ES/E)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*nis\\)" NIL "\\1s") (((|ICat| . |N-Stem|)))) (("e.*") (((|ICat| . |N-Suffix|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (596) :TRIE-ENTRIES (753 758 752 751 750 749) :WFRULES-TRIGGERED 372 :UI-GENSYM #:UI92 :FS-GENSYM #:FS93) #S(IUI-FORMATIVE :LEXICAL-STRING "berg" :SURFACE-VARIANTS ("berg") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (594 . 0) :CF-REPLACEMENTS ((595 "berg")) :P-REPLACEMENTS ((595 "berg") (595 "berg")) :TRIE-ENTRIES (776) :IA-FEATURES ((|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("berg" (|Cat| . N) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| S/E) :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (599) :TRIE-ENTRIES (753 758 752 751 749) :WFRULES-TRIGGERED 373 :UI-GENSYM #:UI94 :FS-GENSYM #:FS95) #S(IUI-FORMATIVE :LEXICAL-STRING "lehrling" :SURFACE-VARIANTS ("lehrling") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (597 . 0) :CF-REPLACEMENTS ((598 "lehrling")) :P-REPLACEMENTS ((598 "lehrling") (598 "lehrling")) :TRIE-ENTRIES (775) :IA-FEATURES ((|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("lehrling" (|Cat| . N) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| S/-) :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("")) (680 (""))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular S/-)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*n") (((|ICat| . |N-Stem|)))) (("n" NIL "") (((|Case| . |Dat|) (|Num| . PL))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (602) :TRIE-ENTRIES (753 751 749) :WFRULES-TRIGGERED 374 :UI-GENSYM #:UI96 :FS-GENSYM #:FS97) #S(IUI-FORMATIVE :LEXICAL-STRING "gArten" :SURFACE-VARIANTS ("garten" "gart" "g%rten" "g%rt") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (600 . 0) :CF-REPLACEMENTS ((601 "garten")) :P-REPLACEMENTS ((601 "garten") (601 "g%rten")) :TRIE-ENTRIES (774 773 772 771) :IA-FEATURES ((|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("garten" (|Cat| . N) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| [E]S/[E]N) :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s" "es")) (635 ("" "e")) (636 ("")))) ((PH) ((681 ("en")) (682 ("en")) (683 ("en")) (684 ("en"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular [E]S/[E]N)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*tor") (((|ICat| . |N-Stem|)))) (("e\\(s?\\)" NIL "\\1") (((|Case| . |Gen|) (|Num| . SG))) (((|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (605) :TRIE-ENTRIES (753 758 752 751 750 749) :WFRULES-TRIGGERED 375 :UI-GENSYM #:UI98 :FS-GENSYM #:FS99) #S(IUI-FORMATIVE :LEXICAL-STRING "staat" :SURFACE-VARIANTS ("staat") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (603 . 0) :CF-REPLACEMENTS ((604 "staat")) :P-REPLACEMENTS ((604 "staat") (604 "staat")) :TRIE-ENTRIES (770) :IA-FEATURES ((|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("staat" (|Cat| . N) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| [E]S/ER) :CITATION-FORMS (((PH) ((633 ("") (""))))) :WORD-FORMS (((PH) ((633 ("") ("")) (634 ("es") ("s" "es")) (635 ("" "e") ("" "e")) (636 ("") ("")))) ((PH) ((685 ("er") ("er")) (686 ("er") ("er")) (687 ("ern") ("ern")) (688 ("er") ("er"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular [E]S/ER)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*tum") (((|ICat| . |N-Stem|)))) (("e\\(.*\\)" NIL "\\1") (((|ICat| . |N-Suffix|) (|Num| . SG))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (608 610) :TRIE-ENTRIES (769 768 752 751 750 749) :WFRULES-TRIGGERED 376 :UI-GENSYM #:UI100 :FS-GENSYM #:FS101) #S(IUI-FORMATIVE :LEXICAL-STRING "bild" :SURFACE-VARIANTS ("bild") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (606 . 1) :CF-REPLACEMENTS ((607 "bild")) :P-REPLACEMENTS ((607 "bild") (607 "bild")) :TRIE-ENTRIES (765) :IA-FEATURES ((|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("bild" (|Cat| . N) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IUI-FORMATIVE :LEXICAL-STRING "grAs" :SURFACE-VARIANTS ("gras" "gr%s") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (606 . 0) :CF-REPLACEMENTS ((609 "gras")) :P-REPLACEMENTS ((609 "gras") (609 "gr%s")) :TRIE-ENTRIES (767 766) :IA-FEATURES ((|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("gras" (|Cat| . N) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| S/S) :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((689 ("s")) (690 ("s")) (691 ("s")) (692 ("s"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (613) :TRIE-ENTRIES (751 749) :WFRULES-TRIGGERED 377 :UI-GENSYM #:UI102 :FS-GENSYM #:FS103) #S(IUI-FORMATIVE :LEXICAL-STRING "deck" :SURFACE-VARIANTS ("deck") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (611 . 0) :CF-REPLACEMENTS ((612 "deck")) :P-REPLACEMENTS ((612 "deck") (612 "deck")) :TRIE-ENTRIES (764) :IA-FEATURES ((|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("deck" (|Cat| . N) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| [E]N/[E]N) :CITATION-FORMS (((PH) ((641 (""))))) :WORD-FORMS (((PH) ((641 ("")) (642 ("en")) (643 ("en")) (644 ("en")))) ((PH) ((681 ("en")) (682 ("en")) (683 ("en")) (684 ("en"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (616) :TRIE-ENTRIES (753 758 749) :WFRULES-TRIGGERED 378 :UI-GENSYM #:UI104 :FS-GENSYM #:FS105) #S(IUI-FORMATIVE :LEXICAL-STRING "mensch" :SURFACE-VARIANTS ("mensch") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (614 . 0) :CF-REPLACEMENTS ((615 "mensch")) :P-REPLACEMENTS ((615 "mensch") (615 "mensch")) :TRIE-ENTRIES (763) :IA-FEATURES ((|Gender| . M)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mensch" (|Cat| . N) (|Gender| . M)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| -/E) :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular -/E)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*nis\\)" NIL "\\1s") (((|ICat| . |N-Stem|)))) (("e.*") (((|ICat| . |N-Suffix|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (619) :TRIE-ENTRIES (753 758 752 749) :WFRULES-TRIGGERED 379 :UI-GENSYM #:UI106 :FS-GENSYM #:FS107) #S(IUI-FORMATIVE :LEXICAL-STRING "krAft" :SURFACE-VARIANTS ("kraft" "kr%ft") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (617 . 0) :CF-REPLACEMENTS ((618 "kraft")) :P-REPLACEMENTS ((618 "kraft") (618 "kr%ft")) :TRIE-ENTRIES (762 761) :IA-FEATURES ((|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("kraft" (|Cat| . N) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| -/-) :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("n")) (680 (""))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (622) :TRIE-ENTRIES (753 749) :WFRULES-TRIGGERED 380 :UI-GENSYM #:UI108 :FS-GENSYM #:FS109) #S(IUI-FORMATIVE :LEXICAL-STRING "mUtter" :SURFACE-VARIANTS ("mutter" "m#tter") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (620 . 0) :CF-REPLACEMENTS ((621 "mutter")) :P-REPLACEMENTS ((621 "mutter") (621 "m#tter")) :TRIE-ENTRIES (760 759) :IA-FEATURES ((|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("mutter" (|Cat| . N) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| -/[E]N) :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((681 ("n")) (682 ("n")) (683 ("n")) (684 ("n"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Regular -/[E]N)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)iN" NIL "\\1inn") (((|ICat| . |N-Stem|)))) (("en") (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(N-Regular -/[E]N)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)iN" NIL "\\1in") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (625) :TRIE-ENTRIES (753 758 749) :WFRULES-TRIGGERED 381 :UI-GENSYM #:UI110 :FS-GENSYM #:FS111) #S(IUI-FORMATIVE :LEXICAL-STRING "blume" :SURFACE-VARIANTS ("blume" "blum" "bl#m") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (623 . 0) :CF-REPLACEMENTS ((624 "blume")) :P-REPLACEMENTS ((624 "blume") (624 "blume")) :TRIE-ENTRIES (757 756 755) :IA-FEATURES ((|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("blume" (|Cat| . N) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(RIRULE :NAME (|N-Regular| -/S) :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((689 ("s")) (690 ("s")) (691 ("s")) (692 ("s"))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES NIL :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (628) :TRIE-ENTRIES (751 749) :WFRULES-TRIGGERED 382 :UI-GENSYM #:UI112 :FS-GENSYM #:FS113) #S(IUI-FORMATIVE :LEXICAL-STRING "oma" :SURFACE-VARIANTS ("oma") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (626 . 0) :CF-REPLACEMENTS ((627 "oma")) :P-REPLACEMENTS ((627 "oma") (627 "oma")) :TRIE-ENTRIES (754) :IA-FEATURES ((|Gender| . F)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("oma" (|Cat| . N) (|Gender| . F)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(IIRULE :NAME (|N-Irregular| ENS/EN) :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s")) (635 ("")) (636 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("")) (680 (""))))) :PARADIGMS (((((|Num| . SG)))) ((((|Num| . PL))))) :SRULES (#S(IRULE-ISRULE :NAME "I-(N-Irregular ENS/EN)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)n" NIL "\\1") (((|ICat| . |N-Stem|)))) (NIL (((|Case| . |Nom|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(N-Irregular ENS/EN)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)herz" NIL "\\1herzen")) (NIL (((|Case| . |Gen|) (|Num| . SG))) (((|Num| . PL))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(N-Irregular ENS/EN)-3" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)herz" NIL "\\1herzen")) (NIL (((|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG T) #S(IRULE-ISRULE :NAME "I-(N-Irregular ENS/EN)-4" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*herz.*")) (("e\\(.*\\)" NIL "\\1") (((|Case| . |Gen|) (|Num| . SG))) (((|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL) #S(IRULE-ISRULE :NAME "I-(N-Irregular ENS/EN)-5" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS (((".*n") (((|ICat| . |N-Stem|)))) (("n" NIL "") (((|Case| . |Dat|) (|Num| . PL))))) :VALUE-FLAG NIL)) :TRIGGERING-REQUIREMENTS (NIL (632 ((0 0 0) (0 0 0)) (0 0 0) (1 0 0))) :COMMON-FEATURES ((|Cat| . N)) :ENTRIES (631) :TRIE-ENTRIES (753 752 751 750 749) :WFRULES-TRIGGERED 383 :UI-GENSYM #:UI114 :FS-GENSYM #:FS115) #S(IUI-FORMATIVE :LEXICAL-STRING "herz" :SURFACE-VARIANTS ("herz" "herzen") :U-FORMATIVE 632) #S(ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS (11 10 6 5 3 2 1) :IRULE (629 . 0) :CF-REPLACEMENTS ((630 "herz")) :P-REPLACEMENTS ((630 "herz" "herzen" "herz") (630 "herzen")) :TRIE-ENTRIES (748 747) :IA-FEATURES ((|Gender| . N)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("herz" (|Cat| . N) (|Gender| . N)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL) #S(UI-FORMATIVE :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Stem|) (|ICat| . |Reg|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . ES) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es" "s") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . ES) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . ES) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . ES) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . S) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . S) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . S) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . S) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . EN) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . EN) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . EN) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . EN) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . -) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . -) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . -) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|ICat| . -) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "em" :SURFACE-VARIANTS ("em") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "es" :SURFACE-VARIANTS ("es") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Strong|) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . M) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . M) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . M) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . M) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . F) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . F) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . F) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . F) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . N) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . N) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . N) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . SG) (|Decl| . |Weak|) (|Gender| . N) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . E) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . E) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . E) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . E) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . -) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . -) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "n" :SURFACE-VARIANTS ("n" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . -) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . -) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . EN) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . EN) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . EN) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en" "n") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . EN) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . ER) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . ER) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "ern" :SURFACE-VARIANTS ("ern") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . ER) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . ER) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . S) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . S) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . S) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "s" :SURFACE-VARIANTS ("s") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . S) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . |Foreign|) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . |Foreign|) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("" "") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . |Foreign|) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "" :SURFACE-VARIANTS ("") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|ICat| . |Foreign|) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Strong|) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Strong|) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Strong|) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "e" :SURFACE-VARIANTS ("e") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Strong|) (|Case| . |Acc|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Weak|) (|Case| . |Nom|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Weak|) (|Case| . |Gen|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Weak|) (|Case| . |Dat|))) #S(FSI-FORMATIVE :LEXICAL-STRING "en" :SURFACE-VARIANTS ("en") :FEATURE-SET ((|Cat| . N) (|ICat| . |N-Suffix|) (|Num| . PL) (|Decl| . |Weak|) (|Case| . |Acc|))) #S(RWFRULE :NAME (|Derivation| |To-V| V-T\o-V |Prefixing| |Detachable-Prefix| |V_Regular|) :INHERITANCE NIL :WFF-NAS ((1 746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728)) :ENTRY-NAS (((NIL ((|RIRule| |No-Detachable-Prefix|))) NIL NIL ((2 NIL (((|ICat| . |V-Stem|))))) NIL)) :IA-FEATURES NIL :SRULES NIL :TARGET-IRULE 480 :SOURCE-TRANSFERS ((1) (2)) :TARGET-FEATURE-SETS (((|ICat| . |Detachable-Prefix|)) ((|ICat| . |V-Stem|))) :TARGET-UIFS ((529) (498)) :ENTRIES (708) :GENSYM #:WF116 :WFF-NA-NAMES (((((|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))))) :SEPARABLE-P T) #S(IUI-HFORMATIVE :LEXICAL-STRING "ab" :U-FORMATIVE 529 :WFHISTORY (728)) #S(IUI-HFORMATIVE :LEXICAL-STRING "5nder" :U-FORMATIVE 498 :WFHISTORY (482)) #S(CENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (480 . 0) :CF-REPLACEMENTS ((706 "ab") (707 "%nder")) :P-REPLACEMENTS ((706 "ab") (707 "%nder") (706 "ab") (707 "%nder") (706 "ab") (707 "%nder") (706 "ab") (707 "%nder") (706 "ab") (707 "%nder") (706 "ab") (707 "%nder") (706 "ab") (707 "%nder")) :TRIE-ENTRIES (804 838) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ab%ndern" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL :WFHISTORY (705 483) :WFFORMATIVE-HISTORY (728)) #S(RWFRULE :NAME (|Derivation| |To-V| V-T\o-V |Prefixing| |Detachable-Prefix| |V_Irregular|) :INHERITANCE NIL :WFF-NAS ((1 746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728)) :ENTRY-NAS (((NIL ((|IIRule| |No-Detachable-Prefix|))) NIL NIL ((2 NIL (((|ICat| . |V-Stem|))))) NIL)) :IA-FEATURES NIL :SRULES NIL :TARGET-IRULE 436 :SOURCE-TRANSFERS ((1) (2)) :TARGET-FEATURE-SETS (((|ICat| . |Detachable-Prefix|)) ((|ICat| . |V-Stem|))) :TARGET-UIFS ((479) (448)) :ENTRIES (712) :GENSYM #:WF117 :WFF-NA-NAMES (((((|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))))) :SEPARABLE-P T) #S(IUI-HFORMATIVE :LEXICAL-STRING "an" :U-FORMATIVE 479 :WFHISTORY (729)) #S(IUI-HFORMATIVE :LEXICAL-STRING "b#ei#ss" :U-FORMATIVE 448 :WFHISTORY (438)) #S(CENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (436 . 0) :CF-REPLACEMENTS ((710 "an") (711 "beiss")) :P-REPLACEMENTS ((710 "an") (711 "beiss") (710 "an") (711 "beiss") (710 "an") (711 "biss") (710 "an") (711 "beiss") (710 "an") (711 "biss") (710 "an") (711 "beiss") (710 "an") (711 "biss")) :TRIE-ENTRIES (840 839 860) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("anbeissen" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL :WFHISTORY (709 439) :WFFORMATIVE-HISTORY (729)) #S(RWFRULE :NAME (|Derivation| |To-V| V-T\o-V |Prefixing| |Non-Detachable-Prefix|) :INHERITANCE NIL :WFF-NAS ((1 727 726 725 724 723 722 721 720 719 718 717 716)) :ENTRY-NAS (((((((|Cat| . V)))) ((|RIRule| |No-Detachable-Prefix|)) ((|IIRule| |No-Detachable-Prefix|))) NIL NIL ((2 NIL (((|ICat| . |V-Stem|))))) T)) :IA-FEATURES NIL :SRULES (#S(WFRULE-WFSRULE :NAME "WF-(Derivation To-V V-To-V Prefixing Non-Detachable-Prefix)-1" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\"\\(.*\\)" NIL "\\1") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) #S(WFRULE-WFSRULE :NAME "WF-(Derivation To-V V-To-V Prefixing Non-Detachable-Prefix)-2" :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)" NIL "\"\\1") (((|WFCat| . |V-Prefix|))))) :VALUE-FLAG NIL)) :TARGET-IRULE ? :SOURCE-TRANSFERS ((1 2)) :TARGET-FEATURE-SETS (((|ICat| . |V-Stem|))) :TARGET-UIFS NIL :ENTRIES (715) :GENSYM #:WF118 :WFF-NA-NAMES (((((|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))))) :SEPARABLE-P NIL) #S(IUI-HFORMATIVE :LEXICAL-STRING "\"ver5nder" :U-FORMATIVE 498 :WFHISTORY (720 482)) #S(CENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 3) :CF-REPLACEMENTS ((714 "ver%nder")) :P-REPLACEMENTS ((714 "ver%nder") (714 "ver%nder") (714 "ver%nder") (714 "ver%nder") (714 "ver%nder") (714 "ver%nder") (714 "ver%nder") (714 "ver%nder")) :TRIE-ENTRIES (803) :IA-FEATURES ((|Aux| . |haben|)) :DELETED-FORMS NIL :SRULES (NIL) :LU ("void") :LEXEME-ID ("ver%ndern" (|Cat| . V) (|Aux| . |haben|)) :LEXICOGRAPHER-P NIL :FICTIONAL-P NIL :SEP NIL :DATE NIL :WFHISTORY (713 483) :WFFORMATIVE-HISTORY (720)) #S(FSWF-FORMATIVE :LEXICAL-STRING "be" :SURFACE-VARIANTS ("be") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "ent" :SURFACE-VARIANTS ("ent") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "er" :SURFACE-VARIANTS ("er") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "miss" :SURFACE-VARIANTS ("miss") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "ver" :SURFACE-VARIANTS ("ver") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "zer" :SURFACE-VARIANTS ("zer") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "durch" :SURFACE-VARIANTS ("durch") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "hinter" :SURFACE-VARIANTS ("hinter") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "%ber" :SURFACE-VARIANTS ("#ber") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "um" :SURFACE-VARIANTS ("um") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "unter" :SURFACE-VARIANTS ("unter") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "wider" :SURFACE-VARIANTS ("wider") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Non-Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "ab" :SURFACE-VARIANTS ("ab") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "an" :SURFACE-VARIANTS ("an") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "auf" :SURFACE-VARIANTS ("auf") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "aus" :SURFACE-VARIANTS ("aus") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "bei" :SURFACE-VARIANTS ("bei") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "ein" :SURFACE-VARIANTS ("ein") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "fehl" :SURFACE-VARIANTS ("fehl") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "los" :SURFACE-VARIANTS ("los") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "nach" :SURFACE-VARIANTS ("nach") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "vor" :SURFACE-VARIANTS ("vor") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "wieder" :SURFACE-VARIANTS ("wieder") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "zu" :SURFACE-VARIANTS ("zu") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "zurecht" :SURFACE-VARIANTS ("zurecht") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "durch" :SURFACE-VARIANTS ("durch") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "hinter" :SURFACE-VARIANTS ("hinter") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "%ber" :SURFACE-VARIANTS ("#ber") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "um" :SURFACE-VARIANTS ("um") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "unter" :SURFACE-VARIANTS ("unter") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(FSWF-FORMATIVE :LEXICAL-STRING "wider" :SURFACE-VARIANTS ("wider") :FEATURE-SET ((|WFCat| . |Derivation|) (|WFCat| . |To-V|) (|WFCat| . V-T\o-V) (|WFCat| . |Prefixing|) (|WFCat| . |V-Prefix|) (|WFCat| . |Detachable|))) #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (631) :FSIF NIL :CFF NIL) :SURFACE-STRING "herz") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (631) :FSIF NIL :CFF NIL) :SURFACE-STRING "herzen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (50 61 66 69 74 77 80 85 91 128 158 181 392 433 436 437 480 481 533 536 539 542 545 550 594 597 600 603 606 611 614 617 620 623 626 629) :CFF NIL) :SURFACE-STRING "") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V0) (IAF8 . V1) (IAF9 . V2) (IAF10 . V-2) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X13) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V3) (IAF4 . V4) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF (260) :FSIF (61 66 69 74 80 85 91 128 158 181 392 530 539 542 545 550 594 603 606 629) :CFF NIL) :SURFACE-STRING "es") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2) (IAF3 . V3) (IAF4 . V4) (IAF5 . V5) (IAF6 . V10) (IAF7 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 77 80 85 91 128 158 181 594 597 600 603 606 611 626 629) :CFF NIL) :SURFACE-STRING "s") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V1) (IAF8 . V0) (IAF9 . V-2) (IAF10 . V2) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X13) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V-2) (IAF3 . V3) (IAF4 . V4) (IAF5 . V7) (IAF6 . V-2) (IAF7 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 85 88 91 128 158 181 392 433 436 437 480 481 530 539 542 545 550 594 597 603 606 617 629) :CFF NIL) :SURFACE-STRING "e") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2) (IAF3 . V3) (IAF4 . V6) (IAF5 . V7) (IAF6 . V8) (IAF7 . V9)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 85 88 91 128 158 181 433 436 437 480 481 594 597 600 603 614 617 620 623 629) :CFF NIL) :SURFACE-STRING "n") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 626) . ENTRY628)) :FSWFF NIL :IUWFF NIL :IUIF (628) :FSIF NIL :CFF NIL) :SURFACE-STRING "oma") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 623) . ENTRY625)) :FSWFF NIL :IUWFF NIL :IUIF (625) :FSIF NIL :CFF NIL) :SURFACE-STRING "blume") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 623) . ENTRY625)) :FSWFF NIL :IUWFF NIL :IUIF (625) :FSIF NIL :CFF NIL) :SURFACE-STRING "blum") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 623) . ENTRY625)) :FSWFF NIL :IUWFF NIL :IUIF (625) :FSIF NIL :CFF NIL) :SURFACE-STRING "bl#m") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2) (IAF8 . V2) (IAF9 . V1) (IAF10 . V0) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X13) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V-2) (IAF3 . V3) (IAF4 . V6) (IAF5 . V7) (IAF6 . V-2) (IAF7 . V9)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 80 85 88 91 128 158 181 392 433 436 437 480 481 530 539 542 545 550 594 597 603 614 617 623) :CFF NIL) :SURFACE-STRING "en") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 620) . ENTRY622)) :FSWFF NIL :IUWFF NIL :IUIF (622) :FSIF NIL :CFF NIL) :SURFACE-STRING "mutter") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 620) . ENTRY622)) :FSWFF NIL :IUWFF NIL :IUIF (622) :FSIF NIL :CFF NIL) :SURFACE-STRING "m#tter") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 617) . ENTRY619)) :FSWFF NIL :IUWFF NIL :IUIF (619) :FSIF NIL :CFF NIL) :SURFACE-STRING "kraft") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 617) . ENTRY619)) :FSWFF NIL :IUWFF NIL :IUIF (619) :FSIF NIL :CFF NIL) :SURFACE-STRING "kr%ft") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 614) . ENTRY616)) :FSWFF NIL :IUWFF NIL :IUIF (616) :FSIF NIL :CFF NIL) :SURFACE-STRING "mensch") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 611) . ENTRY613)) :FSWFF NIL :IUWFF NIL :IUIF (613) :FSIF NIL :CFF NIL) :SURFACE-STRING "deck") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 606) . ENTRY608)) :FSWFF NIL :IUWFF NIL :IUIF (608) :FSIF NIL :CFF NIL) :SURFACE-STRING "bild") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 606) . ENTRY610)) :FSWFF NIL :IUWFF NIL :IUIF (610) :FSIF NIL :CFF NIL) :SURFACE-STRING "gras") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 606) . ENTRY610)) :FSWFF NIL :IUWFF NIL :IUIF (610) :FSIF NIL :CFF NIL) :SURFACE-STRING "gr%s") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V1) (IAF1 . V0) (IAF2 . V-2) (IAF3 . V2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2) (IAF8 . V-2) (IAF9 . V-2) (IAF10 . V-2) (IAF11 . V0) (IAF12 . V1) (IAF13 . V2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X13) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V4) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF718)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF (250) :FSIF (61 66 69 74 85 88 91 128 158 181 392 530 539 542 545 550 606) :CFF NIL) :SURFACE-STRING "er") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X15) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V4) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (606) :CFF NIL) :SURFACE-STRING "ern") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 603) . ENTRY605)) :FSWFF NIL :IUWFF NIL :IUIF (605) :FSIF NIL :CFF NIL) :SURFACE-STRING "staat") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 600) . ENTRY602)) :FSWFF NIL :IUWFF NIL :IUIF (602) :FSIF NIL :CFF NIL) :SURFACE-STRING "garten") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 600) . ENTRY602)) :FSWFF NIL :IUWFF NIL :IUIF (602) :FSIF NIL :CFF NIL) :SURFACE-STRING "gart") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 600) . ENTRY602)) :FSWFF NIL :IUWFF NIL :IUIF (602) :FSIF NIL :CFF NIL) :SURFACE-STRING "g%rten") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 600) . ENTRY602)) :FSWFF NIL :IUWFF NIL :IUIF (602) :FSIF NIL :CFF NIL) :SURFACE-STRING "g%rt") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 597) . ENTRY599)) :FSWFF NIL :IUWFF NIL :IUIF (599) :FSIF NIL :CFF NIL) :SURFACE-STRING "lehrling") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((632 . 594) . ENTRY596)) :FSWFF NIL :IUWFF NIL :IUIF (596) :FSIF NIL :CFF NIL) :SURFACE-STRING "berg") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (552) :FSIF NIL :CFF NIL) :SURFACE-STRING "hoch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (552) :FSIF NIL :CFF NIL) :SURFACE-STRING "hoh") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (552) :FSIF NIL :CFF NIL) :SURFACE-STRING "h$h") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (552) :FSIF NIL :CFF NIL) :SURFACE-STRING "h$ch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (554) :FSIF NIL :CFF NIL) :SURFACE-STRING "nah") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (554) :FSIF NIL :CFF NIL) :SURFACE-STRING "nahe") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (554) :FSIF NIL :CFF NIL) :SURFACE-STRING "n%h") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (554) :FSIF NIL :CFF NIL) :SURFACE-STRING "n%ch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (556) :FSIF NIL :CFF NIL) :SURFACE-STRING "gut") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (556) :FSIF NIL :CFF NIL) :SURFACE-STRING "bess") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (556) :FSIF NIL :CFF NIL) :SURFACE-STRING "best") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V2) (IAF8 . V-2) (IAF9 . V0) (IAF10 . V1) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X13) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 80 85 91 128 158 181 392 530 539 542 545 550) :CFF NIL) :SURFACE-STRING "em") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V1) (IAF2 . V2) (IAF3 . V-2) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2) (IAF8 . V-2) (IAF9 . V-2) (IAF10 . V-2) (IAF11 . V1) (IAF12 . V0) (IAF13 . V-2) (IAF14 . V2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (539 542 545 550) :CFF NIL) :SURFACE-STRING "r") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V-2) (IAF2 . V-2) (IAF3 . V-2) (IAF4 . V0) (IAF5 . V1) (IAF6 . V2) (IAF7 . V-2) (IAF8 . V-2) (IAF9 . V-2) (IAF10 . V-2) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481 539 542 545 550) :CFF NIL) :SURFACE-STRING "st") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-2) (IAF1 . V2) (IAF2 . V1) (IAF3 . V0) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2) (IAF8 . V-2) (IAF9 . V-2) (IAF10 . V-2) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481 539 542 545 550) :CFF NIL) :SURFACE-STRING "est") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X12) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V2) (IAF1 . V-2) (IAF2 . V0) (IAF3 . V1) (IAF4 . V-2) (IAF5 . V-2) (IAF6 . V-2) (IAF7 . V-2) (IAF8 . V-2) (IAF9 . V-2) (IAF10 . V-2) (IAF11 . V-2) (IAF12 . V-2) (IAF13 . V-2) (IAF14 . V-2)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481 539 542 545 550) :CFF NIL) :SURFACE-STRING "t") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 545) . ENTRY547)) :FSWFF NIL :IUWFF NIL :IUIF (547) :FSIF NIL :CFF NIL) :SURFACE-STRING "alt") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 545) . ENTRY547)) :FSWFF NIL :IUWFF NIL :IUIF (547) :FSIF NIL :CFF NIL) :SURFACE-STRING "%lt") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 545) . ENTRY549)) :FSWFF NIL :IUWFF NIL :IUIF (549) :FSIF NIL :CFF NIL) :SURFACE-STRING "gr#n") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 542) . ENTRY544)) :FSWFF NIL :IUWFF NIL :IUIF (544) :FSIF NIL :CFF NIL) :SURFACE-STRING "fad") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 542) . ENTRY544)) :FSWFF NIL :IUWFF NIL :IUIF (544) :FSIF NIL :CFF NIL) :SURFACE-STRING "fade") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 539) . ENTRY541)) :FSWFF NIL :IUWFF NIL :IUIF (541) :FSIF NIL :CFF NIL) :SURFACE-STRING "rund") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 539) . ENTRY541)) :FSWFF NIL :IUWFF NIL :IUIF (541) :FSIF NIL :CFF NIL) :SURFACE-STRING "r#nd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 536) . ENTRY538)) :FSWFF NIL :IUWFF NIL :IUIF (538) :FSIF NIL :CFF NIL) :SURFACE-STRING "rosa") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 533) . ENTRY535)) :FSWFF NIL :IUWFF NIL :IUIF (535) :FSIF NIL :CFF NIL) :SURFACE-STRING "quitt") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((557 . 530) . ENTRY532)) :FSWFF NIL :IUWFF NIL :IUIF (532) :FSIF NIL :CFF NIL) :SURFACE-STRING "link") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY715)) :FSWFF NIL :IUWFF NIL :IUIF (715) :FSIF NIL :CFF NIL) :SURFACE-STRING "ver%nder") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY483) ((498 . 480) . ENTRY483)) :FSWFF NIL :IUWFF NIL :IUIF (708 483) :FSIF NIL :CFF NIL) :SURFACE-STRING "%nder") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY483) ((498 . 480) . ENTRY483)) :FSWFF NIL :IUWFF NIL :IUIF (483) :FSIF NIL :CFF NIL) :SURFACE-STRING "%ndr") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY485)) :FSWFF NIL :IUWFF NIL :IUIF (485) :FSIF NIL :CFF NIL) :SURFACE-STRING "hab") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY485)) :FSWFF NIL :IUWFF NIL :IUIF (485) :FSIF NIL :CFF NIL) :SURFACE-STRING "ha") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY485)) :FSWFF NIL :IUWFF NIL :IUIF (485) :FSIF NIL :CFF NIL) :SURFACE-STRING "hat") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY485)) :FSWFF NIL :IUWFF NIL :IUIF (485) :FSIF NIL :CFF NIL) :SURFACE-STRING "h%t") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY487)) :FSWFF NIL :IUWFF NIL :IUIF (487) :FSIF NIL :CFF NIL) :SURFACE-STRING "brenn") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY487)) :FSWFF NIL :IUWFF NIL :IUIF (487) :FSIF NIL :CFF NIL) :SURFACE-STRING "brann") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY487)) :FSWFF NIL :IUWFF NIL :IUIF (487) :FSIF NIL :CFF NIL) :SURFACE-STRING "brand") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY487)) :FSWFF NIL :IUWFF NIL :IUIF (487) :FSIF NIL :CFF NIL) :SURFACE-STRING "br%nd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY489)) :FSWFF NIL :IUWFF NIL :IUIF (489) :FSIF NIL :CFF NIL) :SURFACE-STRING "kenn") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY489)) :FSWFF NIL :IUWFF NIL :IUIF (489) :FSIF NIL :CFF NIL) :SURFACE-STRING "kann") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY489)) :FSWFF NIL :IUWFF NIL :IUIF (489) :FSIF NIL :CFF NIL) :SURFACE-STRING "kennt") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY491)) :FSWFF NIL :IUWFF NIL :IUIF (491) :FSIF NIL :CFF NIL) :SURFACE-STRING "nenn") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY491)) :FSWFF NIL :IUWFF NIL :IUIF (491) :FSIF NIL :CFF NIL) :SURFACE-STRING "nann") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY493)) :FSWFF NIL :IUWFF NIL :IUIF (493) :FSIF NIL :CFF NIL) :SURFACE-STRING "renn") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY493)) :FSWFF NIL :IUWFF NIL :IUIF (493) :FSIF NIL :CFF NIL) :SURFACE-STRING "rann") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY495)) :FSWFF NIL :IUWFF NIL :IUIF (495) :FSIF NIL :CFF NIL) :SURFACE-STRING "send") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY495)) :FSWFF NIL :IUWFF NIL :IUIF (495) :FSIF NIL :CFF NIL) :SURFACE-STRING "sand") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY497)) :FSWFF NIL :IUWFF NIL :IUIF (497) :FSIF NIL :CFF NIL) :SURFACE-STRING "wend") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY497)) :FSWFF NIL :IUWFF NIL :IUIF (497) :FSIF NIL :CFF NIL) :SURFACE-STRING "wand") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((498 . 481) . ENTRY497)) :FSWFF NIL :IUWFF NIL :IUIF (497) :FSIF NIL :CFF NIL) :SURFACE-STRING "w%nd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V0) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "et") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "te") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (480 481) :CFF NIL) :SURFACE-STRING "ete") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "test") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (480 481) :CFF NIL) :SURFACE-STRING "etest") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "ten") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (480 481) :CFF NIL) :SURFACE-STRING "eten") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "tet") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (480 481) :CFF NIL) :SURFACE-STRING "etet") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "end") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X10) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (480 481) :CFF NIL) :SURFACE-STRING "nd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X5)) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X9)) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437 480 481) :CFF NIL) :SURFACE-STRING "ge") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((529 . 480) . FSWFF728) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF728)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (708) :FSIF NIL :CFF NIL) :SURFACE-STRING "ab") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY439) ((448 . 436) . ENTRY439)) :FSWFF NIL :IUWFF NIL :IUIF (712 439) :FSIF NIL :CFF NIL) :SURFACE-STRING "beiss") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY439) ((448 . 436) . ENTRY439)) :FSWFF NIL :IUWFF NIL :IUIF (712 439) :FSIF NIL :CFF NIL) :SURFACE-STRING "biss") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY441)) :FSWFF NIL :IUWFF NIL :IUIF (441) :FSIF NIL :CFF NIL) :SURFACE-STRING "geh") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY441)) :FSWFF NIL :IUWFF NIL :IUIF (441) :FSIF NIL :CFF NIL) :SURFACE-STRING "ging") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY441)) :FSWFF NIL :IUWFF NIL :IUIF (441) :FSIF NIL :CFF NIL) :SURFACE-STRING "gang") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY441)) :FSWFF NIL :IUWFF NIL :IUIF (441) :FSIF NIL :CFF NIL) :SURFACE-STRING "g%ng") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY443)) :FSWFF NIL :IUWFF NIL :IUIF (443) :FSIF NIL :CFF NIL) :SURFACE-STRING "komm") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY443)) :FSWFF NIL :IUWFF NIL :IUIF (443) :FSIF NIL :CFF NIL) :SURFACE-STRING "kam") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY443)) :FSWFF NIL :IUWFF NIL :IUIF (443) :FSIF NIL :CFF NIL) :SURFACE-STRING "k%m") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY443)) :FSWFF NIL :IUWFF NIL :IUIF (443) :FSIF NIL :CFF NIL) :SURFACE-STRING "k$mm") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY445)) :FSWFF NIL :IUWFF NIL :IUIF (445) :FSIF NIL :CFF NIL) :SURFACE-STRING "schlag") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY445)) :FSWFF NIL :IUWFF NIL :IUIF (445) :FSIF NIL :CFF NIL) :SURFACE-STRING "schl%g") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY445)) :FSWFF NIL :IUWFF NIL :IUIF (445) :FSIF NIL :CFF NIL) :SURFACE-STRING "schlug") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY445)) :FSWFF NIL :IUWFF NIL :IUIF (445) :FSIF NIL :CFF NIL) :SURFACE-STRING "schl#g") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (447) :FSIF NIL :CFF NIL) :SURFACE-STRING "werd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (265 447) :FSIF NIL :CFF NIL) :SURFACE-STRING "wir") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (447) :FSIF NIL :CFF NIL) :SURFACE-STRING "wird") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (447) :FSIF NIL :CFF NIL) :SURFACE-STRING "wurd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (447) :FSIF NIL :CFF NIL) :SURFACE-STRING "w#rd") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((448 . 437) . ENTRY447)) :FSWFF NIL :IUWFF NIL :IUIF (447) :FSIF NIL :CFF NIL) :SURFACE-STRING "word") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X6) (HEAD . #S(AVNODE :OLDCONTENTS ((IAF0 . V-4) (IAF1 . V0)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (433 436 437) :CFF NIL) :SURFACE-STRING "d") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY10) ((479 . 436) . FSWFF729) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF729)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (10 712) :FSIF NIL :CFF NIL) :SURFACE-STRING "an") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "sei") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "bin") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "bi") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "is") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "sind") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "war") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "w%r") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (435) :FSIF NIL :CFF NIL) :SURFACE-STRING "wes") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (106 101 145 139 428 418 413) :FSIF NIL :CFF NIL) :SURFACE-STRING "der") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (423 413) :FSIF NIL :CFF NIL) :SURFACE-STRING "des") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (111 101 151 139 423 413) :FSIF NIL :CFF NIL) :SURFACE-STRING "dem") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (116 101 139 428 413) :FSIF NIL :CFF NIL) :SURFACE-STRING "den") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (116 106 157 145 428 418) :FSIF NIL :CFF NIL) :SURFACE-STRING "die") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (111 151 423) :FSIF NIL :CFF NIL) :SURFACE-STRING "das") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF733)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (68 394) :FSIF NIL :CFF NIL) :SURFACE-STRING "ein") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (240) :FSIF NIL :CFF NIL) :SURFACE-STRING "ich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (202 240) :FSIF NIL :CFF NIL) :SURFACE-STRING "meiner") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (202 240) :FSIF NIL :CFF NIL) :SURFACE-STRING "mir") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (202 240) :FSIF NIL :CFF NIL) :SURFACE-STRING "mich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (245) :FSIF NIL :CFF NIL) :SURFACE-STRING "du") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (206 245) :FSIF NIL :CFF NIL) :SURFACE-STRING "deiner") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (206 245) :FSIF NIL :CFF NIL) :SURFACE-STRING "dir") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (206 245) :FSIF NIL :CFF NIL) :SURFACE-STRING "dich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (218 210 260 250) :FSIF NIL :CFF NIL) :SURFACE-STRING "seiner") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (260 250) :FSIF NIL :CFF NIL) :SURFACE-STRING "ihm") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (250) :FSIF NIL :CFF NIL) :SURFACE-STRING "ihn") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (275 255) :FSIF NIL :CFF NIL) :SURFACE-STRING "sie") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (230 214 275 255) :FSIF NIL :CFF NIL) :SURFACE-STRING "ihrer") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (197 191 270 255) :FSIF NIL :CFF NIL) :SURFACE-STRING "ihr") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (193 222 265) :FSIF NIL :CFF NIL) :SURFACE-STRING "unser") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (222 265) :FSIF NIL :CFF NIL) :SURFACE-STRING "uns") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (195 226 270) :FSIF NIL :CFF NIL) :SURFACE-STRING "euer") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (226 270) :FSIF NIL :CFF NIL) :SURFACE-STRING "euch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (275) :FSIF NIL :CFF NIL) :SURFACE-STRING "ihnen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (230 218 214 210) :FSIF NIL :CFF NIL) :SURFACE-STRING "sich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (234) :FSIF NIL :CFF NIL) :SURFACE-STRING "einander") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (183) :FSIF NIL :CFF NIL) :SURFACE-STRING "mein") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (185) :FSIF NIL :CFF NIL) :SURFACE-STRING "dein") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (189 187) :FSIF NIL :CFF NIL) :SURFACE-STRING "sein") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (193) :FSIF NIL :CFF NIL) :SURFACE-STRING "unsr") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (195) :FSIF NIL :CFF NIL) :SURFACE-STRING "eur") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF NIL :FSIF (61 66 69 74 85 91 128 158 181) :CFF NIL) :SURFACE-STRING "m") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "derjenige") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "desjenigen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "demjenigen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "denjenigen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "diejenige") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "derjenigen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "dasjenige") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (180) :FSIF NIL :CFF NIL) :SURFACE-STRING "diejenigen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (160) :FSIF NIL :CFF NIL) :SURFACE-STRING "dies") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (162) :FSIF NIL :CFF NIL) :SURFACE-STRING "jen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (111 101 151 139) :FSIF NIL :CFF NIL) :SURFACE-STRING "dessen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (116 106 157 145) :FSIF NIL :CFF NIL) :SURFACE-STRING "deren") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (157 145) :FSIF NIL :CFF NIL) :SURFACE-STRING "derer") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (157) :FSIF NIL :CFF NIL) :SURFACE-STRING "denen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (132 130) :FSIF NIL :CFF NIL) :SURFACE-STRING "welch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (122) :FSIF NIL :CFF NIL) :SURFACE-STRING "wer") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (127 122) :FSIF NIL :CFF NIL) :SURFACE-STRING "wessen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (122) :FSIF NIL :CFF NIL) :SURFACE-STRING "wem") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (122) :FSIF NIL :CFF NIL) :SURFACE-STRING "wen") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (127) :FSIF NIL :CFF NIL) :SURFACE-STRING "was") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (93) :FSIF NIL :CFF NIL) :SURFACE-STRING "s%mtlich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (95) :FSIF NIL :CFF NIL) :SURFACE-STRING "ander") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (95) :FSIF NIL :CFF NIL) :SURFACE-STRING "andr") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (90) :FSIF NIL :CFF NIL) :SURFACE-STRING "mehrer") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (87) :FSIF NIL :CFF NIL) :SURFACE-STRING "kein") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (82) :FSIF NIL :CFF NIL) :SURFACE-STRING "jemand") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (84) :FSIF NIL :CFF NIL) :SURFACE-STRING "niemand") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (79) :FSIF NIL :CFF NIL) :SURFACE-STRING "jedermann") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (76) :FSIF NIL :CFF NIL) :SURFACE-STRING "jed") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (71) :FSIF NIL :CFF NIL) :SURFACE-STRING "einig") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (73) :FSIF NIL :CFF NIL) :SURFACE-STRING "etlich") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (63) :FSIF NIL :CFF NIL) :SURFACE-STRING "all") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (65) :FSIF NIL :CFF NIL) :SURFACE-STRING "manch") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (52) :FSIF NIL :CFF NIL) :SURFACE-STRING "selbst") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (54) :FSIF NIL :CFF NIL) :SURFACE-STRING "selber") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (56) :FSIF NIL :CFF NIL) :SURFACE-STRING "etwas") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (58) :FSIF NIL :CFF NIL) :SURFACE-STRING "nichts") #S(TRIE-ENTRY :PLIST (:FSWFF NIL :IUWFF NIL :IUIF (60) :FSIF NIL :CFF NIL) :SURFACE-STRING "man") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((49 . 42) . ENTRY44)) :FSWFF NIL :IUWFF NIL :IUIF (44) :FSIF NIL :CFF NIL) :SURFACE-STRING "sehr") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((49 . 42) . ENTRY46)) :FSWFF NIL :IUWFF NIL :IUIF (46) :FSIF NIL :CFF NIL) :SURFACE-STRING "heute") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((49 . 42) . ENTRY48)) :FSWFF NIL :IUWFF NIL :IUIF (48) :FSIF NIL :CFF NIL) :SURFACE-STRING "noch") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY12) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF730)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (12) :FSIF NIL :CFF NIL) :SURFACE-STRING "auf") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY14) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF731)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (14) :FSIF NIL :CFF NIL) :SURFACE-STRING "aus") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY16) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF732)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (16) :FSIF NIL :CFF NIL) :SURFACE-STRING "bei") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY18) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF722)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF741)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF (18) :FSIF NIL :CFF NIL) :SURFACE-STRING "durch") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY20)) :FSWFF NIL :IUWFF NIL :IUIF (20) :FSIF NIL :CFF NIL) :SURFACE-STRING "f#r") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY22) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF742)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF723)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF (22) :FSIF NIL :CFF NIL) :SURFACE-STRING "hinter") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY24)) :FSWFF NIL :IUWFF NIL :IUIF (24) :FSIF NIL :CFF NIL) :SURFACE-STRING "in") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY26)) :FSWFF NIL :IUWFF NIL :IUIF (26) :FSIF NIL :CFF NIL) :SURFACE-STRING "mit") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY28)) :FSWFF NIL :IUWFF NIL :IUIF (28) :FSIF NIL :CFF NIL) :SURFACE-STRING "neben") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY30) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF743)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF724)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF (30) :FSIF NIL :CFF NIL) :SURFACE-STRING "#ber") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY32) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF745)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF726)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF (32) :FSIF NIL :CFF NIL) :SURFACE-STRING "unter") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY34) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF725)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF744)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF (34) :FSIF NIL :CFF NIL) :SURFACE-STRING "um") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY36)) :FSWFF NIL :IUWFF NIL :IUIF (36) :FSIF NIL :CFF NIL) :SURFACE-STRING "von") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((41 . 8) . ENTRY38) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF737)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (38) :FSIF NIL :CFF NIL) :SURFACE-STRING "vor") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((7 . 0) . ENTRY6) ((41 . 8) . ENTRY40) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF739)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF (6 40) :FSIF NIL :CFF NIL) :SURFACE-STRING "zu") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((7 . 0) . ENTRY2)) :FSWFF NIL :IUWFF NIL :IUIF (2) :FSIF NIL :CFF NIL) :SURFACE-STRING "und") #S(TRIE-ENTRY :PLIST (:PARSINFOS (((7 . 0) . ENTRY4)) :FSWFF NIL :IUWFF NIL :IUIF (4) :FSIF NIL :CFF NIL) :SURFACE-STRING "dass") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF746)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL) #S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF727)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709 713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "wider") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF721)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "zer") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF720)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "ver") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF719)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "miss") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF717)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "ent") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V0) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF716)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (713) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "be") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF740)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "zurecht") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF738)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "wieder") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF736)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "nach") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF735)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "los") #S(TRIE-ENTRY :PLIST (:PARSINFOS (#S(AVNODE :OLDCONTENTS ((CAT . X16) (HEAD . #S(AVNODE :OLDCONTENTS ((WFAF0 . V1) (CMKSF . #S(AVNODE :OLDCONTENTS ((FORMATIVE-IX . FSWFF734)) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL))) :NEWCONTENTS NIL :GENERATION NIL)) :FSWFF (705 709) :IUWFF NIL :IUIF NIL :FSIF NIL :CFF NIL) :SURFACE-STRING "fehl") NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :ELEMENTS-FREE-LIST #*0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111 :ELEMENTS-EXTEND-SIZE 200 :IX-SEQUENCES #(NIL (632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 596 599 602 605 610 608 613 616 619 622 625 628 631 594 597 600 603 606 611 614 617 620 623 626 629) (557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 532 535 538 541 544 549 547 556 554 552 530 533 536 539 542 545 550) (448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 435 712 447 445 443 441 439 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 708 497 495 493 491 489 487 485 483 715 480 481 433 436 437) (395 396 397 398 399 400 401 402 403 404 405 406 407 394 429 430 431 432 428 423 418 413 408 392) #*0000000000000000000000000000000000000000000000000010101010101101011011010110110110101101101101011000010000100001000011000010000110101100000100000100000100000110101100000000000000001101010101010101011000100010001000100010001000100010001100001000010000100001000010000100001000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (49 48 46 44 42) (41 40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10 8) (7 6 4 2 0) NIL (429 430 431 432 428 423 418 413 408) (180 160 162 139 145 151 157 52 54) (395 396 397 398 399 400 401 402 403 404 405 406 407 394 392 93 95 90 87 82 84 79 76 71 73 68 63 65 56 58 60) (132 122 127) NIL (44) (240 245 250 255 260 265 270 275) (183 185 187 189 191 193 195 197) (202 206 210 214 218 222 226 230) (130 122 127 101 106 111 116) (234) (46 48) (591) (592) (593) (590 535 538) (383 60 58 56 54 52) (309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 649 650 651 652 653 654 655 656 657 658 659 660 697 698 699 700) (367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382) (351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 661 662 663 664 665 666 667 668 669 670 671 672 701 702 703 704) (449 499) (450 451 452 453 454 455 456 457 458 459 460 461 500 501 502 503 504 505 506 507 508 509 510 511) (462 463 464 465 466 467 512 513 514 515 516 517) (468 469 470 471 472 473 518 519 520 521 522 523) (474 475 524 525) (476 477 526 527) (449 450 451 452 453 454 455 462 463 464 465 466 467 476 499 500 501 502 503 504 505 512 513 514 515 516 517 526) (456 457 458 459 460 461 468 469 470 471 472 473 506 507 508 509 510 511 518 519 520 521 522 523) (477 527) (450 453 456 459 462 465 468 471 500 503 506 509 512 515 518 521 240 265 202 222 183 193) (451 454 457 460 463 466 469 472 474 475 501 504 507 510 513 516 519 522 524 525 245 270 206 226 185 195) (452 455 458 461 464 467 470 473 502 505 508 511 514 517 520 523 250 255 260 275 210 214 218 230 187 189 191 197) #*0000000000000000000000000000000000000000000000000000000010101000000010000000100000000000000000000000010000100001000000000000000000000000000100000100000100000000000000000000000000000001010101010000000000100010001000100010000000000000000000001000010000100001000010000000000000000000000000001111111111110000000001111111111111111100001111111111111111100001111111111110000111111111111000000000000000100000000000000000010000100001000000000000000000000000001110001110001110001110001000000000000000000000000011100011100011100011100010000000000000000000000000000000001111111111110000111111111111000000000000000000000000000000000000000000000001111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (300 301 302 303 326 327 328 329 347 348 349 350 363 364 365 366 379 380 381 382 90 453 454 455 459 460 461 465 466 467 471 472 473 475 503 504 505 509 510 511 515 516 517 521 522 523 525 570 571 572 573 586 587 588 589 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 428 265 270 275 222 226 230 234 193 195 197 157 116) (288 289 290 291 309 310 311 312 313 314 330 331 332 333 334 335 351 352 353 354 367 368 369 370 396 397 398 399 558 559 560 561 574 575 576 577 649 650 651 652 661 662 663 664 616 605 602 599 596 413 250 210 187 139 122 101) (292 293 294 295 315 316 317 318 336 337 338 339 355 356 357 358 371 372 373 374 400 401 402 403 562 563 564 565 578 579 580 581 653 654 655 656 665 666 667 668 628 625 622 619 418 255 214 191 145 122 106) (296 297 298 299 319 320 321 322 323 324 325 340 341 342 343 344 345 346 359 360 361 362 375 376 377 378 404 405 406 407 566 567 568 569 582 583 584 585 657 658 659 660 669 670 671 672 631 613 608 610 423 260 218 189 151 127 111 56 58) (276 283 288 292 296 300 304 309 310 315 319 320 326 330 331 336 340 341 347 351 355 359 363 367 371 375 379 384 388 396 400 404 429 558 562 566 570 574 578 582 586 633 637 641 645 649 653 657 661 665 669 673 677 681 685 689 693 697 701 60) (277 280 284 285 289 293 297 301 305 311 312 316 321 322 327 332 333 337 342 343 348 352 356 360 364 368 372 376 380 385 389 397 401 405 430 559 563 567 571 575 579 583 587 634 638 642 646 650 654 658 662 666 670 674 678 682 686 690 694 698 702) (278 281 286 290 294 298 302 306 313 317 323 328 334 338 344 349 353 357 361 365 369 373 377 381 386 390 398 402 406 431 560 564 568 572 576 580 584 588 635 639 643 647 651 655 659 663 667 671 675 679 683 687 691 695 699 703) (279 282 287 291 295 299 303 307 314 318 324 325 329 335 339 345 346 350 354 358 362 366 370 374 378 382 387 391 399 403 407 432 561 565 569 573 577 581 585 589 636 640 644 648 652 656 660 664 668 672 676 680 684 688 692 696 700 704) (493 495 441 443 447 435) (715 483 485 487 489 491 495 497 708 439 445 712) NIL NIL NIL NIL NIL NIL NIL NIL (557) (558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590) (49) (284) (283 286 287) (395) (396 397 398 399 400 401 402 403 404 405 406 407) (288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303) (285) (7) (384 385 386 387) (388 389 390 391) (330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350) (429 430 431 432) (591 592 593) (283 284 285 286 287) (479 529) (283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303) (693 694 695 696) NIL (632) (633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704) (276 277 278 279) (41) (308) (309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391) (632) (280 281 282) (304 305 306 307) (448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 433 436 437) (478 528) (498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 480 481) (448 498) (449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527) (673 674 675 676) (641 642 643 644 681 682 683 684) (685 686 687 688) (633 634 635 636) (637 638 639 640 689 690 691 692) (309 319 324 330 340 345 645 646 647 648 677 678 679 680) (312 322 333 343) (310 331) (311 320 321 325 332 341 342 346) (594 597 600 603 606 611 614 617 620 623 626) (594) (597) (603) (600) (606) (611) (614) (617) (620) (623) (626) NIL NIL NIL NIL NIL NIL NIL NIL NIL (545) (542) (539) (536) (533) (530) NIL (481) (480) (42) (8) (0) NIL (629) (629) (550) (437) (436) (433) (50) (91) (88) (85) (80) (77) (74) (69) (66) (61) (61 66 69 74 77 80 85 88 91) (128) (117) (96 117 128) (163) (158) (96 133) (133 158 163) (181) (198) (235) (392) (408) (716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 705 709 713) NIL NIL (716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 705 709 713) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 705 709 713) NIL NIL NIL NIL (716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 705 709 713) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746) NIL NIL NIL NIL NIL NIL NIL NIL (728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746) (716 717 718 719 720 721 722 723 724 725 726 727) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (705 709) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (713) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (709) (705) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (715) (715) NIL (715 483) (485 487 489 491 493 495 497 439 441 443 445 447 435) (715 483) (715 483 708) (439 712) NIL (495 497 447) NIL (556) NIL NIL NIL (547 544 541) NIL NIL NIL NIL NIL NIL NIL NIL (631 608 610 605 596) (608 605 596) NIL NIL NIL (625) (622) NIL (619 610 602) (622) NIL (619 610 602) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :IX-SEQUENCES-FREE-LIST #*0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111 :IX-SEQUENCES-EXTEND-SIZE 100 :IX-SEQUENCE-LIST-THRESHHOLD 100 :CK-IX-SEQ NIL) :LUS #]((NIL 122 127 532 547 549) (("void") 2 4 6 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 44 46 48 52 54 56 58 60 63 65 68 71 73 76 79 82 84 87 90 93 95 101 106 111 116 130 132 139 145 151 157 160 162 180 183 185 187 189 191 193 195 197 202 206 210 214 218 222 226 230 234 240 245 250 255 260 265 270 275 394 413 418 423 428 439 441 443 445 447 483 485 487 489 491 493 495 497 535 538 541 544 552 554 556 596 599 602 605 608 610 613 616 619 622 625 628 631 708 712 715) (("sein") 435)) #'EQUAL :CHAR-SUBSETS NIL :LEXEMES #](("euer" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . PL)) . 195)) ("was" (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . N)) . 127)) ("sich" (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) . 210) (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) . 214) (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) . 218) (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |3rd|) (|Num| . PL)) . 230)) ("du" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . SG)) . 245)) ("anbeissen" (((|Cat| . V) (|Aux| . |haben|)) . 712)) ("einer" (((|Cat| . |Pron|) (|Num| . SG) (|Manner| . |Indef|)) . 68)) ("gras" (((|Cat| . N) (|Gender| . N)) . 610)) ("unser" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . PL)) . 193)) ("das" (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . N) (|Num| . SG)) . 111) (((|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . N) (|Num| . SG)) . 151) (((|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . N) (|Num| . SG)) . 423)) ("all" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 63)) ("ein" (((|Manner| . |Indef|) (|Cat| . |Art|) (|Num| . SG)) . 394)) ("ander" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 95)) ("linke" (((|Cat| . A)) . 532)) ("niemand" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 84)) ("ich" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . SG)) . 240)) ("werden" (((|Cat| . V) (|Aux| . |sein|)) . 447)) ("kraft" (((|Cat| . N) (|Gender| . F)) . 619)) ("mensch" (((|Cat| . N) (|Gender| . M)) . 616)) ("es" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) . 260)) ("dich" (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . SG)) . 206)) ("er" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . M)) . 250)) ("manch" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 65)) ("s%mtlich" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 93)) ("unter" (((|Cat| . |Prep|)) . 32)) ("senden" (((|Cat| . V) (|Aux| . |haben|) (|Aux| . |sein|)) . 495)) ("mein" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |1st|) (|Num| . SG)) . 183)) ("um" (((|Cat| . |Prep|)) . 34)) ("aus" (((|Cat| . |Prep|)) . 14)) ("jedermann" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 79)) ("welcher" (((|Cat| . |Pron|) (|Manner| . |Relative|)) . 130) (((|Cat| . |Pron|) (|Manner| . |Interrog|)) . 132)) ("in" (((|Cat| . |Prep|)) . 24)) ("gehen" (((|Cat| . V) (|Aux| . |sein|)) . 441)) ("von" (((|Cat| . |Prep|)) . 36)) ("schlagen" (((|Cat| . V) (|Aux| . |haben|)) . 445)) ("kommen" (((|Cat| . V) (|Aux| . |sein|)) . 443)) ("hinter" (((|Cat| . |Prep|)) . 22)) ("mehrere" (((|Num| . PL) (|Cat| . |Pron|) (|Manner| . |Indef|)) . 90)) ("%ndern" (((|Cat| . V) (|Aux| . |haben|)) . 483)) ("oma" (((|Cat| . N) (|Gender| . F)) . 628)) ("durch" (((|Cat| . |Prep|)) . 18)) ("deck" (((|Cat| . N) (|Gender| . N)) . 613)) ("gr#n" (((|Cat| . A)) . 549)) ("bei" (((|Cat| . |Prep|)) . 16)) ("heute" (((|Cat| . |Adv|) (|Manner| . |Temporal|)) . 46)) ("sehr" (((|Cat| . |Adv|) (|Manner| . |Modal|)) . 44)) ("wer" (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Manner| . |Interrog|) (|Gender| . M) (|Gender| . F)) . 122)) ("dieser" (((|Cat| . |Pron|) (|Manner| . |Demonstr|)) . 160)) ("gut" (((|Cat| . A)) . 556)) ("berg" (((|Cat| . N) (|Gender| . M)) . 596)) ("einander" (((|Cat| . |Pron|) (|Manner| . |Rezipr|) (|Num| . PL)) . 234)) ("fade" (((|Cat| . A)) . 544)) ("euch" (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |2nd|) (|Num| . PL)) . 226)) ("brennen" (((|Cat| . V) (|Aux| . |haben|)) . 487)) ("blume" (((|Cat| . N) (|Gender| . F)) . 625)) ("lehrling" (((|Cat| . N) (|Gender| . M)) . 599)) ("rosa" (((|Cat| . A) (|Decl| . |Undeclined|)) . 538)) ("wenden" (((|Cat| . V) (|Aux| . |haben|)) . 497)) ("und" (((|Cat| . |Conjunct|)) . 2)) ("jemand" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 82)) ("uns" (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . PL)) . 222)) ("mich" (((|Cat| . |Pron|) (|Manner| . |Refl|) (|Pers| . |1st|) (|Num| . SG)) . 202)) ("an" (((|Cat| . |Prep|)) . 10)) ("zu" (((|Cat| . |Conjunct|)) . 6) (((|Cat| . |Prep|)) . 40)) ("mit" (((|Cat| . |Prep|)) . 26)) ("wir" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |1st|) (|Num| . PL)) . 265)) ("der" (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . M) (|Num| . SG)) . 101) (((|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . M) (|Num| . SG)) . 139) (((|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . M) (|Num| . SG)) . 413)) ("beissen" (((|Cat| . V) (|Aux| . |haben|)) . 439)) ("sein" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . M) (|Num| . SG)) . 187) (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . N) (|Num| . SG)) . 189) (((|Cat| . V) (|Aux| . |sein|)) . 435)) ("f#r" (((|Cat| . |Prep|)) . 20)) ("mutter" (((|Cat| . N) (|Gender| . F)) . 622)) ("rennen" (((|Cat| . V) (|Aux| . |sein|)) . 493)) ("jener" (((|Cat| . |Pron|) (|Manner| . |Demonstr|)) . 162)) ("rund" (((|Cat| . A)) . 541)) ("kein" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 87)) ("nennen" (((|Cat| . V) (|Aux| . |haben|)) . 491)) ("vor" (((|Cat| . |Prep|)) . 38)) ("neben" (((|Cat| . |Prep|)) . 28)) ("derjenige" (((|Cat| . |Pron|) (|Manner| . |Demonstr|)) . 180)) ("nahe" (((|Cat| . A)) . 554)) ("jeder" (((|Num| . SG) (|Cat| . |Pron|) (|Manner| . |Indef|)) . 76)) ("herz" (((|Cat| . N) (|Gender| . N)) . 631)) ("man" (((|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Case| . |Nom|)) . 60)) ("haben" (((|Cat| . V) (|Aux| . |haben|)) . 485)) ("etliche" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 73)) ("#ber" (((|Cat| . |Prep|)) . 30)) ("kennen" (((|Cat| . V) (|Aux| . |haben|)) . 489)) ("dein" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |2nd|) (|Num| . SG)) . 185)) ("auf" (((|Cat| . |Prep|)) . 12)) ("selber" (((|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Demonstr|)) . 54)) ("die" (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Gender| . F) (|Num| . SG)) . 106) (((|Cat| . |Pron|) (|Manner| . |Relative|) (|Num| . PL)) . 116) (((|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Gender| . F) (|Num| . SG)) . 145) (((|Cat| . |Pron|) (|Manner| . |Demonstr|) (|Num| . PL)) . 157) (((|Manner| . |Def|) (|Cat| . |Art|) (|Gender| . F) (|Num| . SG)) . 418) (((|Manner| . |Def|) (|Cat| . |Art|) (|Num| . PL)) . 428)) ("bild" (((|Cat| . N) (|Gender| . N)) . 608)) ("ihr" (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Gender| . F) (|Num| . SG)) . 191) (((|Cat| . |Pron|) (|Manner| . |Poss|) (|Pers| . |3rd|) (|Num| . PL)) . 197) (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |2nd|) (|Num| . PL)) . 270)) ("alt" (((|Cat| . A)) . 547)) ("ver%ndern" (((|Cat| . V) (|Aux| . |haben|)) . 715)) ("hoch" (((|Cat| . A)) . 552)) ("etwas" (((|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) . 56)) ("nichts" (((|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Indef|) (|Num| . SG) (|Gender| . N)) . 58)) ("sie" (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . F)) . 255) (((|Cat| . |Pron|) (|Manner| . |Personal|) (|Pers| . |3rd|) (|Num| . PL)) . 275)) ("dass" (((|Cat| . |Conjunct|)) . 4)) ("einige" (((|Cat| . |Pron|) (|Manner| . |Indef|)) . 71)) ("noch" (((|Cat| . |Adv|) (|Manner| . |Temporal|)) . 48)) ("selbst" (((|Cat| . |Pron|) (|Decl| . |Invar|) (|Manner| . |Demonstr|)) . 52)) ("garten" (((|Cat| . N) (|Gender| . M)) . 602)) ("staat" (((|Cat| . N) (|Gender| . M)) . 605)) ("ab%ndern" (((|Cat| . V) (|Aux| . |haben|)) . 708)) ("quitt" (((|Cat| . A) (|Decl| . |Undeclined|)) . 535))) #'EQUAL :ENTITY-TO-ATTR #]((|IIRules| |ICat| |Decl| |Manner| |Num| |Cat| |IIRule|) (|Phrases| |PHClass|) (|FS-WFFormatives| |WFCat|) (|U-IFormatives| |Decl| |Aux| |Var| |Temp| |Pers| |Manner| |Case| |Cat| |Mod| |ICat| |Lexeme| |Num| |Gender| |Degree|) (|IWFRules| |WFCat| |IWFRule|) (|IRules| |ICat| |Decl| |Manner| |Num| |Cat| |IIRule| |RIRule|) (|RIRules| |ICat| |Decl| |Manner| |Num| |Cat| |RIRule|) (|Periphr-Infl| |PIClass|) (|U-WFFormatives| |WFCat|) (|FS-IFormatives| |Decl| |Aux| |Var| |Temp| |Pers| |Manner| |Case| |Cat| |Mod| |ICat| |Lexeme| |Num| |Gender| |Degree|) (|Entries| |RWFRule| |IWFRule| |ICat| |Decl| |Manner| |Num| |Cat| |IIRule| |RIRule| |WFSRule| |Aux| |Var| |Temp| |Pers| |Case| |Mod| |ISRule| |Lexeme| |Gender| |Degree|) (|WFRules| |WFCat| |IWFRule| |RWFRule|) (|RWFRules| |WFCat| |RWFRule|)) #'EQL :ATTR-TO-ENTITY #]((|Degree| |Entries| |FS-IFormatives| |U-IFormatives|) (|IIRule| |Entries| |IRules| |IIRules|) (|Gender| |Entries| |FS-IFormatives| |U-IFormatives|) (|Num| |Entries| |FS-IFormatives| |RIRules| |IRules| |U-IFormatives| |IIRules|) (|Lexeme| |Entries| |FS-IFormatives| |U-IFormatives|) (|PHClass| |Phrases|) (|ICat| |Entries| |FS-IFormatives| |RIRules| |IRules| |U-IFormatives| |IIRules|) (|IWFRule| |WFRules| |Entries| |IWFRules|) (|ISRule| |Entries|) (|Mod| |Entries| |FS-IFormatives| |U-IFormatives|) (|Cat| |Entries| |FS-IFormatives| |RIRules| |IRules| |U-IFormatives| |IIRules|) (|Case| |Entries| |FS-IFormatives| |U-IFormatives|) (|Manner| |Entries| |FS-IFormatives| |RIRules| |IRules| |U-IFormatives| |IIRules|) (|Pers| |Entries| |FS-IFormatives| |U-IFormatives|) (|RIRule| |Entries| |RIRules| |IRules|) (|Decl| |Entries| |FS-IFormatives| |RIRules| |IRules| |U-IFormatives| |IIRules|) (|WFCat| |RWFRules| |WFRules| |U-WFFormatives| |IWFRules| |FS-WFFormatives|) (|Temp| |Entries| |FS-IFormatives| |U-IFormatives|) (|PIClass| |Periphr-Infl|) (|Var| |Entries| |FS-IFormatives| |U-IFormatives|) (|Aux| |Entries| |FS-IFormatives| |U-IFormatives|) (|RWFRule| |RWFRules| |WFRules| |Entries|) (|WFSRule| |Entries|)) #'EQL) #[C-INTERNAL-DATA ( :ATTRIBUTES #]((|Degree| (|Pos| . 22) (|Comp| . 23) (|Super| . 24)) (|IIRule| (|N-Irregular| . 138) (ENS/EN . 139) (|A-Irreg| . 140) (|No-Detachable-Prefix| . 141) (|Detachable-Prefix| . 142) (|sein| . 143) (|Pron-Invar| . 144) (|saemtlich| . 145) (|mehrere| . 146) (|kein| . 147) (|jemand/niemand| . 148) (|jedermann| . 149) (|jeder| . 150) (|einige/etliche| . 151) (|einer| . 152) (|all/manch| . 153) (|Indefinite-Pronoun| . 154) (|welcher| . 155) (|wer/was| . 156) (|Rel/Interrog-Pronoun| . 157) (|derselbe/derjenige| . 158) (|dieser/jener| . 159) (|der/die/das| . 160) (|Demonstr-Pronoun| . 161) (|Possessive-Pronoun| . 162) (|Reflexive-Pronoun| . 163) (|Personal-Pronoun| . 164) (|Indefinite-Article| . 165) (|Definite-Article| . 166)) (|Gender| (M . 44) (F . 45) (N . 46)) (|Mod| (|Inf| . 30) (|Ind| . 31) (|Conj-1| . 32) (|Conj-2| . 33) (|Imper| . 34) (|Part| . 35)) (|Lexeme| (\a . 57) (\b . 58) (\c . 59) (\d . 60)) (|Num| (SG . 42) (PL . 43)) (|ICat| (|A-Stem| . 61) (|A-Suffix| . 62) (|Adv| . 63) (|Anaphoric| . 64) (|Ana/Cataphoric| . 65) (|Art-Stem| . 66) (|Art-Suffix| . 67) (|Art+Pron-Stem| . 68) (|Cataphoric| . 69) (|Conjunct| . 70) (|Decl-jedermann| . 71) (|Decl-jemand| . 72) (|Decl-Strong| . 73) (|Def-Article| . 74) (|Degr-Mark| . 75) (|der/die/das| . 76) (|Detachable-Prefix| . 77) (|Demonstr-Pron| . 78) (|Foreign| . 79) (|Interj| . 80) (|N-Stem| . 81) (|N-Suffix| . 82) (|Pers-Pron| . 83) (|Prep| . 84) (|Pron-Stem| . 85) (|Pron-Suffix| . 86) (|Reg| . 87) (|Refl-Pron| . 88) (|Rel-Pron| . 89) (|V-Irregular| . 90) (|V-Prefix| . 91) (|V-Regular| . 92) (|V-Stem| . 93) (|V-Suffix| . 94) (E . 95) (EN . 96) (ER . 97) (ES . 98) (S . 99) (- . 100) (|en| . 101) (|er| . 102) (|es| . 103)) (|ISRule| (|Stressed-e/surface-e| . 299) (|Delete_Special_Part_2_Character| . 300) (|Delete_ge_Part-2| . 301) (|Verbs_e-Deletion_Stem| . 302) (|Verbs_Return_Imper-Exeption| . 303) (|Verbs_e-Deletion_Imper| . 304) (|Verbs_Imper-Exception| . 305) (|Verbs_e-Deletion_Suffix| . 306) (|Verbs_s-Deletion| . 307) (|Verbs_Delete_Avoid_Insertion_Character| . 308) (|Verbs_e-Insertion| . 309) (|Replace-D/d| . 310) (|Replace-T/t| . 311) (|Replace-SCH/sch| . 312) (|Adj_Super_Insert-e_after_Vow+h| . 313) (|Adj_Super_Insert-e_after_Diphth| . 314) (|Adj_Super_Insert-e_after_[dt]| . 315) (|Adj_Super_Insert-e_after_Cons+sch| . 316) (|Adj_Super_Insert-e_after_Vow+sch| . 317) (|Adj_Super_Avoid_Insert-e_With_isch| . 318) (|Adj_Super_Insert-e_after_[sxz]| . 319) (|Adj_Comp_Delete-e_e[ln]-Stem| . 320) (|Adj_Delete-e_e-Stem| . 321) (|Adj_Delete-e_Vow+er-Stem| . 322) (|Adj_Delete-e_el-Stem| . 323) (|N_Double_Dat_SG_Form| . 324) (|N_Double_Gen_SG_Form| . 325) (|N-e-Deletion_Dat_SG_after_Vow+h| . 326) (|N-e-Deletion_Dat_SG_after_Diphth| . 327) (|N_e-Deletion_after_e[lrn]-Stem| . 328) (|N_e-Deletion_after_e-Stem| . 329) (|N_Change_U/u| . 330) (|N_Change_O/o| . 331) (|N_Change_A/a| . 332) (|N_PL_Umlaut_U/ue| . 333) (|N_PL_Umlaut_O/oe| . 334) (|N_PL_Umlaut_A/ae| . 335)) (|Cat| (N . 1) (A . 2) (V . 3) (|Art| . 4) (|Pron| . 5) (|Adv| . 6) (|Prep| . 7) (|Conjunct| . 8) (|Interj| . 9)) (|Case| (|Nom| . 47) (|Gen| . 48) (|Dat| . 49) (|Acc| . 50)) (|Manner| (|Def| . 10) (|Demonstr| . 11) (|Indef| . 12) (|Interrog| . 13) (|Local| . 14) (|Modal| . 15) (|Personal| . 16) (|Poss| . 17) (|Refl| . 18) (|Relative| . 19) (|Rezipr| . 20) (|Temporal| . 21)) (|Pers| (|1st| . 39) (|2nd| . 40) (|3rd| . 41)) (|RIRule| (|N-Regular| . 104) (ES/E . 105) (S/E . 106) ([E]S/[E]N . 107) (S/- . 108) ([E]S/ER . 109) (S/S . 110) ([E]N/[E]N . 111) (-/E . 112) (-/- . 113) (-/[E]N . 114) (-/S . 115) (|Nominalized_A| . 116) (|Gender-M| . 117) (|Gender-F| . 118) (|Gender-N| . 119) (|Foreign| . 120) (|S/EN_Replace_Foreign_Suffix| . 121) (|-/EN_Replace_Foreign_Suffix| . 122) (|SG_S/PL_Foreign_Suffix| . 123) (|SG_-/PL_Foreign_Suffix| . 124) (|A-Regular| . 125) (|A-Regular-Undeclined-e-Optional| . 126) (|A-Two_Comp_Forms| . 127) (|A-Invariable| . 128) (|A-Predicative-Only| . 129) (|A-Attributive-Only| . 130) (|A-Foreign-Stem-er| . 131) (|No-Detachable-Prefix| . 132) (|Detachable-Prefix| . 133) (|Adv| . 134) (|Prep| . 135) (|Conjunct| . 136) (|Interj| . 137)) (|Decl| (|Undeclined| . 25) (|Invar| . 26) (|Strong| . 27) (|Mixed| . 28) (|Weak| . 29)) (|WFCat| (|Derivation| . 167) (|To-N| . 168) (|To-A| . 169) (|To-V| . 170) (|To-Adv| . 171) (N-T\o-N . 172) (A-T\o-N . 173) (V-T\o-N . 174) (N-T\o-A . 175) (A-T\o-A . 176) (V-T\o-A . 177) (|Adv-To-A| . 178) (N-T\o-V . 179) (A-T\o-V . 180) (V-T\o-V . 181) (|N-To-Adv| . 182) (|A-To-Adv| . 183) (|V-To-Adv| . 184) (|Conversion| . 185) (|Prefixing| . 186) (|Suffixing| . 187) (|Prefixing+Conversion| . 188) (|Prefixing+Suffixing| . 189) (|Compounding| . 190) (|N-Comp| . 191) (|A-Comp| . 192) (|V-Comp| . 193) (|Adv-Comp| . 194) (N+N . 195) (A+N . 196) (V+N . 197) (|Adv+N| . 198) (N+A . 199) (A+A . 200) (V+A . 201) (N+V . 202) (A+V . 203) (|Adv+V| . 204) (|N-Prefix| . 205) (|A-Prefix| . 206) (|V-Prefix| . 207) (|N-Suffix| . 208) (|A-Suffix| . 209) (|V-Suffix| . 210) (|Adv-Suffix| . 211) (|Umlaut| . 212) (|No-Umlaut| . 213) (|ge-Participle| . 214) (|Hyphen| . 215) (|Detachable| . 216) (|Non-Detachable| . 217) (|Pseudo-Part| . 218) (|Linking-Element| . 219) (|Pre-+Suffixing| . 220) (|With-Linking-Element| . 221) (|With-Impf-Stem| . 222) (|With-PL-Form| . 223) (|Foreign| . 224) (|German| . 225)) (|Temp| (|Pres| . 36) (|Impf| . 37) (|Perf| . 38)) (|Var| (|Standard| . 53) (|Foreign| . 54) (|Scient| . 55) (|Pop| . 56)) (|Aux| (|sein| . 51) (|haben| . 52)) (|RWFRule| (|A_Comparative| . 226) (|A_Positive| . 227) (|A_Positive+N| . 228) (|A_Superlative+N| . 229) (|A+A_No-Hyphen| . 230) (|A+Adv| . 231) (|A+Hyphen+A| . 232) (|Ablaut-Stem| . 233) (|Adv+Adv| . 234) (|Adv+ig| . 235) (|Adv+Noun| . 236) (|Adv+Prep| . 237) (|Detachable-Prefix| . 238) (|Foreign-Suffix| . 239) (|ge+_| . 240) (|ge+_+e| . 241) (|Impf-Stem| . 242) (|Infinitive| . 243) (|Linking-Element| . 244) (|N+Adv| . 245) (|N+A_No_Linking_Element| . 246) (N+\e+A . 247) (|N+es+A| . 248) (|N+[e]n+A| . 249) (|N+ens+A| . 250) (|N+er+A| . 251) (N+\s+A . 252) (|N+N_No_Linking_Element| . 253) (N+\e+N . 254) (|N+[e]n+N| . 255) (|N+ens+N| . 256) (|N+er+N| . 257) (|N+es+N| . 258) (N+\s+N . 259) (|No-Umlaut| . 260) (|Non-Detachable-Prefix| . 261) (|Part-Perf| . 262) (|Part-Pres| . 263) (|PL-Form+Suffix| . 264) (|Prefix| . 265) (|Prep+Adv| . 266) (|Pres-Stem| . 267) (|Pseudo-Participles| . 268) (|Suffixing| . 269) (|Target_Gender_F| . 270) (|Target_Gender_M| . 271) (|Target_Gender_N| . 272) (|Target_Detachable| . 273) (|Umlaut| . 274) (|V_Detachable_Pref| . 275) (|V_Detachable_Prefix| . 276) (|V_No_Detachable_Pref| . 277) (|V_No_Detachable_Prefix| . 278) (|V_Irregular| . 279) (|V_Regular| . 280) (V+\e+A . 281) (|V+A_No_Linking_Element| . 282) (V+\e+N . 283) (|V+N_No_Linking-Element| . 284) (|Target_S/-| . 285) (|Target_ES/E| . 286) (|N+s+Suffix| . 287) (|N+Suffix| . 288) (|A+er+Suffix| . 289)) (|WFSRule| (|Delete-No-ge-participle-character| . 290) (|Compound-fff/ff| . 291) (|Compound-lll/ll| . 292) (|Compound-mmm/mm| . 293) (|Compound-nnn/nn| . 294) (|Compound-ppp/pp| . 295) (|Compound-rrr/rr| . 296) (|Compound-ttt/tt| . 297) (|en+lich/ent+lich| . 298))) #'EQ :ATTRIBUTE-SORT-ORDER (|Cat| |Manner| |Degree| |Decl| |Mod| |Temp| |Pers| |Num| |Gender| |Case| |Aux| |Var| |Lexeme| |ICat| |RIRule| |IIRule| |WFCat| |RWFRule| |WFSRule| |ISRule|) :VALUES-TABLE #]((|Prep+Adv| . |Prep+Adv|) (|Adj_Super_Insert-e_after_[dt]| . |Adj_Super_Insert-e_after_[dt]|) (|mehrere| . |mehrere|) (|Indefinite-Article| . |Indefinite-Article|) (\c . \c) (A-T\o-N . A-T\o-N) (|N+ens+A| . |N+ens+A|) (|V-Suffix| . |V-Suffix|) (|derselbe/derjenige| . |derselbe/derjenige|) (|N-e-Deletion_Dat_SG_after_Diphth| . |N-e-Deletion_Dat_SG_after_Diphth|) (|Mixed| . |Mixed|) (|es| . |es|) (|Suffixing| . |Suffixing|) (|PL-Form+Suffix| . |PL-Form+Suffix|) (-/- . -/-) (|jemand/niemand| . |jemand/niemand|) (|Demonstr| . |Demonstr|) (|To-Adv| . |To-Adv|) (N+A . N+A) (S . S) (|Local| . |Local|) (|N+es+A| . |N+es+A|) (|No-Detachable-Prefix| . |No-Detachable-Prefix|) (|A-Two_Comp_Forms| . |A-Two_Comp_Forms|) (|N_Double_Gen_SG_Form| . |N_Double_Gen_SG_Form|) (|Strong| . |Strong|) (|Comp| . |Comp|) (|en| . |en|) (|V-To-Adv| . |V-To-Adv|) (|Hyphen| . |Hyphen|) (|V_Irregular| . |V_Irregular|) (|V_No_Detachable_Prefix| . |V_No_Detachable_Prefix|) (|Part-Perf| . |Part-Perf|) ([E]N/[E]N . [E]N/[E]N) (|Non-Detachable-Prefix| . |Non-Detachable-Prefix|) (|Impf| . |Impf|) (|To-N| . |To-N|) (V+N . V+N) (|N+A_No_Linking_Element| . |N+A_No_Linking_Element|) (|V-Prefix| . |V-Prefix|) (|A-Regular| . |A-Regular|) (|Pron-Suffix| . |Pron-Suffix|) (|N-To-Adv| . |N-To-Adv|) (|No-Umlaut| . |No-Umlaut|) (|Compound-lll/ll| . |Compound-lll/ll|) (|N+es+N| . |N+es+N|) ([E]S/ER . [E]S/ER) (|Definite-Article| . |Definite-Article|) (- . -) (|A-Attributive-Only| . |A-Attributive-Only|) (|Delete-No-ge-participle-character| . |Delete-No-ge-participle-character|) (|SG_-/PL_Foreign_Suffix| . |SG_-/PL_Foreign_Suffix|) (N+N . N+N) (|A_Positive+N| . |A_Positive+N|) (|N_PL_Umlaut_A/ae| . |N_PL_Umlaut_A/ae|) (|Infinitive| . |Infinitive|) (|Target_Detachable| . |Target_Detachable|) (|Verbs_e-Deletion_Stem| . |Verbs_e-Deletion_Stem|) (|Rezipr| . |Rezipr|) (|Gen| . |Gen|) (|V_Detachable_Prefix| . |V_Detachable_Prefix|) (N-T\o-V . N-T\o-V) (|Adv-Suffix| . |Adv-Suffix|) (SG . SG) (|N+ens+N| . |N+ens+N|) (|N+Suffix| . |N+Suffix|) ([E]S/[E]N . [E]S/[E]N) (|V-Comp| . |V-Comp|) (|A_Comparative| . |A_Comparative|) (|Target_Gender_M| . |Target_Gender_M|) (|Delete_Special_Part_2_Character| . |Delete_Special_Part_2_Character|) (|Demonstr-Pronoun| . |Demonstr-Pronoun|) (|Imper| . |Imper|) (|Refl| . |Refl|) (|N-Prefix| . |N-Prefix|) (|Target_ES/E| . |Target_ES/E|) (|Replace-SCH/sch| . |Replace-SCH/sch|) (|jedermann| . |jedermann|) (|N-Suffix| . |N-Suffix|) (|Conj-1| . |Conj-1|) (|Degr-Mark| . |Degr-Mark|) (|N-Comp| . |N-Comp|) (|With-PL-Form| . |With-PL-Form|) (S/E . S/E) (|Pseudo-Participles| . |Pseudo-Participles|) (|en+lich/ent+lich| . |en+lich/ent+lich|) (|N_Double_Dat_SG_Form| . |N_Double_Dat_SG_Form|) (|Personal| . |Personal|) (M . M) (ES . ES) (A+V . A+V) (|Adv+Noun| . |Adv+Noun|) (V-T\o-V . V-T\o-V) (|V+N_No_Linking-Element| . |V+N_No_Linking-Element|) (|Replace-D/d| . |Replace-D/d|) (|einige/etliche| . |einige/etliche|) (|Derivation| . |Derivation|) (|Reflexive-Pronoun| . |Reflexive-Pronoun|) (|Scient| . |Scient|) (|With-Linking-Element| . |With-Linking-Element|) (ENS/EN . ENS/EN) (|A-Stem| . |A-Stem|) (|Compound-rrr/rr| . |Compound-rrr/rr|) (|Pron| . |Pron|) (|Pron-Stem| . |Pron-Stem|) (|Detachable| . |Detachable|) (-/S . -/S) (EN . EN) (V+A . V+A) (|Adv+Adv| . |Adv+Adv|) (|Adj_Delete-e_Vow+er-Stem| . |Adj_Delete-e_Vow+er-Stem|) (|V+A_No_Linking_Element| . |V+A_No_Linking_Element|) (|A-Predicative-Only| . |A-Predicative-Only|) (|all/manch| . |all/manch|) (|2nd| . |2nd|) (|Undeclined| . |Undeclined|) (|Standard| . |Standard|) (|SG_S/PL_Foreign_Suffix| . |SG_S/PL_Foreign_Suffix|) (|Linking-Element| . |Linking-Element|) (|Impf-Stem| . |Impf-Stem|) (|Compound-nnn/nn| . |Compound-nnn/nn|) (|Art-Stem| . |Art-Stem|) (|Demonstr-Pron| . |Demonstr-Pron|) (|N_PL_Umlaut_O/oe| . |N_PL_Umlaut_O/oe|) (|Cataphoric| . |Cataphoric|) (|A+Hyphen+A| . |A+Hyphen+A|) (|Verbs_Delete_Avoid_Insertion_Character| . |Verbs_Delete_Avoid_Insertion_Character|) (|Adj_Comp_Delete-e_e[ln]-Stem| . |Adj_Comp_Delete-e_e[ln]-Stem|) (|Verbs_e-Deletion_Suffix| . |Verbs_e-Deletion_Suffix|) (|welcher| . |welcher|) (|Prep| . |Prep|) (|haben| . |haben|) (|S/EN_Replace_Foreign_Suffix| . |S/EN_Replace_Foreign_Suffix|) (|ge+_| . |ge+_|) (|Adj_Super_Avoid_Insert-e_With_isch| . |Adj_Super_Avoid_Insert-e_With_isch|) (|Pers-Pron| . |Pers-Pron|) (|Ana/Cataphoric| . |Ana/Cataphoric|) (A-T\o-A . A-T\o-A) (|A+A_No-Hyphen| . |A+A_No-Hyphen|) (|N_Change_A/a| . |N_Change_A/a|) (|Indef| . |Indef|) (|Verbs_e-Deletion_Imper| . |Verbs_e-Deletion_Imper|) (|N_Change_U/u| . |N_Change_U/u|) (|Decl-jemand| . |Decl-jemand|) (|Acc| . |Acc|) (|Gender-F| . |Gender-F|) (|Compounding| . |Compounding|) (|N+N_No_Linking_Element| . |N+N_No_Linking_Element|) (|Adj_Super_Insert-e_after_Cons+sch| . |Adj_Super_Insert-e_after_Cons+sch|) (|Inf| . |Inf|) (\d . \d) (V-T\o-N . V-T\o-N) (|Rel/Interrog-Pronoun| . |Rel/Interrog-Pronoun|) (|N+er+A| . |N+er+A|) (|N-Regular| . |N-Regular|) (|N_e-Deletion_after_e[lrn]-Stem| . |N_e-Deletion_after_e[lrn]-Stem|) (|Invar| . |Invar|) (|dieser/jener| . |dieser/jener|) (|Prefixing+Conversion| . |Prefixing+Conversion|) (|saemtlich| . |saemtlich|) (|Prefix| . |Prefix|) (-/[E]N . -/[E]N) (|Adj_Super_Insert-e_after_Diphth| . |Adj_Super_Insert-e_after_Diphth|) (|kein| . |kein|) (|Interrog| . |Interrog|) (\b . \b) (N-T\o-N . N-T\o-N) (A+A . A+A) (|N+[e]n+A| . |N+[e]n+A|) (V+\e+A . V+\e+A) (|N-e-Deletion_Dat_SG_after_Vow+h| . |N-e-Deletion_Dat_SG_after_Vow+h|) (|Weak| . |Weak|) (|Super| . |Super|) (|er| . |er|) (|Conversion| . |Conversion|) (|Part-Pres| . |Part-Pres|) (-/E . -/E) (N . N) (|V_Regular| . |V_Regular|) (|To-A| . |To-A|) (|Adv+N| . |Adv+N|) (|Nominalized_A| . |Nominalized_A|) (N+\e+A . N+\e+A) (|V_No_Detachable_Pref| . |V_No_Detachable_Pref|) (|A-Regular-Undeclined-e-Optional| . |A-Regular-Undeclined-e-Optional|) (|Interj| . |Interj|) (|Pos| . |Pos|) (|A-To-Adv| . |A-To-Adv|) (|ge-Participle| . |ge-Participle|) (|V-Stem| . |V-Stem|) (N+\s+N . N+\s+N) (|Compound-fff/ff| . |Compound-fff/ff|) (|Prefixing| . |Prefixing|) (|Pres| . |Pres|) (|A-Foreign-Stem-er| . |A-Foreign-Stem-er|) (A+N . A+N) (|A_Superlative+N| . |A_Superlative+N|) (|N+Adv| . |N+Adv|) (|V_Detachable_Pref| . |V_Detachable_Pref|) (PL . PL) (|V-Regular| . |V-Regular|) (|Temporal| . |Temporal|) (A . A) (A-T\o-V . A-T\o-V) (|Umlaut| . |Umlaut|) (|V-Irregular| . |V-Irregular|) (|N+er+N| . |N+er+N|) (|A+er+Suffix| . |A+er+Suffix|) (|Def| . |Def|) (|Decl-Strong| . |Decl-Strong|) (|Part| . |Part|) (S/S . S/S) (|A_Positive| . |A_Positive|) (|Target_Gender_N| . |Target_Gender_N|) (|Delete_ge_Part-2| . |Delete_ge_Part-2|) (|der/die/das| . |der/die/das|) (|Relative| . |Relative|) (|Nom| . |Nom|) (|Adv-To-A| . |Adv-To-A|) (|A-Prefix| . |A-Prefix|) (|N+[e]n+N| . |N+[e]n+N|) (S/- . S/-) (|Adj_Super_Insert-e_after_Vow+h| . |Adj_Super_Insert-e_after_Vow+h|) (|N+s+Suffix| . |N+s+Suffix|) (|Conj-2| . |Conj-2|) (\a . \a) (|A-Comp| . |A-Comp|) (|German| . |German|) (|sein| . |sein|) (|Target_Gender_F| . |Target_Gender_F|) (|N-Stem| . |N-Stem|) (|Possessive-Pronoun| . |Possessive-Pronoun|) (|Poss| . |Poss|) (F . F) (|Adv+V| . |Adv+V|) (|Adv+Prep| . |Adv+Prep|) (|Adv-Comp| . |Adv-Comp|) (|Detachable-Prefix| . |Detachable-Prefix|) (|A-Suffix| . |A-Suffix|) (|jeder| . |jeder|) (|Replace-T/t| . |Replace-T/t|) (|Ind| . |Ind|) (|Pop| . |Pop|) (|Target_S/-| . |Target_S/-|) (|With-Impf-Stem| . |With-Impf-Stem|) (|Art| . |Art|) (|Compound-ttt/tt| . |Compound-ttt/tt|) (|Adj_Delete-e_el-Stem| . |Adj_Delete-e_el-Stem|) (|Pres-Stem| . |Pres-Stem|) (|Modal| . |Modal|) (|3rd| . |3rd|) (ER . ER) (N+V . N+V) (|Adv+ig| . |Adv+ig|) (|Stressed-e/surface-e| . |Stressed-e/surface-e|) (V+\e+N . V+\e+N) (|Verbs_e-Insertion| . |Verbs_e-Insertion|) (|einer| . |einer|) (E . E) (|A-Irreg| . |A-Irreg|) (|Foreign| . |Foreign|) (|Pre-+Suffixing| . |Pre-+Suffixing|) (|N-Irregular| . |N-Irregular|) (V . V) (|Adj_Delete-e_e-Stem| . |Adj_Delete-e_e-Stem|) (|Rel-Pron| . |Rel-Pron|) (|Compound-ppp/pp| . |Compound-ppp/pp|) (|Non-Detachable| . |Non-Detachable|) (|1st| . |1st|) (|Reg| . |Reg|) (|Ablaut-Stem| . |Ablaut-Stem|) (|Verbs_s-Deletion| . |Verbs_s-Deletion|) (|Indefinite-Pronoun| . |Indefinite-Pronoun|) (|Conjunct| . |Conjunct|) (|-/EN_Replace_Foreign_Suffix| . |-/EN_Replace_Foreign_Suffix|) (|A-Invariable| . |A-Invariable|) (|Pseudo-Part| . |Pseudo-Part|) (|To-V| . |To-V|) (|ge+_+e| . |ge+_+e|) (|Compound-mmm/mm| . |Compound-mmm/mm|) (|Adj_Super_Insert-e_after_[sxz]| . |Adj_Super_Insert-e_after_[sxz]|) (|Refl-Pron| . |Refl-Pron|) (|Personal-Pronoun| . |Personal-Pronoun|) (|Perf| . |Perf|) (|Art+Pron-Stem| . |Art+Pron-Stem|) (V-T\o-A . V-T\o-A) (|A+Adv| . |A+Adv|) (N+\e+N . N+\e+N) (|Art-Suffix| . |Art-Suffix|) (|Verbs_Imper-Exception| . |Verbs_Imper-Exception|) (|N_Change_O/o| . |N_Change_O/o|) (|Adv| . |Adv|) (|Gender-N| . |Gender-N|) (|wer/was| . |wer/was|) (|N_PL_Umlaut_U/ue| . |N_PL_Umlaut_U/ue|) (|Foreign-Suffix| . |Foreign-Suffix|) (|Adj_Super_Insert-e_after_Vow+sch| . |Adj_Super_Insert-e_after_Vow+sch|) (|Pron-Invar| . |Pron-Invar|) (|Def-Article| . |Def-Article|) (|Anaphoric| . |Anaphoric|) (N-T\o-A . N-T\o-A) (N+\s+A . N+\s+A) (ES/E . ES/E) (|Verbs_Return_Imper-Exeption| . |Verbs_Return_Imper-Exeption|) (|N_e-Deletion_after_e-Stem| . |N_e-Deletion_after_e-Stem|) (|Decl-jedermann| . |Decl-jedermann|) (|Dat| . |Dat|) (|Gender-M| . |Gender-M|) (|Prefixing+Suffixing| . |Prefixing+Suffixing|)) #'EQ :DEPENDENCIES ((((|Cat| . V)) |Aux|) (((|Cat| . N)) |Gender|)) :ISRULES ((#S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_A/ae| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\15\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) T 335) (#S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_O/oe| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1+\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) T 334) (#S(GLOBAL-ISRULE :NAME |N_PL_Umlaut_U/ue| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1%\\2") (((|ICat| . |N-Stem|)))) (NIL (((|ICat| . |N-Suffix|) (|Num| . PL))))) :VALUE-FLAG NIL) T 333) (#S(GLOBAL-ISRULE :NAME |N_Change_A/a| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)A\\(.*\\)" NIL "\\1a\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) T 332) (#S(GLOBAL-ISRULE :NAME |N_Change_O/o| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)O\\(.*\\)" NIL "\\1o\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) T 331) (#S(GLOBAL-ISRULE :NAME |N_Change_U/u| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((("\\(.*\\)U\\(.*\\)" NIL "\\1u\\2") (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) T 330) (#S(GLOBAL-ISRULE :NAME |N_e-Deletion_after_e-Stem| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*e") (((|ICat| . |N-Stem|)))) (("e\\(.*\\)" NIL "\\1") (((|ICat| . |N-Suffix|))))) :VALUE-FLAG NIL) T 329) (#S(GLOBAL-ISRULE :NAME |N_e-Deletion_after_e[lrn]-Stem| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[^ie]e[lrn]") (((|ICat| . |N-Stem|)))) (("e\\(.*\\)" NIL "\\1") (((|ICat| . |N-Suffix|)) ((|Decl| . |Strong|)) ((|Decl| . |Weak|))))) :VALUE-FLAG NIL) T 328) (#S(GLOBAL-ISRULE :NAME |N-e-Deletion_Dat_SG_after_Diphth| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[a5e][iu]") (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL) T 327) (#S(GLOBAL-ISRULE :NAME |N-e-Deletion_Dat_SG_after_Vow+h| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[a5eio+u%]h") (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG NIL) T 326) (#S(GLOBAL-ISRULE :NAME |N_Double_Gen_SG_Form| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS (((".*[^sxz]") (((|ICat| . |N-Stem|)))) (("es" NIL "s") (((|ICat| . |N-Suffix|) (|Case| . |Gen|) (|Num| . SG))))) :VALUE-FLAG T) T 325) (#S(GLOBAL-ISRULE :NAME |N_Double_Dat_SG_Form| :COMMON-FEATURE-SET ((((|Cat| . N)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |N-Stem|)))) (("e" NIL "") (((|ICat| . |N-Suffix|) (|Case| . |Dat|) (|Num| . SG))))) :VALUE-FLAG T) T 324) (#S(GLOBAL-ISRULE :NAME |Adj_Delete-e_el-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)e\\(l\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) T 323) (#S(GLOBAL-ISRULE :NAME |Adj_Delete-e_Vow+er-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*[ae]u\\)e\\(r\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) T 322) (#S(GLOBAL-ISRULE :NAME |Adj_Delete-e_e-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)e" NIL "\\1") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |A-Suffix|))) (((|ICat| . |Degr-Mark|))))) :VALUE-FLAG NIL) T 321) (#S(GLOBAL-ISRULE :NAME |Adj_Comp_Delete-e_e[ln]-Stem| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*[^ie]\\)e\\([rn]\\)" NIL "\\1\\2") (((|ICat| . |A-Stem|)))) (("e.*") (((|ICat| . |Degr-Mark|) (|Degree| . |Comp|))))) :VALUE-FLAG T) T 320) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_[sxz]| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[sxz]k?") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) T 319) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Avoid_Insert-e_With_isch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*i\\)sch" NIL "\\1SCH") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) T 318) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Vow+sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[aeiou]r?sch\\|.*friSCH") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) T 317) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Cons+sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[^aeiour]sch") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) T 316) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_[dt]| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[dt]") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG NIL) T 315) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Diphth| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[ae][iu]") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) T 314) (#S(GLOBAL-ISRULE :NAME |Adj_Super_Insert-e_after_Vow+h| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS (((".*[a5ieou%]h") (((|ICat| . |A-Stem|)))) (("st" NIL "est") (((|ICat| . |Degr-Mark|) (|Degree| . |Super|))))) :VALUE-FLAG T) T 313) (#S(GLOBAL-ISRULE :NAME |Replace-SCH/sch| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)SCH" NIL "\\1sch") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) T 312) (#S(GLOBAL-ISRULE :NAME |Replace-T/t| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)T" NIL "\\1t") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) T 311) (#S(GLOBAL-ISRULE :NAME |Replace-D/d| :COMMON-FEATURE-SET ((((|Cat| . A)))) :MATCH-AND-MAPS ((("\\(.*\\)D" NIL "\\1d") (((|ICat| . |A-Stem|))))) :VALUE-FLAG NIL) T 310) (#S(GLOBAL-ISRULE :NAME |Verbs_e-Insertion| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[bdfgkpst][mn]\\|.*[dt]\\|.*ch[mn]") (((|ICat| . |V-Stem|)))) (("\\([st].*\\)" NIL "e\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) T 309) (#S(GLOBAL-ISRULE :NAME |Verbs_Delete_Avoid_Insertion_Character| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("!\\(s?t.*\\)" NIL "\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) T 308) (#S(GLOBAL-ISRULE :NAME |Verbs_s-Deletion| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[sxz]") (((|ICat| . |V-Stem|)))) (("st" NIL "t") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) T 307) (#S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Suffix| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*[^ei]e[lr]") (((|ICat| . |V-Stem|)))) (("e\\(nd\\|[nt]\\|st\\)" NIL "\\1") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) T 306) (#S(GLOBAL-ISRULE :NAME |Verbs_Imper-Exception| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS (((".*ch[mn]\\|.*[bdfgkpst][mn]\\|.*[^ei]e[lr]")) (("e" NIL "e!") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) T 305) (#S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Imper| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("e" NIL "") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG T) T 304) (#S(GLOBAL-ISRULE :NAME |Verbs_Return_Imper-Exeption| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((NIL (((|ICat| . |V-Stem|)))) (("e!" NIL "e") (((|ICat| . |V-Suffix|) (|Mod| . |Imper|) (|Num| . SG))))) :VALUE-FLAG NIL) T 303) (#S(GLOBAL-ISRULE :NAME |Verbs_e-Deletion_Stem| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("\\(.*[^ei]\\)e\\(l\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|)))) (("e") (((|ICat| . |V-Suffix|))))) :VALUE-FLAG NIL) T 302) (#S(GLOBAL-ISRULE :NAME |Delete_ge_Part-2| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("ge" NIL "") (((|ICat| . |V-Prefix|)))) (("\\(.*\\)\"\\(.*\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|)))) (NIL (((|Mod| . |Part|) (|Temp| . |Perf|))))) :VALUE-FLAG NIL) T 301) (#S(GLOBAL-ISRULE :NAME |Delete_Special_Part_2_Character| :COMMON-FEATURE-SET ((((|Cat| . V)))) :MATCH-AND-MAPS ((("\\(.*\\)\"\\(.*\\)" NIL "\\1\\2") (((|ICat| . |V-Stem|))))) :VALUE-FLAG NIL) T 300) (#S(GLOBAL-ISRULE :NAME |Stressed-e/surface-e| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*\\)0\\(.*\\)" NIL "\\1e\\2") (((|ICat| . |V-Stem|))) (((|ICat| . |A-Stem|))) (((|ICat| . |N-Stem|))))) :VALUE-FLAG NIL) T 299)) :WFSRULES ((#S(GLOBAL-WFSRULE :NAME |en+lich/ent+lich| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[^ei]en\\)" NIL "\\1t")) (("lich") (((|WFCat| . |A-Suffix|))))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Delete-No-ge-participle-character| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\"\\(.*\\)" NIL "\\1") (((|ICat| . |V-Stem|)))) (NIL (((|WFCat| . |N-Suffix|))) (((|WFCat| . |V-Suffix|))) (((|WFCat| . |A-Suffix|))))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-fff/ff| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]f\\)f" NIL "\\1")) (("f[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-lll/ll| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]l\\)l" NIL "\\1")) (("l[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-mmm/mm| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]m\\)m" NIL "\\1")) (("m[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-nnn/nn| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]n\\)n" NIL "\\1")) (("n[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-ppp/pp| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]p\\)p" NIL "\\1")) (("p[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-rrr/rr| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]r\\)r" NIL "\\1")) (("r[aeiouAOU#].*"))) :VALUE-FLAG NIL) T) (#S(GLOBAL-WFSRULE :NAME |Compound-ttt/tt| :COMMON-FEATURE-SET NIL :MATCH-AND-MAPS ((("\\(.*[aeiouAOU#]t\\)t" NIL "\\1")) (("t[aeiouAOU#].*"))) :VALUE-FLAG NIL) T)) :TRIE #[C-INTERNAL-TRIE ( :TABLE #]NIL #'EQUAL) :FUNCTIONS #[C-WMFUNCTIONS ( :TABLE #]NIL #'EQ :MOD2-P NIL) :COLLECTION #[C-INTERNAL-COLLECTION ( :ELEMENTS-EXTEND-SIZE 200 :IX-SEQUENCES #(NIL (629 626 623 620 617 614 611 606 603 600 597 594) (550 545 542 539 536 533 530) (437 436 433 481 480) (392 408) (235 198 181 163 158 133 128 117 96 91 88 85 80 77 74 69 66 61 50) (42) (8) (0) NIL (408) NIL (392) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (437 436 433) NIL (481 480) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (626 623 620 617 614 611 606 603 600 597 594) (594) (597) (603) (600) (606) (611) (614) (617) (620) (623) (626) NIL NIL NIL NIL NIL NIL NIL NIL NIL (545) (542) (539) (536) (533) (530) NIL (481) (480) (42) (8) (0) NIL (629) (629) (550) (437) (436) (433) (50) (91) (88) (85) (80) (77) (74) (69) (66) (61) (91 88 85 80 77 74 69 66 61) (128) (117) (128 117 96) (163) (158) (133 96) (163 158 133) (181) (198) (235) (392) (408) (713 709 705) NIL NIL (713 709 705) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (713 709 705) NIL NIL NIL NIL (713 709 705) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (715) (715) NIL (483 715) (435 447 445 443 441 439 497 495 493 491 489 487 485) (483 715) (708 483 715) (712 439) NIL (447 497 495) NIL (556) NIL NIL NIL (541 544 547) NIL NIL NIL NIL NIL NIL NIL NIL (596 605 610 608 631) (596 605 608) NIL NIL NIL (625) (622) NIL (602 610 619) (622) NIL (602 610 619) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (481) (437) (481 437) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :IX-SEQUENCES-FREE-LIST #*0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111 :IX-SEQUENCES-EXTEND-SIZE 100 :AUX-ELEMENTS #(#S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (1) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (3) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (0 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (5) :WFHISTORY NIL) NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (9) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (11) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (13) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (15) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (17) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (19) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (21) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (23) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (25) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (27) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (29) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (31) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (33) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (35) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (37) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (8 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (39) :WFHISTORY NIL) NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (43) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (45) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (42 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (47) :WFHISTORY NIL) NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((383 (""))))) :WORD-FORMS (((PH) ((383 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (51) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (53) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (55) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (57) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (50 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (59) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((383 (""))))) :WORD-FORMS (((PH) ((383 ("")))) ((PH) ((310 ("er")))) ((PH) ((311 ("es")) (312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((321 ("es")) (322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((326 ("e")) (327 ("er")) (328 ("en")) (329 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (61 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (62) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (61 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (64) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((331 ("er"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((332 ("es")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("s" "es")))) ((PH) ((342 ("es")))) ((PH) ((344 ("em")))) ((PH) ((346 ("s" "es"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (66 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (67) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((347 ("e"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((333 ("en")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("es")))) ((PH) ((343 ("en")))) ((PH) ((344 ("em")))) ((PH) ((346 ("es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (69 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (70) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (69 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (72) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((310 ("er"))))) :WORD-FORMS (((PH) ((310 ("er")))) ((PH) ((311 ("es")) (312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((321 ("es")) (322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((367 ("er")) (368 ("en")) (369 ("en")) (370 ("en")))) ((PH) ((371 ("e")) (372 ("en")) (373 ("en")) (374 ("e")))) ((PH) ((375 ("es")) (376 ("en")) (377 ("en")) (378 ("es"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (74 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (75) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((384 (""))))) :WORD-FORMS (((PH) ((384 ("")) (385 ("s")) (386 ("")) (387 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (77 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (78) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((388 (""))))) :WORD-FORMS (((PH) ((388 ("")) (389 ("s" "es")) (390 ("" "em")) (391 ("" "en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (80 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (81) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (80 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (83) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((330 (""))))) :WORD-FORMS (((PH) ((330 ("")) (331 ("er")))) ((PH) ((332 ("es")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((340 ("")) (341 ("s" "es")))) ((PH) ((342 ("es")))) ((PH) ((344 ("em")))) ((PH) ((345 ("")) (346 ("s" "es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (85 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (86) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((347 ("e"))))) :WORD-FORMS (((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (88 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (89) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((310 ("er")))) ((PH) ((312 ("en")))) ((PH) ((313 ("em")))) ((PH) ((314 ("en")))) ((PH) ((315 ("e")) (316 ("er")) (317 ("er")) (318 ("e")))) ((PH) ((320 ("es")))) ((PH) ((322 ("en")))) ((PH) ((323 ("em")))) ((PH) ((325 ("es")))) ((PH) ((326 ("e")) (327 ("er")) (328 ("en")) (329 ("e")))) ((PH) ((351 ("e")) (352 ("en")) (353 ("en")) (354 ("en")))) ((PH) ((355 ("e")) (356 ("en")) (357 ("en")) (358 ("e")))) ((PH) ((359 ("e")) (360 ("en")) (361 ("en")) (362 ("e")))) ((PH) ((363 ("en")) (364 ("en")) (365 ("en")) (366 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (91 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (92) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (91 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (94) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (97 98 99 100) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (102 103 104 105) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (107 108 109 110) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (96 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (112 113 114 115) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (117 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (118 119 120 121) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (117 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (123 124 125 126) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((331 ("er"))))) :WORD-FORMS (((PH) ((331 ("er")))) ((PH) ((332 ("es")) (333 ("en")))) ((PH) ((334 ("em")))) ((PH) ((335 ("en")))) ((PH) ((336 ("e")) (337 ("er")) (338 ("er")) (339 ("e")))) ((PH) ((341 ("es")))) ((PH) ((342 ("es")) (343 ("en")))) ((PH) ((344 ("em")))) ((PH) ((346 ("es")))) ((PH) ((347 ("e")) (348 ("er")) (349 ("en")) (350 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (128 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (129) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (128 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (131) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH PH)) ((PH)) ((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Nom|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Gen|) (|ICat| . |Anaphoric|)) ((|Case| . |Gen|) (|ICat| . |Cataphoric|)) ((|Case| . |Dat|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Acc|) (|ICat| . |Ana/Cataphoric|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (134 135 136 137 138) :WFHISTORY NIL) ((|Case| . |Nom|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Gen|) (|ICat| . |Anaphoric|)) ((|Case| . |Gen|) (|ICat| . |Cataphoric|)) ((|Case| . |Dat|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Acc|) (|ICat| . |Ana/Cataphoric|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (140 141 142 143 144) :WFHISTORY NIL) ((|Case| . |Nom|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Gen|) (|ICat| . |Anaphoric|)) ((|Case| . |Gen|) (|ICat| . |Cataphoric|)) ((|Case| . |Dat|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Acc|) (|ICat| . |Ana/Cataphoric|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (146 147 148 149 150) :WFHISTORY NIL) ((|Case| . |Nom|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Gen|) (|ICat| . |Anaphoric|)) ((|Case| . |Gen|) (|ICat| . |Cataphoric|)) ((|Case| . |Dat|) (|ICat| . |Ana/Cataphoric|)) ((|Case| . |Acc|) (|ICat| . |Ana/Cataphoric|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (133 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (152 153 154 155 156) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((331 ("er") ("er"))))) :WORD-FORMS (((PH) ((331 ("er") ("er")))) ((PH) ((332 ("es") ("es")))) ((PH) ((334 ("em") ("em")))) ((PH) ((335 ("en") ("en")))) ((PH) ((336 ("e") ("e")) (337 ("er") ("er")) (338 ("er") ("er")) (339 ("e") ("e")))) ((PH) ((341 ("es") ("" "es")))) ((PH) ((342 ("es") ("es")))) ((PH) ((344 ("em") ("em")))) ((PH) ((346 ("es") ("" "es")))) ((PH) ((347 ("e") ("e")) (348 ("er") ("er")) (349 ("en") ("en")) (350 ("e") ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (158 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (159) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (158 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (161) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH PH)) ((PH PH PH PH)) ((PH PH PH PH)) ((PH PH PH PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Num| . SG) (|Gender| . M) (|Case| . |Nom|)) ((|Num| . SG) (|Gender| . M) (|Case| . |Gen|)) ((|Num| . SG) (|Gender| . M) (|Case| . |Dat|)) ((|Num| . SG) (|Gender| . M) (|Case| . |Acc|)) ((|Num| . SG) (|Gender| . F) (|Case| . |Nom|)) ((|Num| . SG) (|Gender| . F) (|Case| . |Gen|)) ((|Num| . SG) (|Gender| . F) (|Case| . |Dat|)) ((|Num| . SG) (|Gender| . F) (|Case| . |Acc|)) ((|Num| . SG) (|Gender| . N) (|Case| . |Nom|)) ((|Num| . SG) (|Gender| . N) (|Case| . |Gen|)) ((|Num| . SG) (|Gender| . N) (|Case| . |Dat|)) ((|Num| . SG) (|Gender| . N) (|Case| . |Acc|)) ((|Num| . PL) (|Case| . |Nom|)) ((|Num| . PL) (|Case| . |Gen|)) ((|Num| . PL) (|Case| . |Dat|)) ((|Num| . PL) (|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (163 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((330 ("") ("") (""))))) :WORD-FORMS (((PH) ((309 ("") ("") ("")) (310 ("er") ("er") ("er")))) ((PH) ((311 ("es") ("es") ("es")))) ((PH) ((313 ("m" "em") ("em") ("em")))) ((PH) ((314 ("n" "en") ("en") ("en")))) ((PH) ((315 ("e") ("e") ("e")) (316 ("er") ("er") ("er")) (317 ("er") ("er") ("er")) (318 ("e") ("e") ("e")))) ((PH) ((319 ("") ("") ("")) (320 ("es") ("es") ("s" "es")))) ((PH) ((321 ("es") ("es") ("es")))) ((PH) ((323 ("m" "em") ("em") ("em")))) ((PH) ((324 ("") ("") ("")) (325 ("es") ("es") ("s" "es")))) ((PH) ((326 ("e") ("e") ("e")) (327 ("er") ("er") ("er")) (328 ("n" "en") ("en") ("en")) (329 ("e") ("e") ("e")))) ((PH) ((351 ("e") ("e") ("e")) (352 ("n" "en") ("en") ("en")) (353 ("n" "en") ("en") ("en")) (354 ("n" "en") ("en") ("en")) (355 ("e") ("e") ("e")) (356 ("n" "en") ("en") ("en")) (357 ("n" "en") ("en") ("en")) (358 ("e") ("e") ("e")) (359 ("e") ("e") ("e")) (360 ("n" "en") ("en") ("en")) (361 ("n" "en") ("en") ("en")) (362 ("e") ("e") ("e")) (363 ("n" "en") ("en") ("en")) (364 ("n" "en") ("en") ("en")) (365 ("n" "en") ("en") ("en")) (366 ("n" "en") ("en") ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (182) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (184) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (186) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (188) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (190) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (192) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (194) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (181 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (196) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (201 199 200) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (205 203 204) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (209 207 208) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (213 211 212) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (217 215 216) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (221 219 220) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (225 223 224) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (229 227 228) :WFHISTORY NIL) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (198 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (233 231 232) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH PH PH PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (236 237 238 239) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (241 242 243 244) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (246 247 248 249) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (251 252 253 254) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (256 257 258 259) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (261 262 263 264) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (266 267 268 269) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (235 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (271 272 273 274) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((396 (""))))) :WORD-FORMS (((PH) ((396 ("")) (397 ("es")) (398 ("em")) (399 ("en")) (400 ("e")) (401 ("er")) (402 ("er")) (403 ("e")) (404 ("")) (405 ("es")) (406 ("em")) (407 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (392 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (393) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH)) ((PH)) ((PH)) ((PH))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (409 410 411 412) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (414 415 416 417) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (419 420 421 422) :WFHISTORY NIL) ((|Case| . |Nom|)) ((|Case| . |Gen|)) ((|Case| . |Dat|)) ((|Case| . |Acc|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (408 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (424 425 426 427) :WFHISTORY NIL) NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((449 ("n"))))) :WORD-FORMS (((PH) ((449 ("n")))) ((PH) ((450 ("")) (451 ("st")) (452 ("t")) (453 ("")) (454 ("d")) (455 ("")))) ((PH) ((456 ("")) (457 ("st")) (458 ("")) (459 ("en")) (460 ("t")) (461 ("en")))) ((PH) ((462 ("")) (463 ("st" "est")) (464 ("")) (465 ("en")) (466 ("et")) (467 ("en")))) ((PH) ((468 ("e")) (469 ("st" "est")) (470 ("e")) (471 ("en")) (472 ("t" "et")) (473 ("en")))) ((PH) ((474 ("")) (475 ("d")))) ((PH) ((476 ("end")))) (((478 ("ge"))) (PH) ((477 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (433 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (434) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) (PH) ((449 ("en"))))) :WORD-FORMS (((PH) (PH) ((449 ("en")))) ((PH) (PH) ((450 ("e")) (451 ("t")) (452 ("t")) (453 ("en")) (454 ("t")) (455 ("en")))) ((PH) (PH) ((456 ("")) (457 ("est" "t")) (458 ("")) (459 ("en")) (460 ("t")) (461 ("en")))) ((PH) (PH) ((462 ("e")) (463 ("est")) (464 ("e")) (465 ("en")) (466 ("et")) (467 ("en")))) ((PH) (PH) ((468 ("e")) (469 ("est")) (470 ("e")) (471 ("en")) (472 ("et")) (473 ("en")))) ((PH) (PH) ((476 ("end")))) ((PH) ((478 ("ge"))) (PH) ((477 ("en"))))) :TARGET-OF (709) :EC-SOURCE-MATCHES (ROOT)) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((449 ("en") ("en") ("en") ("en"))))) :WORD-FORMS (((PH) ((449 ("en") ("en") ("en") ("en")))) ((PH) ((450 ("e") ("e") ("e") ("e")) (451 ("st") ("st") ("st") ("t")) (452 ("") ("t") ("t") ("t")) (453 ("en") ("en") ("en") ("en")) (454 ("et") ("t") ("t") ("t")) (455 ("en") ("en") ("en") ("en")))) ((PH) ((456 ("e") ("") ("") ("")) (457 ("est") ("st") ("st") ("est" "t")) (458 ("e") ("") ("") ("")) (459 ("en") ("en") ("en") ("en")) (460 ("et") ("t") ("t") ("t")) (461 ("en") ("en") ("en") ("en")))) ((PH) ((462 ("e") ("e") ("e") ("e")) (463 ("est") ("est") ("est") ("est")) (464 ("e") ("e") ("e") ("e")) (465 ("en") ("en") ("en") ("en")) (466 ("et") ("et") ("et") ("et")) (467 ("en") ("en") ("en") ("en")))) ((PH) ((468 ("e") ("e") ("e") ("e")) (469 ("est") ("st" "est") ("est") ("est")) (470 ("e") ("e") ("e") ("e")) (471 ("en") ("en") ("en") ("en")) (472 ("et") ("t" "et") ("et") ("et")) (473 ("en") ("en") ("en") ("en")))) ((PH) ((474 ("e") ("" "e") ("" "e") ("" "e")) (475 ("et") ("t") ("t") ("t")))) ((PH) ((476 ("end") ("end") ("end") ("end")))) (((478 ("" "ge") ("ge") ("ge") ("ge"))) (PH) ((477 ("en") ("en") ("en") ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT (709 (0 0)))) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 3) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (438) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (440) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (442) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (444) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (437 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (446) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) (PH) ((499 ("n"))))) :WORD-FORMS (((PH) (PH) ((499 ("n")))) ((PH) (PH) ((500 ("e")) (501 ("st")) (502 ("t")) (503 ("n")) (504 ("t")) (505 ("n")))) ((PH) (PH) ((506 ("te")) (507 ("test")) (508 ("te")) (509 ("ten")) (510 ("tet")) (511 ("ten")))) ((PH) (PH) ((512 ("e")) (513 ("st")) (514 ("e")) (515 ("n")) (516 ("t")) (517 ("n")))) ((PH) (PH) ((518 ("te")) (519 ("test")) (520 ("te")) (521 ("ten")) (522 ("tet")) (523 ("ten")))) ((PH) (PH) ((526 ("nd")))) ((PH) ((528 ("ge"))) (PH) ((527 ("t"))))) :TARGET-OF (705) :EC-SOURCE-MATCHES (ROOT)) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((499 ("en") ("en") ("n") ("n"))))) :WORD-FORMS (((PH) ((499 ("en") ("en") ("n") ("n")))) ((PH) ((500 ("e") ("e") ("e") ("e")) (501 ("est") ("st") ("st") ("st")) (502 ("et") ("t") ("t") ("t")) (503 ("en") ("en") ("n") ("n")) (504 ("et") ("t") ("t") ("t")) (505 ("en") ("en") ("n") ("n")))) ((PH) ((506 ("te" "ete") ("te") ("te") ("te")) (507 ("test" "etest") ("test") ("test") ("test")) (508 ("te" "ete") ("te") ("te") ("te")) (509 ("ten" "eten") ("ten") ("ten") ("ten")) (510 ("tet" "etet") ("tet") ("tet") ("tet")) (511 ("ten" "eten") ("ten") ("ten") ("ten")))) ((PH) ((512 ("e") ("e") ("e") ("e")) (513 ("est") ("est") ("st") ("st")) (514 ("e") ("e") ("e") ("e")) (515 ("en") ("en") ("n") ("n")) (516 ("et") ("et") ("t") ("t")) (517 ("en") ("en") ("n") ("n")))) ((PH) ((518 ("ete") ("te") ("te") ("te")) (519 ("etest") ("test") ("test") ("test")) (520 ("ete") ("te") ("te") ("te")) (521 ("eten") ("ten") ("ten") ("ten")) (522 ("etet") ("tet") ("tet") ("tet")) (523 ("eten") ("ten") ("ten") ("ten")))) ((PH) ((524 ("" "e") ("" "e") ("e") ("e")) (525 ("et") ("t") ("t") ("t")))) ((PH) ((526 ("end") ("end") ("nd") ("nd")))) (((528 ("ge") ("ge") ("ge") (""))) (PH) ((527 ("t" "et") ("t") ("t") ("t"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT (705 (0 0)) (713 (0 0)))) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 2) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (482) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (484) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (486) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (488) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (490) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (492) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (494) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (496) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((574 ("e"))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (530 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (531) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((590 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (533 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (534) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH))) :WORD-FORMS (((PH) ((590 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (536 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (537) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((590 (""))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 (""))) ((591 ("")))) ((PH) ((592 ("er"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 ("")))) ((PH) ((593 ("est"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((593 ("est"))) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (539 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (540) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((590 (""))))) :WORD-FORMS (((PH) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 (""))) ((591 ("")))) ((PH) ((592 ("er"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")) (574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en")) (590 ("")))) ((PH) ((593 ("est"))) ((558 ("er")) (559 ("en")) (560 ("em")) (561 ("en")) (562 ("e")) (563 ("er")) (564 ("er")) (565 ("e")) (566 ("es")) (567 ("en")) (568 ("em")) (569 ("es")) (570 ("e")) (571 ("er")) (572 ("en")) (573 ("e")))) ((PH) ((593 ("est"))) ((574 ("e")) (575 ("en")) (576 ("en")) (577 ("en")) (578 ("e")) (579 ("en")) (580 ("en")) (581 ("e")) (582 ("e")) (583 ("en")) (584 ("en")) (585 ("e")) (586 ("en")) (587 ("en")) (588 ("en")) (589 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (542 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (543) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((590 ("") (""))))) :WORD-FORMS (((PH) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") (""))) ((591 ("") ("")))) ((PH) ((592 ("er") ("er"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") ("")))) ((PH) ((593 ("st") ("est"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")))) ((PH) ((593 ("st") ("est"))) ((574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (545 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (546) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (545 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (548) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((590 ("") (""))))) :WORD-FORMS (((PH) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") (""))) ((591 ("") ("")))) ((PH) ((592 ("er") ("er"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")) (574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en")) (590 ("") ("")))) ((PH) ((593 ("") ("st"))) ((558 ("er") ("er")) (559 ("en") ("en")) (560 ("em") ("em")) (561 ("en") ("en")) (562 ("e") ("e")) (563 ("er") ("er")) (564 ("er") ("er")) (565 ("e") ("e")) (566 ("es") ("es")) (567 ("en") ("en")) (568 ("em") ("em")) (569 ("es") ("es")) (570 ("e") ("e")) (571 ("er") ("er")) (572 ("en") ("en")) (573 ("e") ("e")))) ((PH) ((593 ("") ("st"))) ((574 ("e") ("e")) (575 ("en") ("en")) (576 ("en") ("en")) (577 ("en") ("en")) (578 ("e") ("e")) (579 ("en") ("en")) (580 ("en") ("en")) (581 ("e") ("e")) (582 ("e") ("e")) (583 ("en") ("en")) (584 ("en") ("en")) (585 ("e") ("e")) (586 ("en") ("en")) (587 ("en") ("en")) (588 ("en") ("en")) (589 ("en") ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (550 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (551) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (550 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (553) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (550 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (555) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s" "es")) (635 ("" "e")) (636 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (594 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (595) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (597 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (598) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("")) (680 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (600 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (601) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s" "es")) (635 ("" "e")) (636 ("")))) ((PH) ((681 ("en")) (682 ("en")) (683 ("en")) (684 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (603 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (604) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((633 ("") (""))))) :WORD-FORMS (((PH) ((633 ("") ("")) (634 ("es") ("s" "es")) (635 ("" "e") ("" "e")) (636 ("") ("")))) ((PH) ((685 ("er") ("er")) (686 ("er") ("er")) (687 ("ern") ("ern")) (688 ("er") ("er"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (606 . 1) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (607) :WFHISTORY NIL) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (606 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (609) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((637 (""))))) :WORD-FORMS (((PH) ((637 ("")) (638 ("s")) (639 ("")) (640 ("")))) ((PH) ((689 ("s")) (690 ("s")) (691 ("s")) (692 ("s"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (611 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (612) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((641 (""))))) :WORD-FORMS (((PH) ((641 ("")) (642 ("en")) (643 ("en")) (644 ("en")))) ((PH) ((681 ("en")) (682 ("en")) (683 ("en")) (684 ("en"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (614 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (615) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((673 ("e")) (674 ("e")) (675 ("en")) (676 ("e"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (617 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (618) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("n")) (680 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (620 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (621) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((681 ("n")) (682 ("n")) (683 ("n")) (684 ("n"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (623 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (624) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((645 (""))))) :WORD-FORMS (((PH) ((645 ("")) (646 ("")) (647 ("")) (648 ("")))) ((PH) ((689 ("s")) (690 ("s")) (691 ("s")) (692 ("s"))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (626 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (627) :WFHISTORY NIL) #S(C-IRULE :ENTRIES NIL :CITATION-FORMS (((PH) ((633 (""))))) :WORD-FORMS (((PH) ((633 ("")) (634 ("s")) (635 ("")) (636 ("")))) ((PH) ((677 ("")) (678 ("")) (679 ("")) (680 (""))))) :TARGET-OF NIL :EC-SOURCE-MATCHES (ROOT)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (629 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (630) :WFHISTORY NIL) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL #S(C-PWFRULE :TARGET-IRULE 480 :TARGET-UIFS ((529) (498)) :ENTRY-CONSTRAINTS (#S(EC :WFF-NAS NIL :ENTRY-NAS (((NIL ((|RIRule| |No-Detachable-Prefix|))) NIL NIL ((2 ("5nder"))) NIL)) :SOURCE-MATCHES ((483 ((2 482)) NIL NIL)) :ENTRY 708)) :MATCHED-SOURCE-IRULES (384)) ((|ICat| . |Detachable-Prefix|)) ((|ICat| . |V-Stem|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (480 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (706 707) :WFHISTORY (705 483)) #S(C-PWFRULE :TARGET-IRULE 436 :TARGET-UIFS ((479) (448)) :ENTRY-CONSTRAINTS (#S(EC :WFF-NAS NIL :ENTRY-NAS (((NIL ((|IIRule| |No-Detachable-Prefix|))) NIL NIL ((2 ("b#ei#ss"))) NIL)) :SOURCE-MATCHES ((439 ((2 438)) NIL NIL)) :ENTRY 712)) :MATCHED-SOURCE-IRULES (385)) ((|ICat| . |Detachable-Prefix|)) ((|ICat| . |V-Stem|)) #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (436 . 0) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (710 711) :WFHISTORY (709 439)) #S(C-PWFRULE :TARGET-IRULE ? :TARGET-UIFS NIL :ENTRY-CONSTRAINTS (#S(EC :WFF-NAS NIL :ENTRY-NAS (((NIL ((|RIRule| |No-Detachable-Prefix|))) NIL NIL ((2 ("5nder"))) NIL)) :SOURCE-MATCHES ((483 ((2 482)) NIL 481)) :ENTRY 715)) :MATCHED-SOURCE-IRULES (386)) NIL #S(C-ENTRY :DEPENDENT-ENTRIES NIL :CF-DELETED-FORMS NIL :P-DELETED-FORMS NIL :IRULE (481 . 3) :CF-REPLACEMENTS NIL :P-REPLACEMENTS NIL :IUIFS (714) :WFHISTORY (713 483)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (:IUIF (631)) (:IUIF (631)) (:FSIF (50 61 66 69 74 77 80 85 91 128 158 181 392 433 436 437 480 481 533 536 539 542 545 550 594 597 600 603 606 611 614 617 620 623 626 629)) (:IUIF (260) :FSIF (61 66 69 74 80 85 91 128 158 181 392 530 539 542 545 550 594 603 606 629)) (:FSIF (61 66 69 74 77 80 85 91 128 158 181 594 597 600 603 606 611 626 629)) (:FSIF (61 66 69 74 85 88 91 128 158 181 392 433 436 437 480 481 530 539 542 545 550 594 597 603 606 617 629)) (:FSIF (61 66 69 74 85 88 91 128 158 181 433 436 437 480 481 594 597 600 603 614 617 620 623 629)) (:IUIF (628)) (:IUIF (625)) (:IUIF (625)) (:IUIF (625)) (:FSIF (61 66 69 74 80 85 88 91 128 158 181 392 433 436 437 480 481 530 539 542 545 550 594 597 603 614 617 623)) (:IUIF (622)) (:IUIF (622)) (:IUIF (619)) (:IUIF (619)) (:IUIF (616)) (:IUIF (613)) (:IUIF (608)) (:IUIF (610)) (:IUIF (610)) (:FSWFF (713) :IUIF (250) :FSIF (61 66 69 74 85 88 91 128 158 181 392 530 539 542 545 550 606)) (:FSIF (606)) (:IUIF (605)) (:IUIF (602)) (:IUIF (602)) (:IUIF (602)) (:IUIF (602)) (:IUIF (599)) (:IUIF (596)) (:IUIF (552)) (:IUIF (552)) (:IUIF (552)) (:IUIF (552)) (:IUIF (554)) (:IUIF (554)) (:IUIF (554)) (:IUIF (554)) (:IUIF (556)) (:IUIF (556)) (:IUIF (556)) (:FSIF (61 66 69 74 80 85 91 128 158 181 392 530 539 542 545 550)) (:FSIF (539 542 545 550)) (:FSIF (433 436 437 480 481 539 542 545 550)) (:FSIF (433 436 437 480 481 539 542 545 550)) (:FSIF (433 436 437 480 481 539 542 545 550)) (:IUIF (547)) (:IUIF (547)) (:IUIF (549)) (:IUIF (544)) (:IUIF (544)) (:IUIF (541)) (:IUIF (541)) (:IUIF (538)) (:IUIF (535)) (:IUIF (532)) (:IUIF (715)) (:IUIF (708 483)) (:IUIF (483)) (:IUIF (485)) (:IUIF (485)) (:IUIF (485)) (:IUIF (485)) (:IUIF (487)) (:IUIF (487)) (:IUIF (487)) (:IUIF (487)) (:IUIF (489)) (:IUIF (489)) (:IUIF (489)) (:IUIF (491)) (:IUIF (491)) (:IUIF (493)) (:IUIF (493)) (:IUIF (495)) (:IUIF (495)) (:IUIF (497)) (:IUIF (497)) (:IUIF (497)) (:FSIF (433 436 437 480 481)) (:FSIF (433 436 437 480 481)) (:FSIF (480 481)) (:FSIF (433 436 437 480 481)) (:FSIF (480 481)) (:FSIF (433 436 437 480 481)) (:FSIF (480 481)) (:FSIF (433 436 437 480 481)) (:FSIF (480 481)) (:FSIF (433 436 437 480 481)) (:FSIF (480 481)) (:FSIF (433 436 437 480 481)) (:FSWFF (705 709) :IUIF (708)) (:IUIF (712 439)) (:IUIF (712 439)) (:IUIF (441)) (:IUIF (441)) (:IUIF (441)) (:IUIF (441)) (:IUIF (443)) (:IUIF (443)) (:IUIF (443)) (:IUIF (443)) (:IUIF (445)) (:IUIF (445)) (:IUIF (445)) (:IUIF (445)) (:IUIF (447)) (:IUIF (265 447)) (:IUIF (447)) (:IUIF (447)) (:IUIF (447)) (:IUIF (447)) (:FSIF (433 436 437)) (:FSWFF (705 709) :IUIF (10 712)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (435)) (:IUIF (106 101 145 139 428 418 413)) (:IUIF (423 413)) (:IUIF (111 101 151 139 423 413)) (:IUIF (116 101 139 428 413)) (:IUIF (116 106 157 145 428 418)) (:IUIF (111 151 423)) (:FSWFF (705 709) :IUIF (68 394)) (:IUIF (240)) (:IUIF (202 240)) (:IUIF (202 240)) (:IUIF (202 240)) (:IUIF (245)) (:IUIF (206 245)) (:IUIF (206 245)) (:IUIF (206 245)) (:IUIF (218 210 260 250)) (:IUIF (260 250)) (:IUIF (250)) (:IUIF (275 255)) (:IUIF (230 214 275 255)) (:IUIF (197 191 270 255)) (:IUIF (193 222 265)) (:IUIF (222 265)) (:IUIF (195 226 270)) (:IUIF (226 270)) (:IUIF (275)) (:IUIF (230 218 214 210)) (:IUIF (234)) (:IUIF (183)) (:IUIF (185)) (:IUIF (189 187)) (:IUIF (193)) (:IUIF (195)) (:FSIF (61 66 69 74 85 91 128 158 181)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (180)) (:IUIF (160)) (:IUIF (162)) (:IUIF (111 101 151 139)) (:IUIF (116 106 157 145)) (:IUIF (157 145)) (:IUIF (157)) (:IUIF (132 130)) (:IUIF (122)) (:IUIF (127 122)) (:IUIF (122)) (:IUIF (122)) (:IUIF (127)) (:IUIF (93)) (:IUIF (95)) (:IUIF (95)) (:IUIF (90)) (:IUIF (87)) (:IUIF (82)) (:IUIF (84)) (:IUIF (79)) (:IUIF (76)) (:IUIF (71)) (:IUIF (73)) (:IUIF (63)) (:IUIF (65)) (:IUIF (52)) (:IUIF (54)) (:IUIF (56)) (:IUIF (58)) (:IUIF (60)) (:IUIF (44)) (:IUIF (46)) (:IUIF (48)) (:FSWFF (705 709) :IUIF (12)) (:FSWFF (705 709) :IUIF (14)) (:FSWFF (705 709) :IUIF (16)) (:FSWFF (705 709 713) :IUIF (18)) (:IUIF (20)) (:FSWFF (705 709 713) :IUIF (22)) (:IUIF (24)) (:IUIF (26)) (:IUIF (28)) (:FSWFF (705 709 713) :IUIF (30)) (:FSWFF (705 709 713) :IUIF (32)) (:FSWFF (705 709 713) :IUIF (34)) (:IUIF (36)) (:FSWFF (705 709) :IUIF (38)) (:FSWFF (705 709) :IUIF (6 40)) (:IUIF (2)) (:IUIF (4)) (:FSWFF (705 709 713)) (:FSWFF (713)) (:FSWFF (713)) (:FSWFF (713)) (:FSWFF (713)) (:FSWFF (713)) (:FSWFF (705 709)) (:FSWFF (705 709)) (:FSWFF (705 709)) (:FSWFF (705 709)) (:FSWFF (705 709)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :I-UNIT-SEQUENCES #(NIL (2) (44) (1 4) (56 59) (63) (98) (101) (104) NIL (56) (63) (59 63) (63) NIL (98) (63) (63) (63) (63) (63) (98) (44) (44) (44) (44) (63) (2 44 63) (63) (2 44 63) (1 4) (1 4) (1 4) (1 4) (1 4) (1 4) (1 4) (1 4) (1 4) (1 4 63) (1 4 63) (1 4 63) (2 44 1 4 56 59 63) (2 44 1 4 56 63) (2 44 56 59 63) (2 44 56 59 63) (2 44 56 59 63) (2 44 56 59 63) (2 44 56 59 63) (2 44 56 59 63) (2 44 56 59 63) (1 4) (1 4) NIL NIL NIL NIL NIL NIL NIL NIL (44) (44) (98) (63) (63) (59) (59) (63) (63) (104) (63) (63) (63) (56) (44) (63) (1 4) (63) (2) NIL (2) (2) (63) (101) (63) (63) (2) (63) (63) (4) (1 4) (1) (1 4) (1 4) (2) (2) (2) (2) (2) (2 63) (63) (63) (63) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) NIL NIL NIL NIL NIL NIL NIL NIL NIL (44) (44) (44) (44) (44) (44) NIL (1) (1) (98) (101) (104) NIL (2) (2) (44) (4) (4) (4) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (63) (59) (56) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :WF-UNIT-SEQUENCES #(NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) (20) NIL NIL NIL NIL NIL NIL NIL (20) (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL (20) (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (20) (20) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :WF-PROP-ATTRIBUTES NIL) :WFRULE-SUBTREES ((20 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728 727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL NIL NIL NIL NIL NIL NIL (746 745 744 743 742 741 740 739 738 737 736 735 734 733 732 731 730 729 728) (727 726 725 724 723 722 721 720 719 718 717 716) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (709 705) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (713) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (709) (705) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((21 . 713) (34 . 709) (33 . 705)) :NODE-FORMATIVE-ALIST ((36 716 717 718 719 720 721 722 723 724 725 726 727) (37 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL))) :IRULE-SUBTREES ((2 . #S(SUBTREE :IX-SEQUENCES #(NIL (704 703 702 701 700 699 698 697 696 695 694 693 692 691 690 689 688 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673 672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633 632) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (700 699 698 697 660 659 658 657 656 655 654 653 652 651 650 649) NIL (704 703 702 701 672 671 670 669 668 667 666 665 664 663 662 661) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633) (704 703 702 701 700 699 698 697 696 695 694 693 692 691 690 689 688 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673) (664 663 662 661 652 651 650 649) (668 667 666 665 656 655 654 653) (672 671 670 669 660 659 658 657) (701 697 693 689 685 681 677 673 669 665 661 657 653 649 645 641 637 633) (702 698 694 690 686 682 678 674 670 666 662 658 654 650 646 642 638 634) (703 699 695 691 687 683 679 675 671 667 663 659 655 651 647 643 639 635) (704 700 696 692 688 684 680 676 672 668 664 660 656 652 648 644 640 636) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (696 695 694 693) NIL (632) (704 703 702 701 700 699 698 697 696 695 694 693 692 691 690 689 688 687 686 685 684 683 682 681 680 679 678 677 676 675 674 673 672 671 670 669 668 667 666 665 664 663 662 661 660 659 658 657 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 641 640 639 638 637 636 635 634 633) NIL NIL NIL NIL (632) NIL NIL NIL NIL NIL NIL NIL (676 675 674 673) (684 683 682 681 644 643 642 641) (688 687 686 685) (636 635 634 633) (692 691 690 689 640 639 638 637) (680 679 678 677 648 647 646 645) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((34 . 629) (28 . 626) (27 . 623) (26 . 620) (25 . 617) (24 . 614) (23 . 611) (22 . 606) (20 . 603) (16 . 600) (11 . 597) (9 . 594)) :NODE-FORMATIVE-ALIST ((40 632) (42 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672) (43 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (44 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL (593 592 591 590 589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574 573 572 571 570 569 568 567 566 565 564 563 562 561 560 559 558 557) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (591) (592) (593) (590) NIL (573 572 571 570 569 568 567 566 565 564 563 562 561 560 559 558) NIL (589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (585 584 583 582 581 580 579 578 577 576 575 574 569 568 567 566 565 564 563 562 561 560 559 558) (589 588 587 586 573 572 571 570) (577 576 575 574 561 560 559 558) (581 580 579 578 565 564 563 562) (585 584 583 582 569 568 567 566) (586 582 578 574 570 566 562 558) (587 583 579 575 571 567 563 559) (588 584 580 576 572 568 564 560) (589 585 581 577 573 569 565 561) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (557) (590 589 588 587 586 585 584 583 582 581 580 579 578 577 576 575 574 573 572 571 570 569 568 567 566 565 564 563 562 561 560 559 558) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (593 592 591) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((51 . 550) (45 . 545) (46 . 542) (47 . 539) (48 . 536) (49 . 533) (111 . 530)) :NODE-FORMATIVE-ALIST ((52 557) (53 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590) (54 591 592 593)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (1 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL (529 528 527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499 498) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (499) (511 510 509 508 507 506 505 504 503 502 501 500) (517 516 515 514 513 512) (523 522 521 520 519 518) (525 524) (527 526) (526 517 516 515 514 513 512 505 504 503 502 501 500 499) (523 522 521 520 519 518 511 510 509 508 507 506) (527) (521 518 515 512 509 506 503 500) (525 524 522 519 516 513 510 507 504 501) (523 520 517 514 511 508 505 502) (524 520 519 518 514 513 512 508 507 506 502 501 500) (525 523 522 521 517 516 515 511 510 509 505 504 503) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (529) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (528) (529 528 527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499 498) (498) (527 526 525 524 523 522 521 520 519 518 517 516 515 514 513 512 511 510 509 508 507 506 505 504 503 502 501 500 499) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((19 . 481) (10 . 480)) :NODE-FORMATIVE-ALIST ((6 498) (7 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527) (3 528) (12 529)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (4 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL (479 478 477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449 448) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (449) (461 460 459 458 457 456 455 454 453 452 451 450) (467 466 465 464 463 462) (473 472 471 470 469 468) (475 474) (477 476) (476 467 466 465 464 463 462 455 454 453 452 451 450 449) (473 472 471 470 469 468 461 460 459 458 457 456) (477) (471 468 465 462 459 456 453 450) (475 474 472 469 466 463 460 457 454 451) (473 470 467 464 461 458 455 452) (474 470 469 468 464 463 462 458 457 456 452 451 450) (475 473 472 471 467 466 465 461 460 459 455 454 453) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (479) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (479 478 477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449 448) (478) NIL (448) (477 476 475 474 473 472 471 470 469 468 467 466 465 464 463 462 461 460 459 458 457 456 455 454 453 452 451 450 449) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((5 . 437) (17 . 436) (21 . 433)) :NODE-FORMATIVE-ALIST ((13 448) (14 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477) (15 478) (18 479)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (56 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL (432 431 430 429) NIL NIL NIL NIL NIL (432 431 430 429) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (429) (430) (431) (432) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (432 431 430 429) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((57 . 408)) :NODE-FORMATIVE-ALIST ((58 429 430 431 432)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (59 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL (407 406 405 404 403 402 401 400 399 398 397 396 395) NIL NIL NIL NIL NIL NIL NIL (407 406 405 404 403 402 401 400 399 398 397 396 395) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (399 398 397 396) (403 402 401 400) (407 406 405 404) (404 400 396) (405 401 397) (406 402 398) (407 403 399) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (395) (407 406 405 404 403 402 401 400 399 398 397 396) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((60 . 392)) :NODE-FORMATIVE-ALIST ((61 395) (62 396 397 398 399 400 401 402 403 404 405 406 407)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (63 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL NIL (391 390 389 388 387 386 385 384 383 382 381 380 379 378 377 376 375 374 373 372 371 370 369 368 367 366 365 364 363 362 361 360 359 358 357 356 355 354 353 352 351 350 349 348 347 346 345 344 343 342 341 340 339 338 337 336 335 334 333 332 331 330 329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309 308 307 306 305 304 303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 288 287 286 285 284 283 282 281 280 279 278 277 276) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (383) (329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309) (382 381 380 379 378 377 376 375 374 373 372 371 370 369 368 367) (366 365 364 363 362 361 360 359 358 357 356 355 354 353 352 351) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (378 377 376 375 374 373 372 371 370 369 368 367 362 361 360 359 358 357 356 355 354 353 352 351 346 345 344 343 342 341 340 339 338 337 336 335 334 333 332 331 330 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309 299 298 297 296 295 294 293 292 291 290 289 288) (382 381 380 379 366 365 364 363 350 349 348 347 329 328 327 326 303 302 301 300) (370 369 368 367 354 353 352 351 335 334 333 332 331 330 314 313 312 311 310 309 291 290 289 288) (374 373 372 371 358 357 356 355 339 338 337 336 318 317 316 315 295 294 293 292) (378 377 376 375 362 361 360 359 346 345 344 343 342 341 340 325 324 323 322 321 320 319 299 298 297 296) (388 384 379 375 371 367 363 359 355 351 347 341 340 336 331 330 326 320 319 315 310 309 304 300 296 292 288 283 276) (389 385 380 376 372 368 364 360 356 352 348 343 342 337 333 332 327 322 321 316 312 311 305 301 297 293 289 285 284 280 277) (390 386 381 377 373 369 365 361 357 353 349 344 338 334 328 323 317 313 306 302 298 294 290 286 281 278) (391 387 382 378 374 370 366 362 358 354 350 346 345 339 335 329 325 324 318 314 307 303 299 295 291 287 282 279) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (284) (287 286 283) NIL NIL (303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 288) (285) NIL (387 386 385 384) (391 390 389 388) (350 349 348 347 346 345 344 343 342 341 340 339 338 337 336 335 334 333 332 331 330) NIL NIL (287 286 285 284 283) NIL (303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 288 287 286 285 284 283) NIL NIL NIL NIL (279 278 277 276) NIL (308) (391 390 389 388 387 386 385 384 383 382 381 380 379 378 377 376 375 374 373 372 371 370 369 368 367 366 365 364 363 362 361 360 359 358 357 356 355 354 353 352 351 350 349 348 347 346 345 344 343 342 341 340 339 338 337 336 335 334 333 332 331 330 329 328 327 326 325 324 323 322 321 320 319 318 317 316 315 314 313 312 311 310 309) NIL (282 281 280) (307 306 305 304) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (345 340 330 324 319 309) (343 333 322 312) (331 310) (346 342 341 332 325 321 320 311) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((64 . 235) (65 . 198) (66 . 181) (70 . 163) (69 . 158) (68 . 133) (74 . 128) (73 . 117) (72 . 96) (84 . 91) (83 . 88) (82 . 85) (81 . 80) (80 . 77) (79 . 74) (78 . 69) (77 . 66) (76 . 61) (85 . 50)) :NODE-FORMATIVE-ALIST ((86 276 277 278 279) (87 280 281 282) (88 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303) (89 304 305 306 307) (90 308) (92 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329) (110 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350) (93 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366) (94 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382) (95 383) (96 384 385 386 387) (97 388 389 390 391)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (98 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL NIL NIL (49) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (49) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((99 . 42)) :NODE-FORMATIVE-ALIST ((100 49)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (101 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL NIL NIL NIL (41) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (41) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((102 . 8)) :NODE-FORMATIVE-ALIST ((103 41)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL)) (104 . #S(SUBTREE :IX-SEQUENCES #(NIL NIL NIL NIL NIL NIL NIL NIL (7) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL (7) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :NODE-RULE-ALIST ((105 . 0)) :NODE-FORMATIVE-ALIST ((106 7)) :COMPILE-STATE :TRANSACTED :APPLY-SRULES-P NIL))) :IRULES-TO-DELETE NIL :WFRULES-TO-DELETE NIL :ELEMENTS-TO-DELETE NIL :IX-SEQS-TO-DELETE NIL :COPY-ATTRIBUTES-P T :IRULES-TO-REAPPLY-ISRULES 0)) :PM-DEFINER #[DEFINITION ( :IDIOM #[GLOBAL-STRUCTURE ( :TRANS #[OBJECT-HASH ( :COLLECTION #]((VV-INVERSION #S(TRANSFORMATION :LHS (VP V-1 V-2) :RHS (VP V-2 V-1) :INDEXED (VP 2 1))) (PPV-INVERSION #S(TRANSFORMATION :LHS (VP PP V) :RHS (VP V PP) :INDEXED (VP 2 1)))) #'EQL :TYP EQL) :KEY-WORDS #[OBJECT-HASH ( :COLLECTION #]((INF . #S(FEATURE :POS (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG (#\N))) (PP . #S(FEATURE :POS (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG (#\N)))) #'EQL :TYP EQL) :VERB-RULES #[OBJECT-HASH ( :COLLECTION #]((AUXILIARY-PERFECT #S(VERBRULE :FIRST #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Pres|))) :NOT-FEATURES (NIL)) :SECOND #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NOT-FEATURES (#\N)) :RESULT #S(RULESIDE :FEATURES ((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Perf|)) :NOT-FEATURES NIL) :POSITION 1 :CITFORM 2 :PERCOLATION 1) #S(VERBRULE :FIRST #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Impf|))) :NOT-FEATURES (NIL)) :SECOND #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NOT-FEATURES (#\N)) :RESULT #S(RULESIDE :FEATURES ((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Plusq|)) :NOT-FEATURES NIL) :POSITION 1 :CITFORM 2 :PERCOLATION 1)) (AUXILIARY-FUTURE #S(VERBRULE :FIRST #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Pres|))) :NOT-FEATURES (NIL)) :SECOND #S(RULESIDE :FEATURES (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NOT-FEATURES (#\N)) :RESULT #S(RULESIDE :FEATURES ((|Cat| . V) (|Mod| . |Ind|) (|Temp| . |Fut|)) :NOT-FEATURES NIL) :POSITION 1 :CITFORM 2 :PERCOLATION 1))) #'EQL :TYP EQL) :KEY-COLLECTION #[COLLECTION-HASH ( :COLLECTION #](("das" . #S(KEY :VERB-LIST NIL :PRIMARY-LIST NIL :SECONDARY-LIST (0))) ("werden" . #S(KEY :VERB-LIST (2) :PRIMARY-LIST NIL :SECONDARY-LIST NIL)) ("beissen" . #S(KEY :VERB-LIST NIL :PRIMARY-LIST NIL :SECONDARY-LIST (0))) ("gras" . #S(KEY :VERB-LIST NIL :PRIMARY-LIST NIL :SECONDARY-LIST (0))) ("haben" . #S(KEY :VERB-LIST (0) :PRIMARY-LIST NIL :SECONDARY-LIST NIL)) ("sein" . #S(KEY :VERB-LIST (1) :PRIMARY-LIST NIL :SECONDARY-LIST NIL)) ("in" . #S(KEY :VERB-LIST NIL :PRIMARY-LIST (0) :SECONDARY-LIST (0)))) #'EQUAL :TYP EQUAL) :ORTHOGONAL #[CLASS-ORTH ( :FIRST-HORIZONTAL #[COLLECTION-HASH ( :COLLECTION #]((VP (VP PP+V |[Prep+NP]+V|)) (|[Prep+NP]+V| (VP PP+V |[Prep+NP]+V|)) (PP+V (VP PP+V |[Prep+NP]+V|))) #'EQUAL :TYP EQUAL) :FIRST-VERTICAL #[COLLECTION-HASH ( :COLLECTION #](((VP PP+V |[Prep+NP]+V|) . #S(PHCLASS :TREE (VP (PP |Pep| NP) V) :MOD (#S(MODIFICATION :SYM V :NTH 1 :MOD (R))) :TRANS (PPV-INVERSION) :NODE 136 :EXAMPLES (0) :ENTRIES NIL))) #'EQUAL :TYP EQUAL) :SECOND-HORIZONTAL #[COLLECTION-HASH ( :COLLECTION #]((|Auxiliary| (|Auxiliary| |Perfect|) (|Auxiliary| |Future|)) (|Future| (|Auxiliary| |Future|)) (|Perfect| (|Auxiliary| |Perfect|))) #'EQUAL :TYP EQUAL) :SECOND-VERTICAL #[COLLECTION-HASH ( :COLLECTION #](((|Auxiliary| |Future|) . #S(PECLASS :TREE (VP V V) :MOD (#S(MODIFICATION :SYM V :NTH 1 :MOD (R))) :TRANS (VV-INVERSION) :NODE 140 :EXAMPLES (2) :ENTRIES NIL :PERIPH (AUXILIARY-FUTURE))) ((|Auxiliary| |Perfect|) . #S(PECLASS :TREE (VP V V) :MOD (#S(MODIFICATION :SYM V :NTH 1 :MOD (R))) :TRANS (VV-INVERSION) :NODE 139 :EXAMPLES (0 1) :ENTRIES NIL :PERIPH (AUXILIARY-PERFECT)))) #'EQUAL :TYP EQUAL)) :ORTHOGONAL-CLITIC #[CLITIC-ORTH ( :FIRST-HORIZONTAL #[COLLECTION-HASH ( :COLLECTION #]((|dem| (|Article| |dem| |Masc| |Full-Form|) (|Article| |dem| |Masc| |Clit-Form|) (|Article| |dem| |Neut| |Full-Form|) (|Article| |dem| |Neut| |Clit-Form|)) (|Auxiliary| (|Auxiliary| |haben|) (|Auxiliary| |sein|) (|Auxiliary| |werden|) (|Auxiliary| |worden|)) (|Full-Form| (|Prep| |Full-Form| |an|) (|Prep| |Full-Form| |in|) (|Prep| |Full-Form| |von|) (|Article| |das| |Full-Form|) (|Article| |den| |Full-Form|) (|Article| |der| |Full-Form|) (|Article| |dem| |Masc| |Full-Form|) (|Article| |dem| |Neut| |Full-Form|)) (|den| (|Article| |den| |Full-Form|) (|Article| |den| |Clit-Form|)) (|Conjunct| (|Conjunct| |zu|)) (|an| (|Prep| |Full-Form| |an|) (|Prep| |Clit-Form| |an|)) (|Article| (|Article| |das| |Full-Form|) (|Article| |das| |Clit-Form|) (|Article| |den| |Full-Form|) (|Article| |den| |Clit-Form|) (|Article| |der| |Full-Form|) (|Article| |der| |Clit-Form|) (|Article| |dem| |Masc| |Full-Form|) (|Article| |dem| |Masc| |Clit-Form|) (|Article| |dem| |Neut| |Full-Form|) (|Article| |dem| |Neut| |Clit-Form|)) (|haben| (|Auxiliary| |haben|)) (|Pron| (|Pron| |es-Full-Form|) (|Pron| |es-Clit-Form|)) (|zu| (|Conjunct| |zu|)) (|in| (|Prep| |Full-Form| |in|) (|Prep| |Clit-Form| |in|)) (|es-Full-Form| (|Pron| |es-Full-Form|)) (|es-Clit-Form| (|Pron| |es-Clit-Form|)) (|sein| (|Auxiliary| |sein|)) (|Masc| (|Article| |dem| |Masc| |Full-Form|) (|Article| |dem| |Masc| |Clit-Form|)) (|der| (|Article| |der| |Full-Form|) (|Article| |der| |Clit-Form|)) (|Clit-Form| (|Prep| |Clit-Form| |an|) (|Prep| |Clit-Form| |in|) (|Prep| |Clit-Form| |von|) (|Article| |das| |Clit-Form|) (|Article| |den| |Clit-Form|) (|Article| |der| |Clit-Form|) (|Article| |dem| |Masc| |Clit-Form|) (|Article| |dem| |Neut| |Clit-Form|)) (|das| (|Article| |das| |Full-Form|) (|Article| |das| |Clit-Form|)) (|Prep| (|Prep| |Full-Form| |an|) (|Prep| |Full-Form| |in|) (|Prep| |Full-Form| |von|) (|Prep| |Clit-Form| |an|) (|Prep| |Clit-Form| |in|) (|Prep| |Clit-Form| |von|)) (|werden| (|Auxiliary| |werden|)) (|von| (|Prep| |Full-Form| |von|) (|Prep| |Clit-Form| |von|)) (|worden| (|Auxiliary| |worden|)) (|Neut| (|Article| |dem| |Neut| |Full-Form|) (|Article| |dem| |Neut| |Clit-Form|))) #'EQUAL :TYP EQUAL) :FIRST-VERTICAL #[COLLECTION-HASH ( :COLLECTION #](((|Article| |dem| |Neut| |Full-Form|) . #S(CELEMENT :STRING "dem" :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Dat|)) :NEG NIL :NODE 28)) ((|Auxiliary| |werden|) . #S(CELEMENT :STRING "werden" :FEATURES ((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|)) :NEG NIL :NODE 24)) ((|Article| |der| |Clit-Form|) . #S(CELEMENT :STRING "r" :FEATURES NIL :NEG NIL :NODE 25)) ((|Article| |dem| |Neut| |Clit-Form|) . #S(CELEMENT :STRING "m" :FEATURES NIL :NEG NIL :NODE 28)) ((|Prep| |Clit-Form| |an|) . #S(CELEMENT :STRING "a" :FEATURES NIL :NEG NIL :NODE 17)) ((|Auxiliary| |worden|) . #S(CELEMENT :STRING "worden" :FEATURES ((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Part|) (|Temp| . |Perf|)) :NEG NIL :NODE 24)) ((|Prep| |Full-Form| |in|) . #S(CELEMENT :STRING "in" :FEATURES ((|Cat| . |Prep|)) :NEG NIL :NODE 16)) ((|Article| |den| |Full-Form|) . #S(CELEMENT :STRING "den" :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|)) :NEG NIL :NODE 6)) ((|Prep| |Clit-Form| |in|) . #S(CELEMENT :STRING "i" :FEATURES NIL :NEG NIL :NODE 17)) ((|Prep| |Full-Form| |von|) . #S(CELEMENT :STRING "von" :FEATURES ((|Cat| . |Prep|)) :NEG NIL :NODE 16)) ((|Article| |der| |Full-Form|) . #S(CELEMENT :STRING "der" :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . F) (|Num| . SG) (|Case| . |Dat|)) :NEG NIL :NODE 25)) ((|Auxiliary| |haben|) . #S(CELEMENT :STRING "haben" :FEATURES ((|Cat| . V) (|Aux| . |haben|) (|Mod| . |Inf|) (|Temp| . |Pres|)) :NEG NIL :NODE 24)) ((|Article| |dem| |Masc| |Full-Form|) . #S(CELEMENT :STRING "dem" :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . M) (|Num| . SG) (|Case| . |Dat|)) :NEG NIL :NODE 27)) ((|Prep| |Clit-Form| |von|) . #S(CELEMENT :STRING "vo" :FEATURES NIL :NEG NIL :NODE 17)) ((|Article| |dem| |Masc| |Clit-Form|) . #S(CELEMENT :STRING "m" :FEATURES NIL :NEG NIL :NODE 27)) ((|Conjunct| |zu|) . #S(CELEMENT :STRING "zu" :FEATURES ((|Cat| . |Conjunct|)) :NEG NIL :NODE 22)) ((|Article| |das| |Clit-Form|) . #S(CELEMENT :STRING "s" :FEATURES NIL :NEG NIL :NODE 4)) ((|Pron| |es-Clit-Form|) . #S(CELEMENT :STRING "’s" :FEATURES NIL :NEG NIL :NODE 21)) ((|Prep| |Full-Form| |an|) . #S(CELEMENT :STRING "an" :FEATURES ((|Cat| . |Prep|)) :NEG NIL :NODE 16)) ((|Pron| |es-Full-Form|) . #S(CELEMENT :STRING "es" :FEATURES ((|Cat| . |Pron|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N)) :NEG NIL :NODE 21)) ((|Auxiliary| |sein|) . #S(CELEMENT :STRING "sein" :FEATURES ((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|)) :NEG NIL :NODE 24)) ((|Article| |das| |Full-Form|) . #S(CELEMENT :STRING "das" :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Acc|)) :NEG NIL :NODE 4)) ((|Article| |den| |Clit-Form|) . #S(CELEMENT :STRING "n" :FEATURES NIL :NEG NIL :NODE 6))) #'EQUAL :TYP EQUAL) :SECOND-HORIZONTAL #[COLLECTION-HASH ( :COLLECTION #]((|zu+V-Separable| (|zu+V-Separable|)) (|Prep+Article| (|Prep+Article|)) (|zu+Complex_Inf| (|zu+Complex_Inf|)) (|Verb+es| (|Verb+es|))) #'EQUAL :TYP EQUAL) :SECOND-VERTICAL #[COLLECTION-HASH ( :COLLECTION #](((|zu+V-Separable|) . #S(CRULE :IXS (8) :SPECIAL-IXS NIL :NODE 19)) ((|Verb+es|) . #S(CRULE :IXS (7) :SPECIAL-IXS NIL :NODE 14)) ((|zu+Complex_Inf|) . #S(CRULE :IXS NIL :SPECIAL-IXS (0 1 2 3 4) :NODE 23)) ((|Prep+Article|) . #S(CRULE :IXS (0 1 2 3 4 5 6) :SPECIAL-IXS NIL :NODE 30))) #'EQUAL :TYP EQUAL) :ARR #[CLITICS-ARRAY ( :UPPER-BOUND 9 :FREE-LIST NIL :ARR #(#S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS ("an" "auf" "durch" "für" "hinter" "in" "über" "um" "unter" "vor") :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("s") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |das|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("das") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Acc|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS ("bei" "hinter" "über" "unter" "zu") :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("m") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |dem| |Masc|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("dem") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . M) (|Num| . SG) (|Case| . |Dat|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS ("bei" "hinter" "über" "unter" "zu") :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("m") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |dem| |Neut|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("dem") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Dat|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS ("hinter" "über" "unter") :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("n") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |den|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("den") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Num| . SG) (|Gender| . M) (|Case| . |Acc|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS ("zu") :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("r") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |der|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . |Prep|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("der") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . F) (|Num| . SG) (|Case| . |Dat|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(CELTINLIST :STRING ("a" "i" "vo") :FEATURES (NIL NIL NIL) :NEG NIL :MATCHING-PTR (|CElement| |Prep|) :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("m") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |dem| |Masc|) :SPECIAL-CL NIL)) :RESULTING (#S(CELTINLIST :STRING ("an" "in" "von") :FEATURES (((|Cat| . |Prep|)) ((|Cat| . |Prep|)) ((|Cat| . |Prep|))) :NEG NIL :MATCHING-PTR 0 :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("dem") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . M) (|Num| . SG) (|Case| . |Dat|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(CELTINLIST :STRING ("a" "i" "vo") :FEATURES (NIL NIL NIL) :NEG NIL :MATCHING-PTR (|CElement| |Prep|) :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("m") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Article| |dem| |Neut|) :SPECIAL-CL NIL)) :RESULTING (#S(CELTINLIST :STRING ("an" "in" "von") :FEATURES (((|Cat| . |Prep|)) ((|Cat| . |Prep|)) ((|Cat| . |Prep|))) :NEG NIL :MATCHING-PTR 0 :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("dem") :FEATURES (((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Dat|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH (".*[^esz]") :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("’s") :FEATURES (NIL) :NEG NIL :MATCHING-PTR (|CElement| |Pron|) :SPECIAL-CL NIL)) :RESULTING (#S(KWINLIST :FEATURES (((|Cat| . V))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("es") :FEATURES (((|Cat| . |Pron|) (|Pers| . |3rd|) (|Num| . SG) (|Gender| . N))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(CELTINLIST :STRING #\% :FEATURES NIL :NEG NIL :MATCHING-PTR NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL) (#S(CELTINLIST :STRING #\% :FEATURES NIL :NEG NIL :MATCHING-PTR 0 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL)))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :INDEX-ARRAY #(NIL)) :SPECIAL-ARRAY #[CLITICS-ARRAY ( :UPPER-BOUND 5 :FREE-LIST NIL :ARR #(#S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V) (|Aux| . |haben|) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL T) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL T) #S(CELTINLIST :STRING ("haben") :FEATURES (((|Cat| . V) (|Aux| . |haben|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR (|CElement| |Auxiliary|) :SPECIAL-CL T)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("haben") :FEATURES (((|Cat| . V) (|Aux| . |haben|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR 2 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL T) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL T) #S(CELTINLIST :STRING ("sein") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR (|CElement| |Auxiliary|) :SPECIAL-CL T)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("sein") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR 2 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL T) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL T) #S(CELTINLIST :STRING ("werden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR (|CElement| |Auxiliary|) :SPECIAL-CL T)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("werden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR 2 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL T) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL T) #S(CELTINLIST :STRING ("werden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR (|CElement| |Auxiliary|) :SPECIAL-CL T)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("werden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Inf|) (|Temp| . |Pres|))) :NEG NIL :MATCHING-PTR 2 :SPECIAL-CL NIL))) #S(ARRELT :MATCHING (#S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL T) #S(CELTINLIST :STRING ("worden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :MATCHING-PTR (|CElement| |Auxiliary|) :SPECIAL-CL T) #S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR (|CElement| |Conjunct|) :SPECIAL-CL T)) :RESULTING (#S(CELTINLIST :STRING ("zu") :FEATURES (((|Cat| . |Conjunct|))) :NEG NIL :MATCHING-PTR 2 :SPECIAL-CL NIL) #S(KWINLIST :FEATURES (((|Cat| . V) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :ELTS NIL :NOT-ELTS NIL :MATCH NIL :SPECIAL-CL NIL) #S(CELTINLIST :STRING ("worden") :FEATURES (((|Cat| . V) (|Aux| . |sein|) (|Mod| . |Part|) (|Temp| . |Perf|))) :NEG NIL :MATCHING-PTR 1 :SPECIAL-CL NIL))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :INDEX-ARRAY #(NIL))) :IDIOMS #[SENTENCES-TABLE ( :UPPER-BOUND 1 :FREE-LIST NIL :ARR #((#S(SENTENCE :PI-INVARIANT NIL :INVARIANTS ((0 1 2 3)) :OPEN-CHOICES NIL :WORDS #((#S(WORD :STRING ("in" "in") :FEATURES ((|Cat| . |Prep|)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) (#S(WORD :STRING ("das" "das") :FEATURES ((|Cat| . |Art|) (|Manner| . |Def|) (|Gender| . N) (|Num| . SG) (|Case| . |Acc|)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) (#S(WORD :STRING ("gras" "gras") :FEATURES ((|Cat| . N) (|Gender| . N) (|Num| . SG) (|Case| . |Acc|)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) (#S(WORD :STRING ("beissen" "beissen") :FEATURES (#\I (|Cat| . V)) :AGREEMENTS NIL :NEG (((|Form| . |Passive|))) :MODIFICATIONS (R) :CHECKED NIL)) NIL NIL NIL NIL NIL NIL) :TREE ((VP (PP (|Pep| "in") (NP "das" "gras")) (V "beissen")) (VP (PP (|Pep| 0) (NP 1 2)) (V 3))) :TRANSFORMATIONS (PPV-INVERSION) :CLASS 136)) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :INDEX-ARRAY #(((PH . 0) . "in das gras beissen ") NIL)) :VERBS #[SENTENCES-TABLE ( :UPPER-BOUND 3 :FREE-LIST NIL :ARR #((#S(VERB :PI-INVARIANT NIL :INVARIANTS ((0 1)) :OPEN-CHOICES NIL :WORDS #((#S(WORD :STRING ("haben" "haben") :FEATURES (#\I (|Cat| . V)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS (R) :CHECKED NIL)) (#S(WORD :STRING ("pp" NIL) :FEATURES ((|Cat| . V) (|Aux| . |haben|)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) NIL NIL NIL NIL NIL NIL NIL NIL) :TREE ((VP (V "haben") (V "pp")) (VP (V 0) (V 1))) :TRANSFORMATIONS (VV-INVERSION) :CLASS 139 :VERBS (AUXILIARY-PERFECT))) (#S(VERB :PI-INVARIANT NIL :INVARIANTS ((0 1)) :OPEN-CHOICES NIL :WORDS #((#S(WORD :STRING ("sein" "sein") :FEATURES (#\I (|Cat| . V)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS (R) :CHECKED NIL)) (#S(WORD :STRING ("pp" NIL) :FEATURES ((|Cat| . V) (|Aux| . |sein|)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) NIL NIL NIL NIL NIL NIL NIL NIL) :TREE ((VP (V "sein") (V "pp")) (VP (V 0) (V 1))) :TRANSFORMATIONS (VV-INVERSION) :CLASS 139 :VERBS (AUXILIARY-PERFECT))) (#S(VERB :PI-INVARIANT NIL :INVARIANTS ((0 1)) :OPEN-CHOICES NIL :WORDS #((#S(WORD :STRING ("werden" "werden") :FEATURES (#\I (|Cat| . V)) :AGREEMENTS NIL :NEG NIL :MODIFICATIONS (R) :CHECKED NIL)) (#S(WORD :STRING ("inf" NIL) :FEATURES NIL :AGREEMENTS NIL :NEG NIL :MODIFICATIONS NIL :CHECKED NIL)) NIL NIL NIL NIL NIL NIL NIL NIL) :TREE ((VP (V "werden") (V "inf")) (VP (V 0) (V 1))) :TRANSFORMATIONS (VV-INVERSION) :CLASS 140 :VERBS (AUXILIARY-FUTURE))) NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) :INDEX-ARRAY #(((PI . 0) . "haben pp ") ((PI . 1) . "sein pp ") ((PI . 2) . "werden inf ") NIL)) :SEPARABLE-KEYS NIL :CAT-SYMBOL |Cat| :NO-KEY-SYMBOLS NIL) :UNITS-TO-SAVE NIL) :LEX-DEPENDENCIES NIL :CF-GRAMMAR #[CF-GRAMMAR ( :CF-RULES (#[CF-WFRULE ( :CF-RULE-ACS (X4 X4) :CMKS-RULE-IX "R709" :ICONSTRAINTS (((IAF0 0) V0) ((IAF1 0) V0) ((IAF2 0) V0) ((IAF3 0) V-1) ((IAF4 0) V-1) ((IAF5 0) V-1)) :WFCONSTRAINTS (((WFAF0 1) V0)) :MTCONSTRAINTS (((MT 1) CANDIDATE) ((MT 0) PART)) :CMKS-IRULE-IX "R436") #[CF-WFRULE ( :CF-RULE-ACS (X3 X16) :CMKS-RULE-IX "R709" :ICONSTRAINTS NIL :WFCONSTRAINTS (((WFAF0 1) V1)) :MTCONSTRAINTS (((MT 0) PART)) :CMKS-IRULE-IX "R436") #[CF-WFRULE ( :CF-RULE-ACS (X4 X16 X4) :CMKS-RULE-IX "R713" :ICONSTRAINTS (((IAF0 0) (IAF0 2)) ((IAF1 0) (IAF1 2)) ((IAF2 0) (IAF2 2)) ((IAF3 0) (IAF3 2)) ((IAF4 0) (IAF4 2)) ((IAF5 0) (IAF5 2))) :WFCONSTRAINTS (((WFAF0 1) V0) ((WFAF0 2) V0) ((WFAF0 0) V0)) :MTCONSTRAINTS (((MT 2) CANDIDATE)) :CMKS-IRULE-IX 2) #[CF-WFRULE ( :CF-RULE-ACS (X8 X16 X8) :CMKS-RULE-IX "R713" :ICONSTRAINTS (((IAF0 0) (IAF0 2)) ((IAF1 0) (IAF1 2)) ((IAF2 0) (IAF2 2)) ((IAF3 0) (IAF3 2)) ((IAF4 0) (IAF4 2))) :WFCONSTRAINTS (((WFAF0 1) V0) ((WFAF0 2) V1) ((WFAF0 0) V1)) :MTCONSTRAINTS (((MT 2) CANDIDATE)) :CMKS-IRULE-IX 2) #[CF-WFRULE ( :CF-RULE-ACS (X8 X8) :CMKS-RULE-IX "R705" :ICONSTRAINTS (((IAF0 0) V0) ((IAF1 0) V0) ((IAF2 0) V-1) ((IAF3 0) V-1) ((IAF4 0) V-1)) :WFCONSTRAINTS (((WFAF0 1) V1)) :MTCONSTRAINTS (((MT 1) CANDIDATE) ((MT 0) PART)) :CMKS-IRULE-IX "R480") #[CF-WFRULE ( :CF-RULE-ACS (X7 X16) :CMKS-RULE-IX "R705" :ICONSTRAINTS NIL :WFCONSTRAINTS (((WFAF0 1) V1)) :MTCONSTRAINTS (((MT 0) PART)) :CMKS-IRULE-IX "R480") #[CF-IRULE ( :CF-RULE-ACS (X14) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF1 1) V0)) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF7 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF6 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF5 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF4 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF3 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF2 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF1 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X14 X15) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF0 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF3 1) V0)) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF14 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF13 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF12 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF11 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF10 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF9 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF8 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF2 1) (IAF7 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF1 1) (IAF0 2))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF6 2)) ((IAF6 2) (IAF2 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF1 2)) ((IAF1 2) (IAF2 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF0 2)) ((IAF0 2) (IAF2 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF3 2)) ((IAF3 2) (IAF2 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF2 2)) ((IAF2 2) (IAF2 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF5 2)) ((IAF5 2) (IAF1 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF2 2)) ((IAF2 2) (IAF1 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF3 2)) ((IAF3 2) (IAF1 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF0 2)) ((IAF0 2) (IAF1 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF1 2)) ((IAF1 2) (IAF1 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF4 2)) ((IAF4 2) (IAF0 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF3 2)) ((IAF3 2) (IAF0 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF2 2)) ((IAF2 2) (IAF0 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF1 2)) ((IAF1 2) (IAF0 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X11 X12 X13) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF0 1) (IAF0 2)) ((IAF0 2) (IAF0 3))) :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X8) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF4 1) V0)) :MTCONSTRAINTS (((MT 1) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X8 X10) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF3 1) (IAF1 2))) :MTCONSTRAINTS (((MT 1) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X9 X8 X10) :CMKS-RULE-IX 2 :ICONSTRAINTS (((IAF2 2) (IAF0 3))) :MTCONSTRAINTS (((MT 2) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X7 X8 X10) :CMKS-RULE-IX 2 :ICONSTRAINTS (((IAF1 2) (IAF1 3))) :MTCONSTRAINTS (((RULE 1) (RULE 2)) ((MT 0) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X7 X9 X8 X10) :CMKS-RULE-IX 3 :ICONSTRAINTS (((IAF0 3) (IAF0 4))) :MTCONSTRAINTS (((RULE 1) (RULE 3)) ((MT 0) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X4) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF5 1) V0)) :MTCONSTRAINTS (((MT 1) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X4 X6) :CMKS-RULE-IX 1 :ICONSTRAINTS (((IAF4 1) (IAF1 2))) :MTCONSTRAINTS (((MT 1) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X5 X4 X6) :CMKS-RULE-IX 2 :ICONSTRAINTS (((IAF3 2) (IAF0 3))) :MTCONSTRAINTS (((MT 2) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X3 X4) :CMKS-RULE-IX 2 :ICONSTRAINTS (((IAF2 2) V0)) :MTCONSTRAINTS (((RULE 1) (RULE 2)) ((MT 0) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X3 X4 X6) :CMKS-RULE-IX 2 :ICONSTRAINTS (((IAF1 2) (IAF1 3))) :MTCONSTRAINTS (((RULE 1) (RULE 2)) ((MT 0) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X3 X5 X4 X6) :CMKS-RULE-IX 3 :ICONSTRAINTS (((IAF0 3) (IAF0 4))) :MTCONSTRAINTS (((RULE 1) (RULE 3)) ((MT 0) CANDIDATE))) #[CF-IRULE ( :CF-RULE-ACS (X2) :CMKS-RULE-IX 1 :ICONSTRAINTS NIL :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X1) :CMKS-RULE-IX 1 :ICONSTRAINTS NIL :MTCONSTRAINTS NIL) #[CF-IRULE ( :CF-RULE-ACS (X0) :CMKS-RULE-IX 1 :ICONSTRAINTS NIL :MTCONSTRAINTS NIL)) :CF-TABLE #](((632 . 606) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 606 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("gras" . 610) . ENTRY) (("gr%s" . 610) . ENTRY) (("bild" . 608) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V4) (IAF1 V0)) :WFAFS NIL)) ((632 . 626) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 626 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("oma" . 628) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V10) (IAF1 V0)) :WFAFS NIL)) ((632 . 597) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 597 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("lehrling" . 599) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V1) (IAF1 V0)) :WFAFS NIL)) ((7 . 0) . #[CF-UIFG ( :CF-CAT X0 :UF-CAT-IX 7 :CMKS-IRULE-IX 0 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("zu" . 6) . ENTRY) (("dass" . 4) . ENTRY) (("und" . 2) . ENTRY)) :LCFS ((|Cat| . |Conjunct|)) :MTFS NIL :IAFS NIL :WFAFS NIL)) ((448 . 436) . #[CF-UIFG ( :CF-CAT X4 :UF-CAT-IX 448 :CMKS-IRULE-IX 436 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("beiss" . 439) . ENTRY) (("biss" . 439) . ENTRY)) :LCFS ((|Cat| . V) (|ICat| . |V-Irregular|)) :MTFS ((MT PART) (RULE MT)) :IAFS ((IAF0 V0) (IAF1 V0) (IAF2 V0) (IAF3 V-1) (IAF4 V-1) (IAF5 V-1)) :WFAFS NIL)) ((632 . 617) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 617 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("kraft" . 619) . ENTRY) (("kr%ft" . 619) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V7) (IAF1 V0)) :WFAFS NIL)) ((479 . 436) . #[CF-UIFG ( :CF-CAT X3 :UF-CAT-IX 479 :CMKS-IRULE-IX 436 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("an" . 729) . FSWF-FORMATIVE)) :LCFS ((|Cat| . V) (|ICat| . |V-Irregular|)) :MTFS ((MT PART) (RULE MT)) :IAFS NIL :WFAFS NIL)) ((557 . 530) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 530 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("link" . 532) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V-1) (IAF1 V0) (IAF2 V-1) (IAF3 V-1)) :WFAFS NIL)) ((632 . 620) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 620 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("mutter" . 622) . ENTRY) (("m#tter" . 622) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V8) (IAF1 V0)) :WFAFS NIL)) ((529 . 480) . #[CF-UIFG ( :CF-CAT X7 :UF-CAT-IX 529 :CMKS-IRULE-IX 480 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("ab" . 728) . FSWF-FORMATIVE)) :LCFS ((|Cat| . V) (|ICat| . |V-Regular|)) :MTFS ((MT PART) (RULE MT)) :IAFS NIL :WFAFS NIL)) ((498 . 480) . #[CF-UIFG ( :CF-CAT X8 :UF-CAT-IX 498 :CMKS-IRULE-IX 480 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("%nder" . 483) . ENTRY) (("%ndr" . 483) . ENTRY)) :LCFS ((|Cat| . V) (|ICat| . |V-Regular|)) :MTFS ((MT PART) (RULE MT)) :IAFS ((IAF0 V0) (IAF1 V0) (IAF2 V-1) (IAF3 V-1) (IAF4 V-1)) :WFAFS NIL)) ((498 . 481) . #[CF-UIFG ( :CF-CAT X8 :UF-CAT-IX 498 :CMKS-IRULE-IX 481 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("wend" . 497) . ENTRY) (("wand" . 497) . ENTRY) (("w%nd" . 497) . ENTRY) (("send" . 495) . ENTRY) (("sand" . 495) . ENTRY) (("renn" . 493) . ENTRY) (("rann" . 493) . ENTRY) (("nenn" . 491) . ENTRY) (("nann" . 491) . ENTRY) (("kenn" . 489) . ENTRY) (("kann" . 489) . ENTRY) (("kennt" . 489) . ENTRY) (("brenn" . 487) . ENTRY) (("brann" . 487) . ENTRY) (("brand" . 487) . ENTRY) (("br%nd" . 487) . ENTRY) (("hab" . 485) . ENTRY) (("ha" . 485) . ENTRY) (("hat" . 485) . ENTRY) (("h%t" . 485) . ENTRY) (("%nder" . 483) . ENTRY) (("%ndr" . 483) . ENTRY) (("ver%nder" . 715) . CENTRY) (("ver%ndr" . 715) . CENTRY)) :LCFS ((|Cat| . V) (|ICat| . |V-Regular|)) :MTFS ((MT CANDIDATE)) :IAFS ((IAF0 V-1) (IAF1 V-1) (IAF2 V0) (IAF3 V0) (IAF4 V0)) :WFAFS ((WFAF0 V1)))) ((632 . 623) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 623 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("blume" . 625) . ENTRY) (("blum" . 625) . ENTRY) (("bl#m" . 625) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V9) (IAF1 V0)) :WFAFS NIL)) ((49 . 42) . #[CF-UIFG ( :CF-CAT X2 :UF-CAT-IX 49 :CMKS-IRULE-IX 42 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("noch" . 48) . ENTRY) (("heute" . 46) . ENTRY) (("sehr" . 44) . ENTRY)) :LCFS ((|Cat| . |Adv|)) :MTFS NIL :IAFS NIL :WFAFS NIL)) ((632 . 611) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 611 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("deck" . 613) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V5) (IAF1 V0)) :WFAFS NIL)) ((448 . 437) . #[CF-UIFG ( :CF-CAT X4 :UF-CAT-IX 448 :CMKS-IRULE-IX 437 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("werd" . 447) . ENTRY) (("wir" . 447) . ENTRY) (("wird" . 447) . ENTRY) (("wurd" . 447) . ENTRY) (("w#rd" . 447) . ENTRY) (("word" . 447) . ENTRY) (("schlag" . 445) . ENTRY) (("schl%g" . 445) . ENTRY) (("schlug" . 445) . ENTRY) (("schl#g" . 445) . ENTRY) (("komm" . 443) . ENTRY) (("kam" . 443) . ENTRY) (("k%m" . 443) . ENTRY) (("k$mm" . 443) . ENTRY) (("geh" . 441) . ENTRY) (("ging" . 441) . ENTRY) (("gang" . 441) . ENTRY) (("g%ng" . 441) . ENTRY) (("beiss" . 439) . ENTRY) (("biss" . 439) . ENTRY)) :LCFS ((|Cat| . V) (|ICat| . |V-Irregular|)) :MTFS ((MT CANDIDATE)) :IAFS ((IAF0 V-1) (IAF1 V-1) (IAF2 V-1) (IAF3 V0) (IAF4 V0) (IAF5 V0)) :WFAFS ((WFAF0 V0)))) ((557 . 539) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 539 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("rund" . 541) . ENTRY) (("r#nd" . 541) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V0) (IAF1 V-1) (IAF2 V0) (IAF3 V0)) :WFAFS NIL)) ((632 . 614) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 614 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("mensch" . 616) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V6) (IAF1 V0)) :WFAFS NIL)) ((632 . 600) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 600 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("garten" . 602) . ENTRY) (("gart" . 602) . ENTRY) (("g%rten" . 602) . ENTRY) (("g%rt" . 602) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V2) (IAF1 V0)) :WFAFS NIL)) ((557 . 542) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 542 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("fad" . 544) . ENTRY) (("fade" . 544) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V1) (IAF1 V-1) (IAF2 V1) (IAF3 V0)) :WFAFS NIL)) ((557 . 545) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 545 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("gr#n" . 549) . ENTRY) (("alt" . 547) . ENTRY) (("%lt" . 547) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V2) (IAF1 V-1) (IAF2 V2) (IAF3 V0)) :WFAFS NIL)) ((632 . 603) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 603 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("staat" . 605) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V3) (IAF1 V0)) :WFAFS NIL)) ((557 . 533) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 533 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("quitt" . 535) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V-1) (IAF1 V-1) (IAF2 V-1) (IAF3 V0)) :WFAFS NIL)) ((557 . 536) . #[CF-UIFG ( :CF-CAT X11 :UF-CAT-IX 557 :CMKS-IRULE-IX 536 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("rosa" . 538) . ENTRY)) :LCFS ((|Cat| . A)) :MTFS NIL :IAFS ((IAF0 V-1) (IAF1 V-1) (IAF2 V-1) (IAF3 V0)) :WFAFS NIL)) ((632 . 594) . #[CF-UIFG ( :CF-CAT X14 :UF-CAT-IX 632 :CMKS-IRULE-IX 594 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("berg" . 596) . ENTRY)) :LCFS ((|Cat| . N)) :MTFS NIL :IAFS ((IAF0 V0) (IAF1 V0)) :WFAFS NIL)) ((41 . 8) . #[CF-UIFG ( :CF-CAT X1 :UF-CAT-IX 41 :CMKS-IRULE-IX 8 :UFG-STRING-ENTRY-TYPE-TRIPLES ((("zu" . 40) . ENTRY) (("vor" . 38) . ENTRY) (("von" . 36) . ENTRY) (("um" . 34) . ENTRY) (("unter" . 32) . ENTRY) (("#ber" . 30) . ENTRY) (("neben" . 28) . ENTRY) (("mit" . 26) . ENTRY) (("in" . 24) . ENTRY) (("hinter" . 22) . ENTRY) (("f#r" . 20) . ENTRY) (("durch" . 18) . ENTRY) (("bei" . 16) . ENTRY) (("aus" . 14) . ENTRY) (("auf" . 12) . ENTRY) (("an" . 10) . ENTRY)) :LCFS ((|Cat| . |Prep|)) :MTFS NIL :IAFS NIL :WFAFS NIL))) #'EQUAL :MT-TABLE #]((("die" "deren" "derer" "der" "die") 145) (("ihr" "euer" "euch" "euch") 270) (("der" "dessen" "dessen" "dem" "den") 139) (("meiner" "mir" "mich") 202) (("euer" "euch" "euch") 226) (("sie" "ihrer" "ihnen" "sie") 275) (("ihrer" "sich" "sich") 214 230) (("das" "dessen" "dem" "das") 111) (("sie" "ihrer" "ihr" "sie") 255) (("du" "deiner" "dir" "dich") 245) (("das" "des" "dem" "das") 423) (("der" "des" "dem" "den") 413) (("an" "beiss") 712) (("der" "dessen" "dem" "den") 101) (("die" "deren" "der" "die") 106) (("es" "seiner" "ihm" "es") 260) (("die" "deren" "den" "die") 116) (("ab" "%nder") 708) (("derjenige" "desjenigen" "demjenigen" "denjenigen" "diejenige" "derjenigen" "derjenigen" "diejenige" "dasjenige" "desjenigen" "demjenigen" "dasjenige" "diejenigen" "derjenigen" "derjenigen" "diejenigen") 180) (("er" "seiner" "ihm" "ihn") 250) (("einander" "einander" "einander") 234) (("die" "deren" "derer" "denen" "die") 157) (("das" "dessen" "dessen" "dem" "das") 151) (("ab" "%ndr") 708) (("deiner" "dir" "dich") 206) (("die" "der" "der" "die") 418) (("die" "der" "den" "die") 428) (("was" "wessen" "was" "was") 127) (("wer" "wessen" "wem" "wen") 122) (("wir" "unser" "uns" "uns") 265) (("an" "biss") 712) (("seiner" "sich" "sich") 210 218) (("ich" "meiner" "mir" "mich") 240) (("unser" "uns" "uns") 222)) #'EQUAL :CONVERSION-TABLE #]NIL #'EQUAL :SOURCE-IRULES-TABLE #]NIL #'EQUAL :TARGET-IRULES-TABLE #]NIL #'EQUAL :NEXT-WFRULES-TABLE #]NIL #'EQUAL :PREVIOUS-WFRULES-TABLE #]NIL #'EQUAL :LEXICAL-CATS (((|Cat| . |Conjunct|)) ((|Cat| . |Prep|)) ((|Cat| . |Adv|)) ((|Cat| . |Pron|)) ((|Cat| . |Art|) (|Manner| . |Indef|)) ((|Cat| . |Art|) (|Manner| . |Def|)) ((|Cat| . V) (|ICat| . |V-Irregular|)) ((|Cat| . V) (|ICat| . |V-Regular|)) ((|Cat| . A)) ((|Cat| . N))) :SUCCESSFULLY-COMPILED-P T))