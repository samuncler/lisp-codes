;; meta-point-patch.lisp;; Copyright © 1992, Apple Computer, Inc.;;;; Patch makes meta-. work for #~ symbols;;;; notinrom-u.lisp must have defined the NOTINROM package;; before this file can be loaded or compiled.(in-package :ccl)(let ((*warn-if-redefine* nil)      (*warn-if-redefine-kernel* nil))(defmethod ed-current-sexp ((w fred-mixin) &optional pos dont-skip &aux                            (buf (fred-buffer w)))  (multiple-value-bind (b e) (frec-get-sel (slot-value w 'frec))    (declare (fixnum b e))    (if (or (neq b e)            (setq e t b (buffer-current-sexp-start buf pos)))      (let* ((pkg (window-package w))             (*package* (if (null pkg) *package* (pkg-arg pkg)))             (size (buffer-size buf))             ch)        (when (and (or (eql #\# (buffer-char buf b))                       (and (eql #\' (buffer-char buf b))                            (< (1+ b) size)                            (eql #\# (buffer-char buf (1+ b)))                            (incf b)))                   (< (1+ b) size)                   (%str-member (setq ch (buffer-char buf (1+ b ))) "_$~"))          (multiple-value-bind             (symbol end-pos)            (ignore-errors             (if (eq ch #\~)               (with-open-stream (stream (make-instance 'buffer-stream                                           :buffer buf :start (+ b 2) :end e))                 (let ((sym (notinrom::read-trap-sym stream)))                   (ignore-errors                    (when (notinrom::trap-prefixp                           (notinrom::NotInROM-lookup sym))                      (load-trap sym)))                   (values sym (stream-position stream))))               (buffer-read buf b e)))            (if symbol              (return-from ed-current-sexp (values symbol end-pos))              (incf b))))        (when (not dont-skip) (setq b (buffer-skip-fwd-reader-macros buf b)))        ; skip from edit-definition, get-doc,        ; dont from read and and macroexpand        (buffer-read buf b e))      (values nil nil)))))