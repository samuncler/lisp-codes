(in-package :oou)(oou-provide :select-rectangle);*****************************************************************                                    ;; Copyright © 1991 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Matt Cartier;;; Changes (worth to be mentioned):; ------------------------------; none ;;*****************************************************************;*****************************************************************(oou-dependencies :resources-u)(export '(with-running-watch stop-watch));-----------------------------------------------------------------(defmethod select-rectangle ((self view) &optional the-anchor-point)  "THE-ANCHOR-POINT specifies the upper left position from which the rectwill be drawn and defaults to view-mouse-position."  ;;  (with-focused-view self    ;; Type check optional args.    (when (and the-anchor-point               (not (integerp the-anchor-point)))      (error "The-anchor-point ~S not a Macintosh point (integer)"             the-anchor-point))    ;;    (let* ((anchor-point (or the-anchor-point (view-mouse-position self)))           (old-mouse (view-mouse-position self))           (new-mouse old-mouse))      (rlet ((r :rect)             (old-pen-state :penstate))        (#_GetPenState :ptr old-pen-state)        (#_PenMode :word (position :patxor *pen-modes*))        (rset (wptr self) grafPort.pnPat *gray-pattern*)        (#_pt2rect :long anchor-point :long new-mouse :ptr r)        (#_FrameRect :ptr r)        (loop          (unless (mouse-down-p) (return))     ;return when the mouse lets up          (unless (eq old-mouse new-mouse)            (#_FrameRect :ptr r)            (#_pt2rect :long anchor-point :long new-mouse :ptr r)            (#_FrameRect :ptr r)            (sleep 1/60)            (setq old-mouse new-mouse))          (setq new-mouse (view-mouse-position self)))        (#_FrameRect :ptr r)        (#_SetPenState :ptr old-pen-state)        (values (rref r rect.topleft)                (rref r rect.bottomright))))))