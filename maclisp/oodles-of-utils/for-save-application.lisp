(in-package :oou)(oou-provide :for-save-application)(oou-dependencies :resources-u) ;(purge-functions nil)(defun to-do-before-save ()  (dispose-record *left-hand-cursor*)  (dispose-record *right-hand-cursor*)  (dispose-record *full-hand-cursor*)  (dispose-record *pointer-hand-cursor*)  (dispose-record *splitter-cursor*)  (dispose-record *cross-hair-cursor*)  (dispose-record *first-step-cursor*)  (dispose-record *second-step-cursor*)  (dispose-record *insert-cursor*)  (dispose-record *100%-gray-pattern*)  (dispose-record *75%-gray-pattern*)  (dispose-record *50%-gray-pattern*)  (dispose-record *25%-gray-pattern*)  (dispose-record *12%-gray-pattern*)  (dispose-record *6%-gray-pattern*)  (dispose-record *0%-gray-pattern*)  (dispose-record *example-pattern*)    (when (boundp '*standard-pen-state*)    (dispose-record *standard-pen-state*))  (when (boundp '*special-brownies*)    (setf *special-brownies* nil))  )      (defun to-do-after-startup ()  (setf *left-hand-cursor* (make-left-hand-cursor))  (setf *right-hand-cursor* (make-right-hand-cursor))  (setf *full-hand-cursor* (make-full-hand-cursor))  (setf *pointer-hand-cursor* (make-pointer-hand-cursor))  (setf *splitter-cursor* (make-splitter-cursor))  (setf *cross-hair-cursor* (make-cross-hair-cursor))  (setf *first-step-cursor* (make-first-step-cursor))  (setf *second-step-cursor* (make-second-step-cursor))  (setf *insert-cursor* (make-insert-cursor))  (setf *100%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 255                     (:pat 1) 255                     (:pat 2) 255                     (:pat 3) 255                     (:pat 4) 255                     (:pat 5) 255                      (:pat 6) 255                     (:pat 7) 255                     ))  (setf *75%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 255                     (:pat 1) 170                     (:pat 2) 255                     (:pat 3) 170                     (:pat 4) 255                     (:pat 5) 170                     (:pat 6) 255                     (:pat 7) 170                     ))  (setf *50%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 170                     (:pat 1) 85                     (:pat 2) 170                     (:pat 3) 85                     (:pat 4) 170                     (:pat 5) 85                     (:pat 6) 170                     (:pat 7) 85                     ))  (setf *25%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 85                     (:pat 2) 0                     (:pat 3) 85                     (:pat 4) 0                     (:pat 5) 85                     (:pat 6) 0                     (:pat 7) 85                     ))  (setf *12%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 68                     (:pat 2) 0                     (:pat 3) 17                     (:pat 4) 0                     (:pat 5) 68                     (:pat 6) 0                     (:pat 7) 17                     ))  (setf *6%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 0                     (:pat 2) 0                     (:pat 3) 17                     (:pat 4) 0                     (:pat 5) 0                     (:pat 6) 0                     (:pat 7) 17                     ))  (setf *3%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 0                     (:pat 2) 0                     (:pat 3) 16                     (:pat 4) 0                     (:pat 5) 0                     (:pat 6) 0                     (:pat 7) 1                     ))  (setf *0%-gray-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 0                     (:pat 2) 0                     (:pat 3) 0                     (:pat 4) 0                     (:pat 5) 0                     (:pat 6) 0                     (:pat 7) 0                     ))    (setf *example-pattern*        (make-record (:pattern :storage :pointer)                     (:pat 0) 238                     (:pat 1) 221                     (:pat 2) 187                     (:pat 3) 119                     (:pat 4) 238                     (:pat 5) 221                     (:pat 6) 187                     (:pat 7) 119                     ))   (setf *very-light-gray*        (make-record (:pattern :storage :pointer)                     (:pat 0) 0                     (:pat 1) 0                     (:pat 2) 0                     (:pat 3) 128                     (:pat 4) 0                     (:pat 5) 0                     (:pat 6) 32                     (:pat 7) 0                     ))  (setf *standard-pen-state* (make-record :penstate))  (setf (logical-pathname-translations "GoMan Texts")        `(("**;*.*" ,(format nil "~a~a" (mac-default-directory) "GoMan texts:**:")))))(push #'to-do-before-save *save-exit-functions*)(setf *restore-lisp-functions*          (append *restore-lisp-functions*                      (list #'to-do-after-startup)))