(in-package :oou)(oou-provide :scrollable-static-text-dim);*****************************************************************                                    ;; Copyright © 1991 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz;; Dialog item mixin for static text. It can be scrolled if the text is too long ; the text is vertically centered always.;; Changes (worth to be mentioned):; ------------------------------; none ;;*****************************************************************;*****************************************************************(require :QuickDraw)(oou-dependencies :simple-view-ce                              :unibas-cursors                              )#|(export '(scrollable-static-text-dim                scroll-position scroll-distance                draw-outline-p))|#;-------------------------------------------------------------------------- (defclass scrollable-static-text-dim ()   ((scroll-position :initform 2                             :accessor scroll-position)     (scroll-distance :initform 20                                :accessor scroll-distance)     (draw-outline-p :initform t                                :accessor draw-outline-p                                :initarg :draw-outline-p)     (wrapped-right :initform nil                              :accessor wrapped-right)     (wrapped-left :initform nil                              :accessor wrapped-left))   (:default-initargs      :view-font '("Chicago" :plain 12)))(defmethod view-draw-contents ((self scrollable-static-text-dim))   (with-focused-view self       (with-slots (scroll-position wrapped-right wrapped-left draw-outline-p) self           (let* ((dialog-item-text (dialog-item-text self))                     (font (view-font self))                     (vertical-position 0))              (fill-rect self *white-pattern*                        (if draw-outline-p #@(1 1) #@(0 0))                       (subtract-points  (view-size self)                                                    (if draw-outline-p #@(2 2) #@(0 0))))              (when dialog-item-text                  (multiple-value-bind (ascent descent widmax leading) (font-info font)                      (declare (ignore widmax leading))                      (move-to self                                       scroll-position                                      (setf vertical-position                                               (round (+ (/ (- (view-height self) ascent) 2)                                                               (- ascent descent))))))                  (princ dialog-item-text self)                  (setf wrapped-right (> (point-h (pen-position self))                                                      (view-width self)))                  (setf wrapped-left (< scroll-position 0))                  (when wrapped-right                      (fill-rect self *white-pattern*                                       (make-point (- (view-width self) 15)                                                          (if draw-outline-p 1 0))                                      (subtract-points (view-size self)                                                                  (if draw-outline-p #@(2 2) #@(-1 -1))))                      (move-to self (- (view-width  self) 15) vertical-position)                      (princ "..." self))                  (when wrapped-left                      (fill-rect self *white-pattern*                                       (if draw-outline-p #@(1 1) #@(-1 -1))                                      (make-point 15 (- (view-height self)                                                                    (if draw-outline-p 2 0))))                      (move-to self 1 vertical-position)                      (princ "..." self))))           (when draw-outline-p               (view-frame-with-shade self)))))(defmethod view-click-event-handler ((self scrollable-static-text-dim) where)   (with-slots (draw-outline-p wrapped-right wrapped-left scroll-position scroll-distance) self       (setf where (window-to-view self where))        (cond ((and (> (point-h where)                              (- (view-width self) 15))                         wrapped-right)                  (do ()                        ((or (not (mouse-down-p))                               (not wrapped-right)))                     (setf scroll-position (- scroll-position scroll-distance))                     (fill-rect self *white-pattern*                                      (if draw-outline-p #@(1 1) #@(0 0))                                     (subtract-points (view-size self)                                                                 (if draw-outline-p #@(2 2) #@(0 0))))                      (view-draw-contents self)                     (sleep 0.2)))                 ((and (< (point-h where) 15)                          wrapped-left)                   (do ()                         ((or (not (mouse-down-p))                               (not wrapped-left)))                      (setf scroll-position (+ scroll-position scroll-distance))                      (fill-rect self *white-pattern*                                      (if draw-outline-p #@(1 1) #@(0 0))                                     (subtract-points (view-size self)                                                                 (if draw-outline-p #@(2 2) #@(0 0))))                      (view-draw-contents self)                      (sleep 0.2))))))(defmethod view-cursor ((self scrollable-static-text-dim) where)   (with-slots (wrapped-right wrapped-left scroll-position scroll-distance) self       (if (or (and (> (point-h where)                              (- (view-width self) 15))                         wrapped-right)                  (and (< (point-h where) 15)                          wrapped-left))          *pointer-hand-cursor*          *arrow-cursor*)))(defmethod set-view-size :after ((self scrollable-static-text-dim) h &optional v)   (declare (ignore h v))    (setf (scroll-position self) 2)   (view-draw-contents self)) (defmethod set-dialog-item-text :before ((self scrollable-static-text-dim) text)   (declare (ignore text))   (setf (scroll-position self) 2));---------------------------------------------------------------------------#|(defclass scrollable-static-text-di (scrollable-static-text-dim static-text-dialog-item)   ())(make-instance 'window     :view-position '(:top 40)    :view-size #@(250 100)    :window-type :document    :window-title "Click on the three points"    :view-subviews    (list (make-instance 'scrollable-static-text-di                :view-size #@(130 30)                :view-position #@(10 10)                :dialog-item-text "Hello World. Here is a scrolling static text.")))|#