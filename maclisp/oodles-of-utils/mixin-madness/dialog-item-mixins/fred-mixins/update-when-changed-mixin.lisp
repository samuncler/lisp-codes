(in-package :oou)(oou-provide :update-when-changed-mixin);******************************************************************************                                    ;; Copyright © 1991 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz;; a mixin for editable-text-dialog-items;; Changes (worth to be mentioned):; ------------------------------; none ;;*******************************************************************************;*******************************************************************************(oou-dependencies   ) (export '(          ));-------------------------------------------------------------------------------(defclass update-when-changed-mixin ()  ((old-modcnt :initform nil               :accessor old-modcnt)   (old-size :initform nil             :accessor old-size)))(defmethod after-change-update-method ((self update-when-changed-mixin) &key (draw-now-p t))  (declare (ignore draw-now-p))  nil)(defmethod initialize-instance :after ((self update-when-changed-mixin) &rest initargs)  (declare (ignore initargs))  (setf (old-modcnt self) (buffer-modcnt (fred-buffer self)))  (after-change-update-method self :draw-now-p nil))(defmethod fred-update :before ((self update-when-changed-mixin))   (when (and (wptr self)             (old-modcnt self)             (/= (old-modcnt self) (buffer-modcnt (fred-buffer self))))    (after-change-update-method self :draw-now-p t))   (setf (old-modcnt self) (buffer-modcnt (fred-buffer self)))  (setf (old-size self) (buffer-size (fred-buffer self))))