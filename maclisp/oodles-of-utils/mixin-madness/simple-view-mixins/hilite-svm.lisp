(in-package :oou)(oou-provide :hilite-svm);*****************************************************************                                    ;; Copyright © 1991 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz ; ; mixin hiliting views.; ;; Changes (worth to be mentioned):; ------------------------------; none ;;*****************************************************************;*****************************************************************(require :QuickDraw)(oou-dependencies                                 )(export '(hilite-svm               ));---------------------------------------------------------------------------(defclass hilite-svm ()   ((hilited :initform nil                 :accessor hilited                 :initarg :hilited)))(defmethod hilite-view ((self hilite-svm) hilite-flag)    (with-slots (hilited) self         (cond ((and (null hilited)                               hilite-flag)                     (view-invert self)                     (setf hilited t))                   ((and  hilited                               (null hilite-flag))                     (view-invert self)                     (setf hilited nil)))))(defmethod view-draw-contents :around ((self hilite-svm))    (cond ((hilited self)                ;(invalidate-view self t)                (setf (hilited self) nil)                (call-next-method)                (hilite-view self t))              (t (call-next-method))))              #|(defclass hilited-window (hilite-svm window)    ())(setf test-window (make-instance 'hilited-window))(hilite-view  test-window t)(hilite-view  test-window nil)       |#