(in-package :oou)(oou-provide :3d-icon-di);*****************************************************************                                    ;; Copyright © 1996 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz;; an icon with a 3d-look; ;; Changes (worth to be mentioned):; ------------------------------; none ; ;*****************************************************************;***************************************************************** (oou-dependencies :unibas-icon-di                  :3d-look-svm)(export '( ));---------------------------------------------------------------------------(defparameter *icon-down-effect* (make-instance '3d-effect                                   :back  *light-gray-color* ;(make-gray-color 30)                                    :frame (make-gray-color 0)                                   :frame-corner *tool-back-color*                                   :effect-frame-one-top-left (make-gray-color 0)                                   :effect-frame-one-bottom-right *white-color*                                   :effect-frame-one-bottom-right-corner *white-color*                                   :effect-frame-two-top-left (make-gray-color 45)                                   :effect-frame-two-bottom-right *light-gray-color* ;(make-gray-color 87)                                   ))(defclass 3d-icon-di (3d-look-svm icon-di)  ((icon-down-effect :initform *icon-down-effect*                     :initarg :icon-down-effect                     :accessor icon-down-effect))  (:default-initargs     :draw-outline nil    :3d-effect *3d-up-effect-powerbook*    :PICT-scaling :center-in-view    :rsrc-file "oou:resources stuff"))(defmethod scale-view-size ((view 3d-icon-di))  (when (and (slot-boundp view 'rsrc-handle)             (handlep (slot-value view 'rsrc-handle)))    (set-view-size view                   (add-points (graphic-size view (slot-value view 'rsrc-handle)) #@(6 6)))))(defmethod rsrc-handle-install :after ((view 3d-icon-di))  (scale-view-size view))(defmethod hilite-view ((view 3d-icon-di) hilite-flag)  (when (wptr view)    (cond (hilite-flag           (with-focused-view view             (with-fore-color  (back (3d-effect view))               (#_MoveTo 3 (- (view-height view) 3))               (#_Line 0 (- (- (view-height view) 6)))               (#_Line (- (view-width view) 6) 0))             (rlet ((rect :rect                          :topleft #@(4 4)                          :bottomright (add-points (view-size view) #@(-2 -2))))               (draw-background (icon-down-effect view) view)               (Draw-PICT (slot-value view 'oou::rsrc-handle) rect)               ;(draw-graphic view (slot-value view 'rsrc-handle) rect)               )           (if (eq (3d-effect view) *3d-up-effect-powerbook*)             (draw-3d-effect (icon-down-effect view) view)             (draw-3d-effect *3d-up-effect-powerbook* view))))          (t           (ccl::force-view-draw-contents view)           (validate-view view)))))(defmethod view-draw-contents :around ((view 3d-icon-di))  (with-focused-view (view-container view)    (call-next-method)))  (defmethod draw-text ((self 3d-icon-di))   nil)          #|(make-instance 'window   :window-title "3D-icons"  :window-type :document  :back-color *light-gray-color*  :view-size #@(150 80)  :view-position :centered  :view-subviews  (list (make-instance '3d-icon-di          :view-position #@(20 20)          :rsrc-id 183)        (make-instance '3d-icon-di          :view-position #@(90 20)          :rsrc-id 184          )))|#