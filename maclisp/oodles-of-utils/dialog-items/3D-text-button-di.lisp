(in-package :oou)(oou-provide :3D-text-button-di);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 3D-text-button-di.Lisp;;;; Copyright © 1991 Northwestern University Institute for the Learning Sciences;; All Rights Reserved;;;; author: Michael S. Engber;;;; A rectangular text button with a 3D look;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(oou-dependencies :disable-dim :button-dim :frame-3D-svm :static-text-di)(export '(3D-text-button-di));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(defclass 3D-text-button-di (disable-dim button-dim frame-3D-svm static-text-di) ())(defmethod text-margins ((di 3D-text-button-di))  (multiple-value-bind (tl-margin br-margin) (call-next-method)    (let ((p (make-point (frame-width di) (frame-width di))))      (values (add-points tl-margin p) (add-points br-margin p)))));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;#|;;; a modest example(progn  (setf *test-w*        (make-instance 'dialog                       :window-type :document                       :view-position :centered                       :view-size #@(200 100)                       :window-title "rect-button-dim demo"                       ))  (with-focused-view *test-w* (#_BackPat *gray-pattern*))  (invalidate-view *test-w* t)  (add-subviews *test-w* (make-dialog-item '3D-text-button-di                                           #@(20 20)                                           #@(163 30)                                           "awesome 3D button"                                           #'(lambda (item) (declare (ignore item)) (ed-beep))                                           :view-nick-name :butt                                           )));(setf (just (view-named :butt *test-w*)) :left);(setf (frame-width (view-named :butt *test-w*)) 6);(dialog-item-disable (view-named :butt *test-w*))|#