(in-package :oou)(oou-provide :blinking-menu);*****************************************************************                                    ;; Copyright © 1996 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz;; blinking while it is installed.; ;; Changes (worth to be mentioned):; ------------------------------; none ;;*****************************************************************;*****************************************************************(oou-dependencies :periodic-task)(export '());-----------------------------------------------------------------(defclass blinking-menu (menu)  ((hilited-p :initform nil              :accessor hilited-p)   (blinking-task :initform nil                  :accessor blinking-task)))(defmethod blink-menu ((m menu) (task task))  (if (hilited-p m)    (#_HiliteMenu 0)    (#_HiliteMenu (menu-id m)))  (setf (hilited-p m) (not (hilited-p m))))(defmethod initialize-instance :after ((m blinking-menu) &rest initargs)  (declare (ignore initargs))  (setf (blinking-task m)         (make-instance 'task          :name "blinking menu task"          :period 1          :brownie (periodic-task-brownie)          :prefabs (list m)          :to-do #'blink-menu)))(defmethod needs-execution-p ((m blinking-menu) (task task))  (and ccl::*foreground*       (menu-installed-p m)))(defmethod menu-install :after ((m blinking-menu))  (let ((task (blinking-task m)))    (setf (next-execution-tick task) 0)    (setf (oou::brownie task) (periodic-task-brownie))    (give-task task)))(defmethod menu-deinstall :before ((m blinking-menu))  (cancel-task (blinking-task m)))#|(setf bm (make-instance 'blinking-menu            :menu-title "Blinking"))(menu-install bm)(menu-deinstall bm)|#       