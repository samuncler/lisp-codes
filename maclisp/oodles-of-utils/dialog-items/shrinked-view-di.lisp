(in-package :oou)(oou-provide :shrinked-view-di);*****************************************************************                                    ;; Copyright © 1991-96 Institut fuer Informatik, University of Basel, Switzerland ; All Rights Reserved;; Author: Dieter Holz;; Dialog items items with images of other views in them.  ; They are droppable and resizable ; ;; Changes (worth to be mentioned):; ------------------------------; none ;;*****************************************************************;*****************************************************************(oou-dependencies :unibas-macros                  :simple-view-ce                  :unibas-cursors                  :resizable-dim                  :droppable-dim                  :picture-dim                  :color-svm                  )(export '(shrinked-view-di));--------------------------------------------------------------------------(defclass shrinked-view-di (picture-dim resizable-dim droppable-dim view)  ()  (:default-initargs    :PICT-scaling :scale-to-view    :handle-size 6    :drag-bounds :window))     (defmethod view-cursor ((self shrinked-view-di) point)  (declare (ignore point))  *full-hand-cursor*);--------------------------------------------------------------------------#|(defclass example-subview (view)  ())(defmethod view-draw-contents :after ((self example-subview))  (view-frame-outside self))(make-instance 'window  :window-title "shrinked top-listener"   :view-position :centered  :view-size (add-points (view-size *top-listener*) #@( 50 50))  :view-subviews  (list (make-instance 'shrinked-view-di          :view-size #@(100 100)          :view-position #@(10 10)          :drag-bounds :none          :picture (get-picture-from-view Dialog *top-listener*))        (make-instance 'shrinked-view-di          :view-size #@(100 100)          :view-position #@(130 10)          :picture (get-picture-from-view *top-listener*))        (make-instance 'example-subview          :view-size #@(200 200)          :view-position #@(250 10)          :view-subviews           (list (make-instance 'shrinked-view-di                  :view-size #@(100 100)                  :view-position #@(10 10)                  :drag-bounds :container                  :picture (get-picture-from-view *top-listener*))))))|#                                                                