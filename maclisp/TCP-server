Hi,                          the following modification of Your code does what you want, as far as                          I understand You.                          (defun start-daemon ()                            (ccl::init-opentransport)                            (process-run-function '(:name "OZONE Daemon" :background-p t)                                                  #'run-daemon-server)                            (ccl::opentransport-cleanup))                                                     (defun run-daemon-server ()                            (loop                               (let* ((host nil)                                    (port 1025)                                    (stream (ccl::open-tcp-stream  host port)))                              (format t "~% IN RUN DAEMON SERVER STREAM = ~A" stream)                              (format t "~% STATE OF CONNECTION ~A"                                      (ccl::opentransport-stream-connection-state stream))                              (process-wait "Waiting for connection"                                            #'(lambda()                                                 (eq :dataxfer                                                    (ccl::opentransport-stream-connection-state                          stream))))     (process-run-function '(:name "connection handler"                          :background-p t)                           #'connection-handler stream))))                                                     (defun connection-handler (stream)                              (format t "~% CONNECTION ESTABLISHED STREAM ~A" stream)                            (loop with token = nil                                   while t                                  do (process-wait                                       "Waiting for input"                                      #'(lambda()                                             (or                                             (eq :closed                                                (ccl::opentransport-stream-connection-state                          stream))                   (listen stream))))                                    do (format t "~% STATE OF CONNECTION ~A ~A" stream                                                     (ccl::opentransport-stream-connection-state stream))                                                                   if (listen stream)                                    do (loop while (listen stream)                                            do (format t "~% ~A" (setf token (ccl::telnet-read-line                                                                              stream))))                                    and do  (format t "~% TOKEN ~A ~A" token (string= token                          "quit"))           and if (string= token "quit")                                    do (close stream)                                    if  (eq :closed (ccl::opentransport-stream-connection-state                          stream))           do (format t "~% CLOSING STREAM")                                    and do (return)))                                                     #|                          (start-daemon)                          |#                                                     Marcel Becker wrote:                          >                           >    I am trying to write a daemon process that would accept incoming                          > TCP/IP connection                          > requests. I am using OpenTransport and using the  attached code to                          start                          > the background process                          > and open the a tcp stream using "OPEN-TCP-STREAM." Ican then                          create a                          > new tcp stream                          > and connect to the stream in the background process.                          >    What I want to do, however,  is to open several connections to                          this                          > process. That is,                          > every time a connection is requested, I want to span a new process                          and                          > establish a socket/stream                          > between the process requesting the connection and the new process                          created.                          >    My question is: How can I open this new stream to connect the two                          > process and keep my daemon                          > running ?                          >                           > Thank you                          > Marcel Becker                          > The Robotics Institute                          > Carnegie Mellon University                          > ...