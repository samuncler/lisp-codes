*CENV-RESOURCE-TYPE*@d[@iVariable@d]The resource type of Think C code resources. Defaults to @p:|TCCD|@d.*COMPILE-UNITS*@d[@iVariable@d]This variable is the default value for the @p:compile@d keyword argument of the @pload-unit@d and @pload-unit-dependencies@d functions.*THINK-C-FOLDER*@d[@iVariable@d]The folder where @pdefcenv@d expects to find resource files when they are not explicitly given. Defaults to @p"think-c:"@d.*UNIT-REGISTRY*@d[@iVariable@d]This variable contains the list of directories that will be scanned to find unit definition files. It defaults to @pnil@d and is altered by the LOADME file of Cartier's Contribs.%GET-DOUBLE@p@ipointer@p &optional @ioffset@p@d[@iFunction@d]Gets the double float stored at @ipointer@d + @ioffset@d. @iOffset@d defaults to 0.%MAKE-DOUBLE@p&optional @ifloat@p@d[@iFunction@d]Allocates memory for a double float and optionally initializes it to @ifloat@d.%PUT-DOUBLE@p@ipointer@p @ifloat@p &optional @ioffset@p@d[@iFunction@d]Stores @ifloat@d as a double at the address @ipointer@d + @ioffset@d. @iOffset@d defaults to 0.CLOSE-CENV@p@ienv-name@p@d[@iFunction@d]Closes the resource file associated with @ienv-name@d. Note that if your code resource is multi-segmented, it is imperative that you do not use it after it has been closed. If you do so, MCL will almost surely crash with an error of type 25!COMPILE-UNIT@p@iunit@p@d[@iFunction@d]Compiles every source file of @iunit@d that needs to be compiled. The only criterion for deciding if a source file must be compiled is when its associated fasl file is less recent than itself.COMPUTE-UNIT-DEPENDANTS@p@iunit@p@d[@iFunction@d]Computes a list of all the units that depends on @iunit@d either directly or indirectly.COMPUTE-UNIT-DEPENDENCIES@p@iunit@p@d[@iFunction@d]Computes a list of all the units upon which @iunit@d depends on either directly or indirectly.DEFCENV@p@iname@p &key @iresource-file@p@d[@iMacro@d]Defines a new C environment named @iname@d. The code resource file associated with this new C environment will be @iresource-file@d which defaults to concatening @p*think-c-folder*@d and @iname@d.DEFCMODULE@p@iname@p &key @ivariables@p @ifunctions@p@d[@iMacro@d]Defines a new C module named @iname@d.DEFCOLLECTION@p@iname@p &key @imodifiers@p @icollector@p @iordering@p @ifirst-special@p@d[@iMacro@d]Defines a new collection named @iname@d, that will be popped-up when a @imodifiers@d-click is done in the title bar of any fred window. To collect the interesting items, @icollector@d, which must be a function, will be called on the buffer of the window whose title bar was clicked. @iCollector@d must return a list of collection items (see @pmake-collection-item@d). You can pass an ordering function (defaulting to the @pidentity@d function) that can be used to order the found items.DEFINED-UNITS@d[@iFunction@d]Returns a list of all the units that have been defined.DEFUNIT@p@iname@p @@keylist @irequires@p @idepends-on@p @isource-pathname@p @ibinary-pathname@p @icomponents@p@d[@iMacro@d]Defines a unit named @iname@d. You can specify loading dependencies to MCL modules using @irequires@d and dependencies to other units using @idepends-on@d. The source files composing this units are listed in @icomponents@d. If @isource-pathname@d is specified, this string will be prepended to all the source files. Compiled files will go into @ibinary-pathname@d.EDIT-UNIT@p@iunit@p &key @idefinition@p@d[@iFunction@d]Edits every source file of @iunit@d. If @idefinition@d is @pt@d (it defaults to @pnil@d), then the unit definition file of @iunit@d is also edited.EDIT-UNIT-DEFINITION@p@iunit@p@d[@iFunction@d]Edits the unit definition file of @iunit@d.FONT-SPEC-COLLECTOR@p@ifont-spec@p@d[@iFunction@d]This collector scans a buffer, returning all the strings that are in the @ifont-spec@d font. The @pcomments@d collection that is defined at the end of the @pcollections.lisp@d file uses this collector.GENERATE-ONLINE-HELP-MAP@p@iname@p &key @isize@p @ipackage@p @ihelp-file@p @ihelp-map@p@d[@iFunction@d]Generates a fasl file called @ihelp-map@d that when loaded will integrate the help contained in @ihelp-file@d to MCL's help system. When loaded, @ihelp-map@d assumes that its help file is located in the same directory as itself. This feature enables your help files to work correctly even when moved from their original folder. @iName@d can be any symbol and serves to identify uniquely your online help. @iSize@d should be an approximation of the number of entries in your help file. A restriction to help files is that all symbols in it are to be read in the same package, that package beeing @ipackage@d.HARDCOPY-UNIT@p@iunit@p &key @idefinition@p@d[@iFunction@d]Harcopies every source file of @iunit@d. If @idefinition@d is @pt@d (it defaults to @pnil@d), then the unit definition file of @iunit@d is also hardcopied. Note that the Print dialog will not be shown before hardcopying.HARDCOPY-UNIT-DEFINITION@p@iunit@p@d[@iFunction@d]Hardcopies the unit definition file of @iunit@d.LINK-CMODULE@p@imodule-name@p @ienv-name@p@d[@iFunction@d]Links every variable and function definitions contained in @imodule-name@d to their effective address in the code resource @ienv-name@d.LOAD-ALL-UNIT-DEFINITIONS@d[@iFunction@d]Tries to load every unit definitions that are not already present. It scans every file in @p*unit-registry*@d and loads them unless the file names a unit already loaded in memory.LOAD-UNIT@p@iunit@p &key @iforce@p @icompile@p@d[@iFunction@d]If @iunit@d is not already loaded, the source files associated with @iunit@d are loaded in the order of appearance in the defunit form. Before loading @iunit@d, all module and unit dependencies will be loaded. If @iforce@d is t, @iunit@d will always be loaded.LOAD-UNIT-DEFINITION@p@iunit@p@d[@iFunction@d]Loads the unit definition file associated with @iunit@d even if @iunit@d was already defined.LOAD-UNIT-DEPENDENCIES@p@iunit@p &key @icompile@p@d[@iFunction@d]Loads all the unit dependencies of @iunit@d.LOADED-UNITS@d[@iFunction@d]Returns a list of all the units that have been succesfully loaded.MAKE-COLLECTION-ITEM@p@ibuffer@p @istring@p @iposition@p@d[@iFunction@d]Creates a collection item for @ibuffer@d that will be displayed in the pop-up menu as @istring@d and that will get you to @iposition@d in @ibuffer@d. Note that a mark is created so that inserted or deleted text before @iposition@d will not affect correct positioning.MAKE-POPPER-MENU@p@imenu-items@p@d[@iFunction@d]Creates a new popper menu with menu-items @imenu-items@d.MAKE-LIST-POPPER-MENU@p@ilist@p@d[@iFunction@d]Makes a popper menu showing the elements of @ilist@d. The returned value from @ppop-popper-menu@d when used to pop the newly creater popper menu, will be the selected item from @ilist@d or @p(values)@d if no selection was made.OPEN-CENV@p@ienv-name@p@d[@iFunction@d]Opens the resource file associated with @ienv-name@d.POP-POPPER-MENU@p@ipopper-menu@p@d[@iFunction@d]Pops-up @ipopper-menu@d. Note that this function must only be called in reponse to a mouse click because the trap @pPopUpMenuSelect@d expects the mouse button to be pushed when called.RECOMPILE-UNIT@p@iunit@p@d[@iFunction@d]Compiles every source file of @iunit@d even if its associated fasl file is more recent than itself.RETURN-FROM-POPPER-MENU@p@ivalue@p@d[@iFunction@d]Call this function from the @pmenu-item-action@d of a menu-item activated from a call to @ppop-popper-menu@d to return @ivalue@d from @ppop-popper-menu@d.UNDEFCOLLECTION@p@iname@p@d[@iFunction@d]Undefines the collection named @iname@d.UNDEFUNIT@p@iunit@p@d[@iFunction@d]Removes the unit definition associated with @iunit@d.WHO-CALLS@p@ifunction@p@d[@iFunction@d]Returns a list of signatures for all the toplevel forms inside of which a call to @ifunction@d occurs.WHO-EXPANDS@p@imacro@p@d[@iFunction@d]Returns a list of signatures for all the toplevel forms inside of which a macro expansion of @imacro@d occurs.WHO-MENTIONS@p@isymbol@p@d[@iFunction@d]Returns the union of (@pwho-calls@d @isymbol@d) (@pwho-references@d @isymbol@d) and (@pwho-expands@d @isymbol@d).WHO-REFERENCES@p@ivariable@p@d[@iFunction@d]Returns a list of signatures for all the toplevel forms inside of which a reference to @ivariable@d occurs.