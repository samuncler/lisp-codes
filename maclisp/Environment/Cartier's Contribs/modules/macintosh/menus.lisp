;;; -*- package: CC -*-;;;;;;; Menu stuff;;;(in-package "CC")(defun set-menu-items (menu menu-items)  (apply (function remove-menu-items) menu (menu-items menu))  (apply (function add-menu-items) menu menu-items))(defun make-empty-menu-item ()  (make-instance 'menu-item    :menu-item-title "-"))(defun clone-menu-item (menu-item)  (make-instance (class-of menu-item)    :menu-item-title (menu-item-title menu-item)    :menu-item-action (menu-item-action-function menu-item)    :style (menu-item-style menu-item)    :menu-item-checked (menu-item-check-mark menu-item)    :command-key (command-key menu-item)    :menu-item-colors (part-color-list menu-item)    :help-spec (help-spec menu-item)    :update-function (menu-item-update-function menu-item)));;;;;;; Menus with icons;;;(defclass icon-menu (menu)    ())(defmethod menu-install :after ((menu icon-menu))  (let ((menu-items (menu-items menu)))    (dolist (mi menu-items)      (when (subtypep (type-of mi) 'icon-menu-item)        (#_SetItemIcon (menu-handle menu)                       (+ (position mi menu-items) 1)                       (slot-value mi 'icon-id))))))(defclass icon-menu-item (menu-item)    ((icon-id :initarg :icon-id)))